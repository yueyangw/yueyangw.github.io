<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog of YorkWu</title>
  
  <subtitle>山西省实验中学蒟蒻OIer</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yueyangwu.cn/"/>
  <updated>2019-07-16T10:19:37.204Z</updated>
  <id>http://yueyangwu.cn/</id>
  
  <author>
    <name>Yueyang Wu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>清北学堂noip2019-Day4</title>
    <link href="http://yueyangwu.cn/2019/07/16/%E6%B8%85%E5%8C%97%E5%AD%A6%E5%A0%82noip2019-Day4/"/>
    <id>http://yueyangwu.cn/2019/07/16/清北学堂noip2019-Day4/</id>
    <published>2019-07-16T00:16:20.000Z</published>
    <updated>2019-07-16T10:19:37.204Z</updated>
    
    <content type="html"><![CDATA[<h2 id="图论"><a href="#图论" class="headerlink" title="图论"></a>图论</h2><a id="more"></a><hr><h3 id="Boruvka算法求最小生成树"><a href="#Boruvka算法求最小生成树" class="headerlink" title="Boruvka算法求最小生成树"></a>Boruvka算法求最小生成树</h3><ul><li>每次对每个当前的连通分量都找到连出的最短边，尝试<br>一同加入。</li><li>此算法的正确性证明与Prim 算法类似，可以看作并行<br>的Prim.</li><li>而且更好的性质是，如果这些最短边两两不同，一定是</li><li>可以加入的（若有环，环上最大边根本不会被选！）。<br>加入完后新一轮缩点即可。</li><li>边权相同的情况用一些方法破环，比如权相同时选序号<br>最小的。</li><li>期望复杂度线性，优于普通Prim、堆优化Prim、Kruskal（注意是大大优于Kruskal，因为Kruskal 瓶颈是排序而不是并查集，后者可视作线性）。</li><li>最坏复杂度与Kruskal 同阶。</li></ul><hr><h3 id="k短路，k小生成树"><a href="#k短路，k小生成树" class="headerlink" title="k短路，k小生成树"></a>k短路，k小生成树</h3><ul><li>以上理论算法的拓展较多，如次小生成树、次短路乃至<br>更一般的k 短路、k 小生成树，这方面可以详见俞鼎力的国家集训队论文，有比较系统的整理。</li></ul><hr><h3 id="经典题型"><a href="#经典题型" class="headerlink" title="经典题型"></a>经典题型</h3><h4 id="2-SAT"><a href="#2-SAT" class="headerlink" title="2-SAT"></a>2-SAT</h4><ul><li><p>婚礼问题</p><p>  n对未婚夫妻想举行婚礼，每对有两个可供选择的时间，一个司仪能否参与所有婚礼？</p></li><li><p>本题甚至不需要利用时间的连续性质，直接把这道特殊<br>题转化为一般情况，任意给定每两对夫妻的两个时段的冲突情况也可解决。</p></li><li><p>每一对未婚夫妻拆点，不妨记为i1 和i2，那么i1 和j1<br>冲突就意味着i1 必选j2，j1 必选i2，因此由i1 向j2 连边，j1 向i2 连边。</p></li><li><p>每对必须选且仅选一个，且选了一个点必须选它的后继。</p></li><li><p>容易想到按照拓扑序贪心，但为了得到拓扑序必须先求<br>强连通分量缩点。</p></li><li><p>若某对夫妻的两点在同一个强连通分量中显然无解。<br>逆拓扑序选点即可，每选一个点立刻删除该对夫妻另一<br>个点，并递归删除前驱。</p></li><li><p>由于原图的对称性，缩点后仍然对称，因此这种贪心的<br>正确性易证。</p></li></ul><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">int</span> n, m;</span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Edge</span>&#123;</span></span><br><span class="line">    <span class="hljs-keyword">int</span> to, nxt;</span><br><span class="line">&#125;e[<span class="hljs-number">4000009</span>];</span><br><span class="line"><span class="hljs-keyword">int</span> head[<span class="hljs-number">2000009</span>], tot;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">int</span> dfn[<span class="hljs-number">2000009</span>], low[<span class="hljs-number">2000009</span>], Time, color[<span class="hljs-number">2000009</span>], group;</span><br><span class="line"><span class="hljs-keyword">bool</span> vis[<span class="hljs-number">2000009</span>];</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">add</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x, <span class="hljs-keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    e[++tot].to = y;</span><br><span class="line">    e[tot].nxt = head[x];</span><br><span class="line">    head[x] = tot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">stack</span>&lt;<span class="hljs-keyword">int</span>&gt; st;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">tarjan</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    low[x] = dfn[x] = ++Time;</span><br><span class="line">    vis[x] = <span class="hljs-number">1</span>;</span><br><span class="line">    st.push(x);</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = head[x]; i; i = e[i].nxt)&#123;</span><br><span class="line">        <span class="hljs-keyword">int</span> y = e[i].to;</span><br><span class="line">        <span class="hljs-keyword">if</span>(!dfn[y])&#123;</span><br><span class="line">            tarjan(y);</span><br><span class="line">            low[x] = min(low[x], low[y]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(vis[y])&#123;</span><br><span class="line">            low[x] = min(low[x], dfn[y]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">if</span>(dfn[x] == low[x])&#123;</span><br><span class="line">        group++;</span><br><span class="line">        <span class="hljs-keyword">while</span>(st.top() != x &amp;&amp; !st.empty())&#123;</span><br><span class="line">            <span class="hljs-keyword">int</span> q = st.top();</span><br><span class="line">            st.pop();</span><br><span class="line">            color[q] = group;</span><br><span class="line">            vis[q] = <span class="hljs-number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        color[st.top()] = group;</span><br><span class="line">        vis[x] = <span class="hljs-number">0</span>;</span><br><span class="line">        st.pop();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= m; i++)&#123;</span><br><span class="line">        <span class="hljs-keyword">int</span> x, xv, y, yv;</span><br><span class="line">        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d%d%d%d"</span>, &amp;x, &amp;xv, &amp;y, &amp;yv);</span><br><span class="line">        add(x + !xv * n, y + yv * n);</span><br><span class="line">        add(y + !yv * n, x + xv * n);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">2</span> * n; i++)&#123;</span><br><span class="line">        <span class="hljs-keyword">if</span>(!dfn[i]) tarjan(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        <span class="hljs-keyword">if</span>(color[i] == color[i + n])&#123;</span><br><span class="line">            <span class="hljs-built_in">printf</span>(<span class="hljs-string">"IMPOSSIBLE\n"</span>);</span><br><span class="line">            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"POSSIBLE\n"</span>);</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d "</span>, color[i] &gt; color[i + n]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="带锁最短路"><a href="#带锁最短路" class="headerlink" title="带锁最短路"></a>带锁最短路</h4><ul><li><p>钥匙路径</p><p>  图的一些边上有锁，共有k 类锁（k 非常小，10 以内），一些边上有钥匙，每种钥匙对应一种锁，求最短路。</p></li><li><p>显然手上的钥匙不同能走的路径截然不同，应该把不同的手上钥匙状态视为不同状态。</p></li><li><p>用d[i][j] 表示钥匙状态为j 时走到点i 的最短距离，j 需要记录所有种类钥匙的有无。</p></li><li><p>此类问题容易遇到转移顺序的问题，所幸本题中钥匙只可能越来越多不可能变少，按钥匙数从少到多处理当前钥匙状态到所有点的距离即可，相同钥匙数更新顺序任意，注意计算时不仅要更新本层还要给钥匙数更多的状态提前更新“初始值”。</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;图论&quot;&gt;&lt;a href=&quot;#图论&quot; class=&quot;headerlink&quot; title=&quot;图论&quot;&gt;&lt;/a&gt;图论&lt;/h2&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yueyangwu.cn/categories/OI/"/>
    
      <category term="集训" scheme="http://yueyangwu.cn/categories/OI/%E9%9B%86%E8%AE%AD/"/>
    
    
  </entry>
  
  <entry>
    <title>清北学堂noip2019-Day3</title>
    <link href="http://yueyangwu.cn/2019/07/15/%E6%B8%85%E5%8C%97%E5%AD%A6%E5%A0%82noip2019-Day3/"/>
    <id>http://yueyangwu.cn/2019/07/15/清北学堂noip2019-Day3/</id>
    <published>2019-07-15T00:10:20.000Z</published>
    <updated>2019-07-15T08:11:49.502Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><a id="more"></a><hr><h2 id="并查集"><a href="#并查集" class="headerlink" title="并查集"></a>并查集</h2><h3 id="problem-1"><a href="#problem-1" class="headerlink" title="problem 1"></a>problem 1</h3><h4 id="UVA1329-Corporative-Network"><a href="#UVA1329-Corporative-Network" class="headerlink" title="UVA1329 Corporative Network"></a><a href="https://www.luogu.org/problemnew/show/UVA1329" target="_blank" rel="noopener">UVA1329 Corporative Network</a></h4><p><img src="/img/d3p1.png" alt="d3p1"></p><h4 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h4><ul><li><p>注意I操作与并查集的加边操作类似</p></li><li><p>只需在维护父亲节点时，同时维护到父亲节点的距离即可</p><p>  <img src="/img/d3p2.png" alt="d3p2"></p></li></ul><p>简单滴很</p><hr><h2 id="线段树"><a href="#线段树" class="headerlink" title="线段树"></a>线段树</h2><h3 id="problem-1-1"><a href="#problem-1-1" class="headerlink" title="problem 1"></a>problem 1</h3><h4 id="poj2892"><a href="#poj2892" class="headerlink" title="poj2892"></a>poj2892</h4><p>题目描述：<br>    有一个长度为n的链，初始每个点都是完好的<br>    需要支持m个操作</p><ul><li><p>(1) D x：表示将第x个点摧毁</p></li><li><p>(2) Q x：表示询问包含x的未被摧毁的最长子链长度</p></li><li><p>(3)  R  ：表示撤销上一个D操作</p></li><li><p>注意每个点可能被摧毁多次</p><h4 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h4></li><li><p>显然，每次直接修改，使用for循环判断会超时。<br>  这时就需要使用数据结构维护。<br>  考虑使用线段树。</p></li><li><p>在每个节点保存的信息</p><ol><li>区间里的点是否全都是完好的</li><li>从区间左端点开始向右延伸最长完好子链</li><li>从区间右端点开始向左延伸最长完好子链</li></ol></li></ul><p>修改时修改每个受影响的线段树节点</p><p>查询时拆分区间查询</p><p><img src="/img/d3p3.png" alt><br><img src="/img/d3p4.png" alt><br><img src="/img/d3p5.png" alt><br><img src="/img/d3p6.png" alt></p><hr><h3 id="problem-2"><a href="#problem-2" class="headerlink" title="problem 2"></a>problem 2</h3><h4 id="线段树2"><a href="#线段树2" class="headerlink" title="线段树2"></a><a href="https://www.luogu.org/problemnew/show/P3373" target="_blank" rel="noopener">线段树2</a></h4><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> ll;</span><br><span class="line"><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> MAXN=<span class="hljs-number">100000</span>;</span><br><span class="line">ll tree[<span class="hljs-number">4</span>*MAXN+<span class="hljs-number">10</span>],add[<span class="hljs-number">4</span>*MAXN+<span class="hljs-number">10</span>],mul[<span class="hljs-number">4</span>*MAXN+<span class="hljs-number">10</span>],a[MAXN+<span class="hljs-number">10</span>],p;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">build</span><span class="hljs-params">(<span class="hljs-keyword">int</span> k,<span class="hljs-keyword">int</span> l,<span class="hljs-keyword">int</span> r)</span></span>&#123;</span><br><span class="line">add[k]=<span class="hljs-number">0</span>;mul[k]=<span class="hljs-number">1</span>;</span><br><span class="line"><span class="hljs-keyword">if</span>(l==r)&#123;</span><br><span class="line">tree[k]=a[r];</span><br><span class="line"><span class="hljs-keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">int</span> mid=(l+r)&gt;&gt;<span class="hljs-number">1</span>;</span><br><span class="line">build(k&lt;&lt;<span class="hljs-number">1</span>,l,mid);</span><br><span class="line">build(k&lt;&lt;<span class="hljs-number">1</span>|<span class="hljs-number">1</span>,mid+<span class="hljs-number">1</span>,r);</span><br><span class="line">tree[k]=(tree[k&lt;&lt;<span class="hljs-number">1</span>]+tree[k&lt;&lt;<span class="hljs-number">1</span>|<span class="hljs-number">1</span>])%p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">pushdown</span><span class="hljs-params">(<span class="hljs-keyword">int</span> k,<span class="hljs-keyword">int</span> l,<span class="hljs-keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> mid=(l+r)&gt;&gt;<span class="hljs-number">1</span>;</span><br><span class="line">tree[k&lt;&lt;<span class="hljs-number">1</span>]=(tree[k&lt;&lt;<span class="hljs-number">1</span>]*mul[k]+add[k]*(mid-l+<span class="hljs-number">1</span>))%p;</span><br><span class="line">tree[k&lt;&lt;<span class="hljs-number">1</span>|<span class="hljs-number">1</span>]=(tree[k&lt;&lt;<span class="hljs-number">1</span>|<span class="hljs-number">1</span>]*mul[k]+add[k]*(r-mid))%p;</span><br><span class="line">mul[k&lt;&lt;<span class="hljs-number">1</span>]=(mul[k]*mul[k&lt;&lt;<span class="hljs-number">1</span>])%p;</span><br><span class="line">mul[k&lt;&lt;<span class="hljs-number">1</span>|<span class="hljs-number">1</span>]=(mul[k]*mul[k&lt;&lt;<span class="hljs-number">1</span>|<span class="hljs-number">1</span>])%p;</span><br><span class="line">add[k&lt;&lt;<span class="hljs-number">1</span>]=(add[k&lt;&lt;<span class="hljs-number">1</span>]*mul[k]+add[k])%p;</span><br><span class="line">add[k&lt;&lt;<span class="hljs-number">1</span>|<span class="hljs-number">1</span>]=(add[k&lt;&lt;<span class="hljs-number">1</span>|<span class="hljs-number">1</span>]*mul[k]+add[k])%p;</span><br><span class="line">mul[k]=<span class="hljs-number">1</span>;</span><br><span class="line">add[k]=<span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">m_1</span><span class="hljs-params">(<span class="hljs-keyword">int</span> k,<span class="hljs-keyword">int</span> l,<span class="hljs-keyword">int</span> r,<span class="hljs-keyword">int</span> x,<span class="hljs-keyword">int</span> y,ll v)</span></span>&#123;</span><br><span class="line"><span class="hljs-keyword">if</span>(y&lt;l||x&gt;r) <span class="hljs-keyword">return</span>;</span><br><span class="line"><span class="hljs-keyword">if</span>(x&lt;=l&amp;&amp;y&gt;=r)&#123;</span><br><span class="line">mul[k]=mul[k]*v%p;</span><br><span class="line">add[k]=add[k]*v%p;</span><br><span class="line">tree[k]=tree[k]*v%p;</span><br><span class="line"><span class="hljs-keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">pushdown(k,l,r);</span><br><span class="line"><span class="hljs-keyword">int</span> mid=(l+r)&gt;&gt;<span class="hljs-number">1</span>;</span><br><span class="line">m_1(k&lt;&lt;<span class="hljs-number">1</span>,l,mid,x,y,v);</span><br><span class="line">m_1(k&lt;&lt;<span class="hljs-number">1</span>|<span class="hljs-number">1</span>,mid+<span class="hljs-number">1</span>,r,x,y,v);</span><br><span class="line">tree[k]=(tree[k&lt;&lt;<span class="hljs-number">1</span>]+tree[k&lt;&lt;<span class="hljs-number">1</span>|<span class="hljs-number">1</span>])%p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">m_2</span><span class="hljs-params">(<span class="hljs-keyword">int</span> k,<span class="hljs-keyword">int</span> l,<span class="hljs-keyword">int</span> r,<span class="hljs-keyword">int</span> x,<span class="hljs-keyword">int</span> y,ll v)</span></span>&#123;</span><br><span class="line"><span class="hljs-keyword">if</span>(y&lt;l||x&gt;r) <span class="hljs-keyword">return</span>;</span><br><span class="line"><span class="hljs-keyword">if</span>(x&lt;=l&amp;&amp;y&gt;=r)&#123;</span><br><span class="line">add[k]=(add[k]+v)%p;</span><br><span class="line">tree[k]=(tree[k]+v*(r-l+<span class="hljs-number">1</span>)%p)%p;</span><br><span class="line"><span class="hljs-keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">pushdown(k,l,r);</span><br><span class="line"><span class="hljs-keyword">int</span> mid=(l+r)&gt;&gt;<span class="hljs-number">1</span>;</span><br><span class="line">m_2(k&lt;&lt;<span class="hljs-number">1</span>,l,mid,x,y,v);</span><br><span class="line">m_2(k&lt;&lt;<span class="hljs-number">1</span>|<span class="hljs-number">1</span>,mid+<span class="hljs-number">1</span>,r,x,y,v);</span><br><span class="line">tree[k]=(tree[k&lt;&lt;<span class="hljs-number">1</span>]+tree[k&lt;&lt;<span class="hljs-number">1</span>|<span class="hljs-number">1</span>])%p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function">ll <span class="hljs-title">query</span><span class="hljs-params">(<span class="hljs-keyword">int</span> k,<span class="hljs-keyword">int</span> l,<span class="hljs-keyword">int</span> r,<span class="hljs-keyword">int</span> x,<span class="hljs-keyword">int</span> y)</span></span>&#123;</span><br><span class="line"><span class="hljs-keyword">if</span>(y&lt;l||x&gt;r) <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">if</span>(x&lt;=l&amp;&amp;y&gt;=r)&#123;</span><br><span class="line"><span class="hljs-keyword">return</span> tree[k]%p;</span><br><span class="line">&#125;</span><br><span class="line">pushdown(k,l,r);</span><br><span class="line"><span class="hljs-keyword">int</span> mid=(l+r)&gt;&gt;<span class="hljs-number">1</span>;</span><br><span class="line"><span class="hljs-keyword">return</span> (query(k&lt;&lt;<span class="hljs-number">1</span>,l,mid,x,y)+query(k&lt;&lt;<span class="hljs-number">1</span>|<span class="hljs-number">1</span>,mid+<span class="hljs-number">1</span>,r,x,y))%p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> n,m;</span><br><span class="line"><span class="hljs-built_in">cin</span>&gt;&gt;n&gt;&gt;m&gt;&gt;p;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="hljs-built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">&#125;</span><br><span class="line">build(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,n);</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> op,x,y;</span><br><span class="line">ll z;</span><br><span class="line"><span class="hljs-built_in">cin</span>&gt;&gt;op;</span><br><span class="line"><span class="hljs-keyword">if</span>(op==<span class="hljs-number">1</span>)&#123;</span><br><span class="line"><span class="hljs-built_in">cin</span>&gt;&gt;x&gt;&gt;y&gt;&gt;z;</span><br><span class="line">m_1(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,n,x,y,z);</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(op==<span class="hljs-number">2</span>)&#123;</span><br><span class="line"><span class="hljs-built_in">cin</span>&gt;&gt;x&gt;&gt;y&gt;&gt;z;</span><br><span class="line">m_2(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,n,x,y,z);</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">else</span>&#123;</span><br><span class="line"><span class="hljs-built_in">cin</span>&gt;&gt;x&gt;&gt;y;</span><br><span class="line"><span class="hljs-built_in">cout</span>&lt;&lt;query(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,n,x,y)&lt;&lt;<span class="hljs-built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="启发式合并"><a href="#启发式合并" class="headerlink" title="启发式合并"></a>启发式合并</h2><h3 id="并查集按秩合并"><a href="#并查集按秩合并" class="headerlink" title="并查集按秩合并"></a>并查集按秩合并</h3><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">find</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x)</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-keyword">while</span>(x!=fa[x]) x=fa[x];</span><br><span class="line"><span class="hljs-keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> n,m;</span><br><span class="line"><span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++) fa[i]=i,siz[i]=<span class="hljs-number">1</span>;</span><br><span class="line"><span class="hljs-keyword">while</span>(m--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> x,y;</span><br><span class="line"><span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d%d"</span>,&amp;x,&amp;y);</span><br><span class="line">x=find(x);y=find(y);</span><br><span class="line"><span class="hljs-keyword">if</span>(x!=y)</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">if</span>(siz[x]&gt;siz[y]) swap(x,y);</span><br><span class="line">fa[x]=y;</span><br><span class="line">siz[y]+=siz[x];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="problem-1-2"><a href="#problem-1-2" class="headerlink" title="problem 1"></a>problem 1</h3><h4 id="USACO14MAR-The-Lazy-Cow-Gold-懒惰的牛-金"><a href="#USACO14MAR-The-Lazy-Cow-Gold-懒惰的牛-金" class="headerlink" title="[USACO14MAR] The Lazy Cow_Gold 懒惰的牛(金)"></a><a href="https://www.luogu.org/problemnew/show/P4876" target="_blank" rel="noopener">[USACO14MAR] The Lazy Cow_Gold 懒惰的牛(金)</a></h4><p>我没听懂。。。代码如下。</p><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> N 210000</span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">node</span>&#123;</span><span class="hljs-keyword">int</span> id1,id2,d;&#125;A[N],B[N];</span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">node1</span>&#123;</span><span class="hljs-keyword">int</span> l,r,lc,rc,d,lz;&#125;lt[<span class="hljs-number">4</span>*N];</span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">node2</span>&#123;</span><span class="hljs-keyword">int</span> x,next;&#125;e[N*<span class="hljs-number">2</span>];</span><br><span class="line"><span class="hljs-keyword">int</span> n,m,num1,num2,a[N][<span class="hljs-number">5</span>],l1,l2,tl,first[<span class="hljs-number">2</span>*N],len;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">cmp</span><span class="hljs-params">(node x,node y)</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> x.d &lt; y.d;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">getint</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">int</span> num = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">char</span> c = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">while</span> (c &lt; <span class="hljs-string">'0'</span> || c &gt; <span class="hljs-string">'9'</span>) c = getchar();</span><br><span class="line">    <span class="hljs-keyword">while</span> (c &gt;= <span class="hljs-string">'0'</span> &amp;&amp; c &lt;= <span class="hljs-string">'9'</span>) &#123;</span><br><span class="line">        num = num * <span class="hljs-number">10</span> + c - <span class="hljs-string">'0'</span>;</span><br><span class="line">        c = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">return</span> num;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">bt</span><span class="hljs-params">(<span class="hljs-keyword">int</span> l,<span class="hljs-keyword">int</span> r)</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">int</span> now=++tl;</span><br><span class="line">    lt[now].l=l;lt[now].r=r;</span><br><span class="line">    lt[now].lc=lt[now].rc=lt[now].d=lt[now].lz=<span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span>(l&lt;r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="hljs-keyword">int</span> mid=(l+r)/<span class="hljs-number">2</span>;</span><br><span class="line">        lt[now].lc=tl+<span class="hljs-number">1</span>;bt(l,mid);</span><br><span class="line">        lt[now].rc=tl+<span class="hljs-number">1</span>;bt(mid+<span class="hljs-number">1</span>,r);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">down</span><span class="hljs-params">(<span class="hljs-keyword">int</span> now)</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">int</span> lc=lt[now].lc,rc=lt[now].rc;</span><br><span class="line">    <span class="hljs-keyword">if</span>(lc) lt[lc].lz+=lt[now].lz;</span><br><span class="line">    <span class="hljs-keyword">if</span>(rc) lt[rc].lz+=lt[now].lz;</span><br><span class="line">    lt[now].d+=lt[now].lz;</span><br><span class="line">    lt[now].lz=<span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">upd</span><span class="hljs-params">(<span class="hljs-keyword">int</span> now)</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">int</span> lc=lt[now].lc,rc=lt[now].rc;</span><br><span class="line">    <span class="hljs-keyword">if</span>(lc &amp;&amp; lt[lc].lz) down(lc);</span><br><span class="line">    <span class="hljs-keyword">if</span>(rc &amp;&amp; lt[rc].lz) down(rc);</span><br><span class="line">    lt[now].d=max(lt[lc].d,lt[rc].d);</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">change</span><span class="hljs-params">(<span class="hljs-keyword">int</span> now,<span class="hljs-keyword">int</span> l,<span class="hljs-keyword">int</span> r,<span class="hljs-keyword">int</span> d)</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">int</span> lc=lt[now].lc,rc=lt[now].rc,mid=(lt[now].l+lt[now].r)/<span class="hljs-number">2</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span>(lt[now].lz) down(now);</span><br><span class="line">    <span class="hljs-keyword">if</span>(lt[now].l==l &amp;&amp; lt[now].r==r) &#123;lt[now].lz+=d;<span class="hljs-keyword">return</span>;&#125;</span><br><span class="line">    <span class="hljs-keyword">if</span>(mid&gt;=r) change(lc,l,r,d);</span><br><span class="line">    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(l&gt;mid) change(rc,l,r,d);</span><br><span class="line">    <span class="hljs-keyword">else</span> change(lc,l,mid,d),change(rc,mid+<span class="hljs-number">1</span>,r,d);</span><br><span class="line">    upd(now);</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">find</span><span class="hljs-params">(<span class="hljs-keyword">int</span> now)</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">if</span>(lt[now].lz) down(now);</span><br><span class="line">    <span class="hljs-keyword">return</span> lt[now].d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">ins</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x,<span class="hljs-keyword">int</span> y)</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">    len++;</span><br><span class="line">    e[len].x=y;</span><br><span class="line">    e[len].next=first[x];</span><br><span class="line">    first[x]=len;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">    n = getint();</span><br><span class="line">    m = getint();</span><br><span class="line">    num1=num2=<span class="hljs-number">0</span>;</span><br><span class="line">    m*=<span class="hljs-number">2</span>;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt;= <span class="hljs-number">2</span>; j++)</span><br><span class="line">            a[i][j] = getint();</span><br><span class="line">         </span><br><span class="line">        <span class="hljs-keyword">int</span> x=a[i][<span class="hljs-number">1</span>]*<span class="hljs-number">2</span>,y=a[i][<span class="hljs-number">2</span>]*<span class="hljs-number">2</span>;</span><br><span class="line">        a[i][<span class="hljs-number">1</span>]=(x+y)/<span class="hljs-number">2</span>;a[i][<span class="hljs-number">2</span>]=(y-x)/<span class="hljs-number">2</span>;</span><br><span class="line">        a[i][<span class="hljs-number">3</span>]=a[i][<span class="hljs-number">1</span>]-m;a[i][<span class="hljs-number">4</span>]=a[i][<span class="hljs-number">2</span>]-m;</span><br><span class="line">        A[++num1].id1=i;A[num1].id2=<span class="hljs-number">1</span>;A[num1].d=a[i][<span class="hljs-number">1</span>];</span><br><span class="line">        B[++num2].id1=i;B[num2].id2=<span class="hljs-number">2</span>;B[num2].d=a[i][<span class="hljs-number">2</span>];</span><br><span class="line">        A[++num1].id1=i;A[num1].id2=<span class="hljs-number">3</span>;A[num1].d=a[i][<span class="hljs-number">1</span>]-m;</span><br><span class="line">        B[++num2].id1=i;B[num2].id2=<span class="hljs-number">4</span>;B[num2].d=a[i][<span class="hljs-number">2</span>]-m;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-comment">//for(int i=1;i&lt;=n;i++) printf("%d %d %d %d\n",a[i][1],a[i][2],a[i][3],a[i][4]);</span></span><br><span class="line">    sort(A+<span class="hljs-number">1</span>,A+num1+<span class="hljs-number">1</span>,cmp);</span><br><span class="line">    sort(B+<span class="hljs-number">1</span>,B+num2+<span class="hljs-number">1</span>,cmp);</span><br><span class="line">    <span class="hljs-keyword">int</span> k=<span class="hljs-number">1</span>;</span><br><span class="line">    a[A[<span class="hljs-number">1</span>].id1][A[<span class="hljs-number">1</span>].id2]=k;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">2</span>;i&lt;=num1;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="hljs-keyword">if</span>(A[i].d!=A[i<span class="hljs-number">-1</span>].d) k++;</span><br><span class="line">        a[A[i].id1][A[i].id2]=k;</span><br><span class="line">    &#125;   </span><br><span class="line">    l1=k;</span><br><span class="line">    k=<span class="hljs-number">1</span>;</span><br><span class="line">    a[B[<span class="hljs-number">1</span>].id1][B[<span class="hljs-number">1</span>].id2]=k;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">2</span>;i&lt;=num2;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="hljs-keyword">if</span>(B[i].d!=B[i<span class="hljs-number">-1</span>].d) k++;</span><br><span class="line">        a[B[i].id1][B[i].id2]=k;</span><br><span class="line">    &#125;</span><br><span class="line">      </span><br><span class="line">    l2=k;</span><br><span class="line">    len=<span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ins(a[i][<span class="hljs-number">3</span>],i);</span><br><span class="line">        ins(a[i][<span class="hljs-number">1</span>]+<span class="hljs-number">1</span>,-i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-comment">//for(int i=1;i&lt;=n;i++) printf("%d %d %d %d\n",a[i][1],a[i][2],a[i][3],a[i][4]);</span></span><br><span class="line">    tl=<span class="hljs-number">0</span>;</span><br><span class="line">    bt(<span class="hljs-number">1</span>,l2);</span><br><span class="line">    <span class="hljs-keyword">int</span> ans=<span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=l1;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="hljs-keyword">for</span>(k=first[i];k;k=e[k].next)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="hljs-keyword">int</span> x=e[k].x,d;</span><br><span class="line">            <span class="hljs-keyword">if</span>(x&gt;<span class="hljs-number">0</span>) d=a[x][<span class="hljs-number">0</span>];</span><br><span class="line">            <span class="hljs-keyword">else</span> &#123;x=<span class="hljs-built_in">abs</span>(x);d=-a[x][<span class="hljs-number">0</span>];&#125;</span><br><span class="line">            <span class="hljs-keyword">int</span> l=a[x][<span class="hljs-number">4</span>],r=a[x][<span class="hljs-number">2</span>];</span><br><span class="line">            change(<span class="hljs-number">1</span>,l,r,d);</span><br><span class="line">        &#125;</span><br><span class="line">        ans=max(ans,find(<span class="hljs-number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="problem-2-1"><a href="#problem-2-1" class="headerlink" title="problem 2"></a>problem 2</h3><h4 id="UVALive7141"><a href="#UVALive7141" class="headerlink" title="UVALive7141"></a>UVALive7141</h4><p>无穷大的地图上有n个兵，现在给一个W*H的炸弹，一次能炸死它所在行列上所有的士兵。不能放在士兵上面。</p><p>问：一次能最多干掉多少小兵？</p><h4 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h4><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> N 110000</span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">node</span>&#123;</span><span class="hljs-keyword">int</span> d,id1,id2;&#125;A[N*<span class="hljs-number">2</span>],B[N*<span class="hljs-number">2</span>];</span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">node1</span>&#123;</span><span class="hljs-keyword">int</span> l,r,lc,rc;<span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> d,maxd;&#125;lt[N*<span class="hljs-number">4</span>];</span><br><span class="line"><span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt; v[<span class="hljs-number">2</span>*N];</span><br><span class="line"><span class="hljs-keyword">int</span> len,n,w,h,num1,num2,tot1,tot2,a[N][<span class="hljs-number">4</span>];</span><br><span class="line"><span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> ans,sx[<span class="hljs-number">2</span>*N],sy[<span class="hljs-number">2</span>*N];</span><br><span class="line"><span class="hljs-keyword">int</span> tl,inf=N;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">cmp</span><span class="hljs-params">(<span class="hljs-keyword">void</span> <span class="hljs-keyword">const</span> *xx,<span class="hljs-keyword">void</span> <span class="hljs-keyword">const</span> *yy)</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">node x=*(node*)xx,y=*(node*)yy;</span><br><span class="line"><span class="hljs-keyword">if</span>(x.d&lt;y.d) <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;</span><br><span class="line"><span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">bt</span><span class="hljs-params">(<span class="hljs-keyword">int</span> l,<span class="hljs-keyword">int</span> r)</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> now=++tl;</span><br><span class="line">lt[now].l=l;lt[now].r=r;</span><br><span class="line">lt[now].d=lt[now].maxd=lt[now].lc=lt[now].rc=<span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">if</span>(l&lt;r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> mid=(l+r)/<span class="hljs-number">2</span>;</span><br><span class="line">lt[now].lc=tl+<span class="hljs-number">1</span>;bt(l,mid);</span><br><span class="line">lt[now].rc=tl+<span class="hljs-number">1</span>;bt(mid+<span class="hljs-number">1</span>,r);</span><br><span class="line">lt[now].maxd=max(lt[lt[now].lc].maxd,lt[lt[now].rc].maxd);</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">else</span> lt[now].maxd=sy[l];</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">down</span><span class="hljs-params">(<span class="hljs-keyword">int</span> now)</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> lc=lt[now].lc,rc=lt[now].rc;</span><br><span class="line"><span class="hljs-keyword">if</span>(lc) lt[lc].d+=lt[now].d;</span><br><span class="line"><span class="hljs-keyword">if</span>(rc) lt[rc].d+=lt[now].d;</span><br><span class="line">lt[now].maxd+=lt[now].d;</span><br><span class="line">lt[now].d=<span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">find</span><span class="hljs-params">(<span class="hljs-keyword">int</span> now)</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-keyword">if</span>(lt[now].d) down(now);</span><br><span class="line"><span class="hljs-keyword">return</span> lt[now].maxd;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">upd</span><span class="hljs-params">(<span class="hljs-keyword">int</span> now)</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> lc=lt[now].lc,rc=lt[now].rc;</span><br><span class="line"><span class="hljs-keyword">if</span>(lc &amp;&amp; lt[lc].d) down(lc);</span><br><span class="line"><span class="hljs-keyword">if</span>(rc &amp;&amp; lt[rc].d) down(rc);</span><br><span class="line">lt[now].maxd=max(lt[lc].maxd,lt[rc].maxd);</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">change</span><span class="hljs-params">(<span class="hljs-keyword">int</span> now,<span class="hljs-keyword">int</span> l,<span class="hljs-keyword">int</span> r,<span class="hljs-keyword">int</span> d)</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> lc=lt[now].lc,rc=lt[now].rc,mid=(lt[now].l+lt[now].r)/<span class="hljs-number">2</span>;</span><br><span class="line"><span class="hljs-keyword">if</span>(lt[now].d) down(now);</span><br><span class="line"><span class="hljs-keyword">if</span>(lt[now].l==l &amp;&amp; lt[now].r==r) &#123;lt[now].d+=d;<span class="hljs-keyword">return</span>;&#125;</span><br><span class="line"><span class="hljs-keyword">if</span>(mid&gt;=r) change(lc,l,r,d);</span><br><span class="line"><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(l&gt;mid) change(rc,l,r,d);</span><br><span class="line"><span class="hljs-keyword">else</span> change(lc,l,mid,d),change(rc,mid+<span class="hljs-number">1</span>,r,d);</span><br><span class="line">upd(now);</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> z,zu=<span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d"</span>,&amp;z);</span><br><span class="line"><span class="hljs-keyword">while</span>(z--)</span><br><span class="line">&#123;</span><br><span class="line">zu++;</span><br><span class="line"><span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d%d%d"</span>,&amp;n,&amp;w,&amp;h);</span><br><span class="line">tot1=tot2=<span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> x,y;</span><br><span class="line"><span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d%d"</span>,&amp;x,&amp;y);</span><br><span class="line">A[++tot1].d=x;A[tot1].id1=i;A[tot1].id2=<span class="hljs-number">0</span>;</span><br><span class="line">B[++tot2].d=y;B[tot2].id1=i;B[tot2].id2=<span class="hljs-number">1</span>;</span><br><span class="line">A[++tot1].d=x-w+<span class="hljs-number">1</span>;A[tot1].id1=i;A[tot1].id2=<span class="hljs-number">2</span>;</span><br><span class="line">B[++tot2].d=y-h+<span class="hljs-number">1</span>;B[tot2].id1=i;B[tot2].id2=<span class="hljs-number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line">qsort(A+<span class="hljs-number">1</span>,tot1,<span class="hljs-keyword">sizeof</span>(node),cmp);</span><br><span class="line">qsort(B+<span class="hljs-number">1</span>,tot2,<span class="hljs-keyword">sizeof</span>(node),cmp);</span><br><span class="line">a[A[<span class="hljs-number">1</span>].id1][A[<span class="hljs-number">1</span>].id2]=<span class="hljs-number">1</span>;</span><br><span class="line">num1=<span class="hljs-number">1</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">2</span>;i&lt;=tot1;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">if</span>(A[i].d!=A[i<span class="hljs-number">-1</span>].d) num1++;</span><br><span class="line">a[A[i].id1][A[i].id2]=num1;</span><br><span class="line">&#125;</span><br><span class="line">a[B[<span class="hljs-number">1</span>].id1][B[<span class="hljs-number">1</span>].id2]=<span class="hljs-number">1</span>;</span><br><span class="line">num2=<span class="hljs-number">1</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">2</span>;i&lt;=tot2;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">if</span>(B[i].d!=B[i<span class="hljs-number">-1</span>].d) num2++;</span><br><span class="line">a[B[i].id1][B[i].id2]=num2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=num1;i++) sx[i]=<span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=num2;i++) sy[i]=<span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=num1;i++) v[i].clear();</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++) </span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> x1=a[i][<span class="hljs-number">0</span>],y1=a[i][<span class="hljs-number">1</span>],x2=a[i][<span class="hljs-number">2</span>],y2=a[i][<span class="hljs-number">3</span>];</span><br><span class="line">sx[x2]++;sx[x1+<span class="hljs-number">1</span>]--;</span><br><span class="line">sy[y2]++;sy[y1+<span class="hljs-number">1</span>]--;</span><br><span class="line">v[x2].push_back(i);</span><br><span class="line">v[x1+<span class="hljs-number">1</span>].push_back(-i);</span><br><span class="line">&#125;</span><br><span class="line">ans=<span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=num1;i++)</span><br><span class="line">&#123;</span><br><span class="line">sx[i]+=sx[i<span class="hljs-number">-1</span>];</span><br><span class="line">ans=max(ans,sx[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=num2;i++)</span><br><span class="line">&#123;</span><br><span class="line">sy[i]+=sy[i<span class="hljs-number">-1</span>];</span><br><span class="line">ans=max(ans,sy[i]);</span><br><span class="line">&#125;</span><br><span class="line">tl=<span class="hljs-number">0</span>;</span><br><span class="line">bt(<span class="hljs-number">1</span>,num2);</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=num1;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">0</span>;j&lt;v[i].size();j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> k=v[i][j],l,r;</span><br><span class="line">l=a[<span class="hljs-built_in">abs</span>(k)][<span class="hljs-number">3</span>];r=a[<span class="hljs-built_in">abs</span>(k)][<span class="hljs-number">1</span>];</span><br><span class="line"><span class="hljs-keyword">if</span>(k&gt;<span class="hljs-number">0</span>) change(<span class="hljs-number">1</span>,l,r,-inf);</span><br><span class="line"><span class="hljs-keyword">else</span> change(<span class="hljs-number">1</span>,l,r,inf);</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">int</span> tt=find(<span class="hljs-number">1</span>);</span><br><span class="line"><span class="hljs-keyword">if</span>(tt&gt;<span class="hljs-number">0</span>) ans=max(ans,tt+sx[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-built_in">printf</span>(<span class="hljs-string">"Case #%d: %lld\n"</span>,zu,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;数据结构&quot;&gt;&lt;a href=&quot;#数据结构&quot; class=&quot;headerlink&quot; title=&quot;数据结构&quot;&gt;&lt;/a&gt;数据结构&lt;/h2&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yueyangwu.cn/categories/OI/"/>
    
      <category term="集训" scheme="http://yueyangwu.cn/categories/OI/%E9%9B%86%E8%AE%AD/"/>
    
    
  </entry>
  
  <entry>
    <title>清北学堂noip2019-Day2</title>
    <link href="http://yueyangwu.cn/2019/07/14/%E6%B8%85%E5%8C%97%E5%AD%A6%E5%A0%82noip2019-Day2/"/>
    <id>http://yueyangwu.cn/2019/07/14/清北学堂noip2019-Day2/</id>
    <published>2019-07-14T00:13:10.000Z</published>
    <updated>2019-07-15T11:19:56.998Z</updated>
    
    <content type="html"><![CDATA[<h2 id="分治算法"><a href="#分治算法" class="headerlink" title="分治算法"></a>分治算法</h2><p>（持续更新）</p><a id="more"></a><blockquote><p>最小值最大，二分</p></blockquote><hr><h3 id="problem-1"><a href="#problem-1" class="headerlink" title="problem 1"></a>problem 1</h3><h4 id="愤怒的牛"><a href="#愤怒的牛" class="headerlink" title="愤怒的牛"></a><a href="https://www.luogu.org/problemnew/show/P2678" target="_blank" rel="noopener">愤怒的牛</a></h4><p>n个点，取出m个点使得相邻的点的最小距离最大</p><p>$n\leq 10^5, m\leq n$</p><ul><li>最小距离最大</li><li>如果太大了，会选不出m个点</li><li>限制的最小距离越大，选出的点越少</li><li>符合二分性质<h4 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h4></li><li>二分最小距离k，然后贪心验证。</li><li>首先第一个点必须取，然后后面的点超过k就取。</li><li>最后看能不能取完m个点。</li><li>复杂度$O(nlog_2n)$</li><li>代码如下：<figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">int</span> n, m, d, a[<span class="hljs-number">50010</span>];</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">judge</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">int</span> tot = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">int</span> now = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">while</span> (i &lt; n+<span class="hljs-number">1</span>)&#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="hljs-keyword">if</span> (a[i] - a[now] &lt; x)</span><br><span class="line">            tot++;</span><br><span class="line">        <span class="hljs-keyword">else</span></span><br><span class="line">            now = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">if</span> (tot &gt; m)</span><br><span class="line">        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;</span><br><span class="line">    <span class="hljs-keyword">else</span></span><br><span class="line">        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line"><span class="hljs-built_in">cin</span>&gt;&gt;d&gt;&gt;n&gt;&gt;m;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line"><span class="hljs-built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">&#125;</span><br><span class="line">a[n + <span class="hljs-number">1</span>] = d;</span><br><span class="line"><span class="hljs-keyword">int</span> l = <span class="hljs-number">1</span>,r = d,res = <span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">while</span>(l &lt;= r)&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> mid=(l + r) / <span class="hljs-number">2</span>;</span><br><span class="line"><span class="hljs-keyword">if</span>(judge(mid))&#123;</span><br><span class="line">res = mid;</span><br><span class="line">l = mid + <span class="hljs-number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">else</span>&#123;</span><br><span class="line">r = mid - <span class="hljs-number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-built_in">cout</span>&lt;&lt;res;</span><br><span class="line"><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="problem-2"><a href="#problem-2" class="headerlink" title="problem 2"></a>problem 2</h3><h4 id="Slicing"><a href="#Slicing" class="headerlink" title="Slicing"></a><a href="https://www.luogu.org/problemnew/show/P3017" target="_blank" rel="noopener">Slicing</a></h4><p>给定$n\times m$的数字矩阵，要求横着切$A - 1$刀，对每块再竖着切$B-1$刀。</p><p>使得最小子矩阵最大。</p><p>$n,m\leq 500$</p><h4 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h4><ul><li>二分，然后贪心切</li><li>每次扫一行，看这行和上次切割的行之间能否满足二分条件k，如果能就横切+1，最后看可行条能否到n。</li><li>代码如下：<figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">int</span> r, c, aa, bb;</span><br><span class="line"><span class="hljs-keyword">int</span> a[<span class="hljs-number">509</span>][<span class="hljs-number">509</span>], sum[<span class="hljs-number">509</span>][<span class="hljs-number">509</span>];</span><br><span class="line"><span class="hljs-keyword">int</span> ans;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">check</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">int</span> num = <span class="hljs-number">0</span>, now = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= r; i++)&#123;</span><br><span class="line">        <span class="hljs-keyword">int</span> s = <span class="hljs-number">0</span>, cnt = <span class="hljs-number">0</span>;</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">1</span>; j &lt;= c; j++)&#123;</span><br><span class="line">            <span class="hljs-keyword">if</span>(s + sum[i][j] - sum[i][j<span class="hljs-number">-1</span>] - sum[now][j] + sum[now][j<span class="hljs-number">-1</span>] &lt; x)</span><br><span class="line">                s += sum[i][j] - sum[i][j<span class="hljs-number">-1</span>] - sum[now][j] + sum[now][j<span class="hljs-number">-1</span>];</span><br><span class="line">            <span class="hljs-keyword">else</span>&#123;</span><br><span class="line">                cnt++;</span><br><span class="line">                s = <span class="hljs-number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">if</span>(cnt &gt;= bb)&#123;</span><br><span class="line">            num++;</span><br><span class="line">            now = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">if</span>(num &gt;= aa) <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;</span><br><span class="line">    <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d%d%d%d"</span>, &amp;r, &amp;c, &amp;aa, &amp;bb);</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= r; i++)&#123;</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">1</span>; j &lt;= c; j++)&#123;</span><br><span class="line">            <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d"</span>, &amp;a[i][j]);</span><br><span class="line">            sum[i][j] = sum[i<span class="hljs-number">-1</span>][j] + sum[i][j<span class="hljs-number">-1</span>] - sum[i<span class="hljs-number">-1</span>][j<span class="hljs-number">-1</span>] + a[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">int</span> ll = <span class="hljs-number">0</span>, rr = sum[r][c];</span><br><span class="line">    <span class="hljs-keyword">while</span>(ll &lt;= rr)&#123;</span><br><span class="line">        <span class="hljs-keyword">int</span> mid = (ll + rr) / <span class="hljs-number">2</span>;</span><br><span class="line">        <span class="hljs-keyword">if</span>(check(mid))&#123;</span><br><span class="line">            ll = mid + <span class="hljs-number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">else</span> rr = mid - <span class="hljs-number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d\n"</span>, ll - <span class="hljs-number">1</span>);</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="problem-4"><a href="#problem-4" class="headerlink" title="problem 4"></a>problem 4</h3><h4 id="花盆"><a href="#花盆" class="headerlink" title="花盆"></a><a href="https://www.luogu.org/problemnew/show/P2698" target="_blank" rel="noopener">花盆</a></h4><p>给出n个点坐标，根据x轴选定区间$[L,R]$，使得其中的点的y值的最大和最小之差&gt;=D。求$min{R-L}$</p><p>$n\leq 10^5$</p><h4 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h4><p>二分枚举区间大小，然后通过单调队列求出每个区间最大值和最小值，最后得出答案即可。</p><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">int</span> n, d;</span><br><span class="line"></span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">node</span>&#123;</span></span><br><span class="line">    <span class="hljs-keyword">int</span> x, y;</span><br><span class="line">&#125;a[<span class="hljs-number">100009</span>];</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">cmp</span><span class="hljs-params">(<span class="hljs-keyword">const</span> node &amp;a, <span class="hljs-keyword">const</span> node &amp;b)</span></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> a.x &lt; b.x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">int</span> qmin[<span class="hljs-number">100009</span>], qmini[<span class="hljs-number">100009</span>], qmax[<span class="hljs-number">100009</span>], qmaxi[<span class="hljs-number">100009</span>];</span><br><span class="line"><span class="hljs-keyword">int</span> headmin, tailmin, headmax, tailmax;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">check</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    headmin = headmax = <span class="hljs-number">1</span>;</span><br><span class="line">    tailmin = tailmax = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        <span class="hljs-keyword">while</span>(headmin &lt;= tailmin &amp;&amp; qmin[tailmin] &gt;= a[i].y) tailmin--;</span><br><span class="line">        qmin[++tailmin] = a[i].y;</span><br><span class="line">        qmini[tailmin] = a[i].x;</span><br><span class="line">        <span class="hljs-keyword">while</span>(headmin &lt;= tailmin &amp;&amp; qmini[headmin] &lt; qmini[tailmin] - x) headmin++;</span><br><span class="line">        <span class="hljs-keyword">while</span>(headmax &lt;= tailmax &amp;&amp; qmax[tailmax] &lt;= a[i].y) tailmax--;</span><br><span class="line">        qmax[++tailmax] = a[i].y;</span><br><span class="line">        qmaxi[tailmax] = a[i].x;</span><br><span class="line">        <span class="hljs-keyword">while</span>(headmax &lt;= tailmax &amp;&amp; qmaxi[headmax] &lt; qmaxi[tailmax] - x) headmax++;</span><br><span class="line">        <span class="hljs-keyword">int</span> cz = qmax[headmax] - qmin[headmin];</span><br><span class="line">        <span class="hljs-keyword">if</span>(cz &gt;= d) <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d%d"</span>, &amp;n, &amp;d);</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d%d"</span>, &amp;a[i].x, &amp;a[i].y);</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a + <span class="hljs-number">1</span>, a + n + <span class="hljs-number">1</span>, cmp);</span><br><span class="line">    <span class="hljs-keyword">int</span> l = <span class="hljs-number">1</span>, r = a[n].x + <span class="hljs-number">5</span>;</span><br><span class="line">    <span class="hljs-keyword">while</span>(l &lt; r)&#123;</span><br><span class="line">        <span class="hljs-keyword">int</span> mid = (l + r) / <span class="hljs-number">2</span>;</span><br><span class="line">        <span class="hljs-keyword">if</span>(check(mid))&#123;</span><br><span class="line">            r = mid;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">else</span> l = mid + <span class="hljs-number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">if</span>(l &gt; a[n].x) <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d\n"</span>, <span class="hljs-number">-1</span>);</span><br><span class="line">    <span class="hljs-keyword">else</span> <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d\n"</span>, l);</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="problem-5"><a href="#problem-5" class="headerlink" title="problem 5"></a>problem 5</h3><h4 id="组题"><a href="#组题" class="headerlink" title="组题"></a><a href="https://www.luogu.org/problemnew/show/UVA1451" target="_blank" rel="noopener">组题</a></h4><ul><li>给出一个长度为n的序列，求一段长度大于等于k的字串。</li><li>使得它们的平均值最大。</li><li>$n\leq 10^5, k\leq n$<h4 id="题解-3"><a href="#题解-3" class="headerlink" title="题解"></a>题解</h4></li><li>分数规划，二分答案（平均值）</li><li>让每个数减去平均值，检测是否有一个长度大于等于k的字串，使其和为非负。</li><li>平均值问题转化为求和问题。</li><li>把区间和转化为前缀和相减的形式。</li><li>枚举右端点i，判定的就是$sum[i]-min{sum[j]}(0\leq j\leq i-k)$是否大于等于0。</li><li>代码如下：</li></ul><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">int</span> T, n, len;</span><br><span class="line"><span class="hljs-keyword">double</span> a[<span class="hljs-number">100009</span>], a1[<span class="hljs-number">100009</span>], sum[<span class="hljs-number">100009</span>];</span><br><span class="line"><span class="hljs-keyword">const</span> <span class="hljs-keyword">double</span> jd = <span class="hljs-number">1e-5</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">check</span><span class="hljs-params">(<span class="hljs-keyword">double</span> x, <span class="hljs-keyword">bool</span> op)</span></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">int</span> ansl, ansr;</span><br><span class="line">    <span class="hljs-keyword">double</span> ans = <span class="hljs-number">-0x3f3f3f3f</span>;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) a1[i] = a[i] - x;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) sum[i] = sum[i - <span class="hljs-number">1</span>] + a1[i];</span><br><span class="line">    <span class="hljs-keyword">double</span> minx = <span class="hljs-number">0x3f3f3f3f</span>, l;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = len; i &lt;= n; i++)&#123;</span><br><span class="line">        <span class="hljs-keyword">if</span>(sum[i - len] &lt;= minx) l = i - len + <span class="hljs-number">1</span>;</span><br><span class="line">        minx = min(minx, sum[i - len]);</span><br><span class="line">        <span class="hljs-keyword">if</span>(sum[i] - minx &gt; ans + jd)&#123;</span><br><span class="line">            ans = sum[i] - minx;</span><br><span class="line">            ansl = l;</span><br><span class="line">            ansr = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">if</span>(op == <span class="hljs-number">1</span>) <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d %d\n"</span>, ansl, ansr);</span><br><span class="line">    <span class="hljs-keyword">return</span> ans &gt;= <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="hljs-keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d%d"</span>, &amp;n, &amp;len);</span><br><span class="line">        <span class="hljs-built_in">string</span> s;</span><br><span class="line">        <span class="hljs-built_in">cin</span>&gt;&gt;s;</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            a[i] = s[i - <span class="hljs-number">1</span>] - <span class="hljs-string">'0'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">double</span> l = <span class="hljs-number">0</span>, r = <span class="hljs-number">1</span>;</span><br><span class="line">        <span class="hljs-keyword">while</span>(l &lt; r - jd)&#123;</span><br><span class="line">            <span class="hljs-keyword">double</span> mid = (l + r) / <span class="hljs-number">2</span>;</span><br><span class="line">            <span class="hljs-keyword">if</span>(check(mid, <span class="hljs-number">0</span>)) l = mid;</span><br><span class="line">            <span class="hljs-keyword">else</span> r = mid;</span><br><span class="line">        &#125;</span><br><span class="line">        check(l + jd, <span class="hljs-number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="problem-6"><a href="#problem-6" class="headerlink" title="problem 6"></a>problem 6</h3><h4 id="猜数"><a href="#猜数" class="headerlink" title="猜数"></a>猜数</h4><ul><li>给一个长度为n的数列，但不知道这个数列。</li><li>有q条限制条件$l_i,r_i,x_i$，表示$(l,r)$所有数的最小值为x。</li><li>问从第几个限制条件开始出现矛盾，无矛盾输出0。</li><li>$n\leq 10^6,q\leq 25000$</li><li>例如：$(3,5)$最小值为2，$(1,7)$最小值为4，矛盾。<h4 id="题解-4"><a href="#题解-4" class="headerlink" title="题解"></a>题解</h4></li><li>会矛盾的情况就是出现了包含关系，并且被包含的区间最小值更小。</li><li>先对区间按x排序</li><li>处理某个区间时，发现已经被之前的某个区间$(l,r)$包含了。矛盾。</li></ul><hr><h3 id="problem-7"><a href="#problem-7" class="headerlink" title="problem 7"></a>problem 7</h3><h4 id="Tree"><a href="#Tree" class="headerlink" title="Tree"></a>Tree</h4><ul><li>给一个无向带权连通图，每条边是黑色或者白色。求一颗最小权的恰好有need条白色边的生成树。</li><li>题目保证有解，$n,m\leq 10^5$<h4 id="分析及题解"><a href="#分析及题解" class="headerlink" title="分析及题解"></a>分析及题解</h4></li><li>生成树权值变化时，白边数目可能变大或者变小。</li><li>不能直接二分。</li></ul><h3 id="problem-8"><a href="#problem-8" class="headerlink" title="problem 8"></a>problem 8</h3><h4 id="电话线"><a href="#电话线" class="headerlink" title="电话线"></a><a href="https://www.luogu.org/problemnew/show/P1948" target="_blank" rel="noopener">电话线</a></h4><ul><li>给出n个点m条边的DAG</li><li>可以选择k条边，使其权值变为0</li><li>需要让1-n的最长路径最短</li><li>$n,m\leq 50000$</li></ul><hr><h3 id="problem-9"><a href="#problem-9" class="headerlink" title="problem 9"></a>problem 9</h3><h4 id="Dynamite"><a href="#Dynamite" class="headerlink" title="Dynamite"></a><a href="https://www.luogu.org/problemnew/show/P3523" target="_blank" rel="noopener">Dynamite</a></h4><ul><li>给出一颗n个节点的树，上面有k个关键节点。</li><li>树上选m个点，求最小化关键节点到选择点的最大距离。</li><li>$n\leq 10^5$<h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4></li><li>二分一个数L表示答案</li><li>问题转化为一个判定问题，判定能否用m个点覆盖（范围为L）整个树上的关键点。</li><li>树形DP，考虑子树情况：<ol><li>子树内关键点都覆盖完了，并且子树内有选择点的贡献可以向上。</li><li>子树内有不被覆盖的点，没有节点可以继续贡献。</li><li>子树内都被覆盖，但没有对上面的贡献</li></ol></li></ul><hr><h2 id="搜索算法"><a href="#搜索算法" class="headerlink" title="搜索算法"></a>搜索算法</h2><h3 id="problem-1-1"><a href="#problem-1-1" class="headerlink" title="problem 1"></a>problem 1</h3><h4 id="装箱"><a href="#装箱" class="headerlink" title="装箱"></a>装箱</h4><ul><li>n个物品，每个物品大小为$w_i$。箱子大小为m，求最少箱子数目，能装下所有物品。<h4 id="分析，题解"><a href="#分析，题解" class="headerlink" title="分析，题解"></a>分析，题解</h4></li><li>搜索每一个物品，装入到之前能装的箱子中，或者开一个新的箱子，$dfs(x)$代表搜到了第几个物品。</li><li>物品从大到小排序，再依次搜索。</li><li>当前搜到了最优解已经为$m$，那么当前步数$&gt;=m$可以直接return，因为不会最优。</li><li>进一步剪枝。</li><li>考虑没有搜的物品的总和减去没有被填满的空间/m就是至少要新开的箱子的空间。然后新箱子数+已有箱子数&gt;=m就可以剪掉。</li><li>排序和预估下界都是常见剪枝技巧。</li><li>另外一种方法：</li><li>先贪心一遍，求出较优解，然后进行搜索-最优性剪枝。</li></ul><hr><h3 id="problem-2-1"><a href="#problem-2-1" class="headerlink" title="problem 2"></a>problem 2</h3><h4 id="天平"><a href="#天平" class="headerlink" title="天平"></a>天平</h4><ul><li><p>有n个砝码$(n\leq 1000)$，重量为$w[i]$.</p></li><li><p>从中选择一些砝码，使得这些砝码总重量最大，但不超过c。</p></li><li><p>$w[i]$按照递增顺序给出并且保证$w[i]&gt;=w[i-1]+w[i-2]$</p><h4 id="分析题解"><a href="#分析题解" class="headerlink" title="分析题解"></a>分析题解</h4></li><li><p>因为$w[i]&gt;=w[i-1]+w[i-2]$,所以n实际上是45左右（斐波那契）。</p></li><li><p>dfs(int k, int tot)//搜到第k个数，当前总和是tot。</p></li><li><p>剪枝：</p><ol><li>优化选砝码（不跳过），并且优先选择重量大的砝码，尽早更新ans。</li><li>如果当前tot + 剩下砝码的总重（前缀和） &lt; ans，return。可行性剪枝。</li></ol></li><li><p>折半搜索：n=40的一类子集问题，</p><ol><li>$40=2\times 20$</li><li>$n=20$类问题，二进制枚举即可。</li><li>把40拆成两个20算。</li><li>要求$n=40$时，有多少个子集的权值和大于等于L。</li><li>物品分成前一半和后一半1 2 3 4|5 6 7 8</li><li>$2^{20}{A},2^{20}{B}$</li><li>合并左右两子集，得到完整的子集和。</li><li>具体。。。没有懂，百度吧。。。</li></ol></li></ul><hr><h3 id="problem-3"><a href="#problem-3" class="headerlink" title="problem 3"></a>problem 3</h3><h4 id="虫食算"><a href="#虫食算" class="headerlink" title="虫食算"></a>虫食算</h4><p>如果这个算式是$N$进制的，我们就取英文字母表午的前N个大写字母来表示这个算式中的$0$到$N-1$这$N$个不同的数字：但是这$N$个字母并不一定顺序地代表$0$到$N-1$。输入数据保证$N$个字母分别至少出现一次。</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> BADC</span><br><span class="line">+CBDA</span><br><span class="line">——————</span><br><span class="line"> DCCC</span><br></pre></td></tr></table></figure><p>上面的算式是一个4进制的算式。很显然，我们只要让$ABCDABCD$分别代表$01230123$，便可以让这个式子成立了。你的任务是，对于给定的$N$进制加法算式，求出$N$个不同的字母分别代表的数字，使得该加法算式成立。输入数据保证有且仅有一组解。</p><h4 id="分析-amp-题解"><a href="#分析-amp-题解" class="headerlink" title="分析&amp;题解"></a>分析&amp;题解</h4><ul><li>从右往左依次尝试填充数字</li><li>剪枝<ol><li>在尝试放新的数字的时候，从n-1道0放会快很多。</li><li>每次搜的时候，看自己左边的列如果三行都确定了的话，就检查是否合法。</li></ol></li></ul><hr><h3 id="problem-4-1"><a href="#problem-4-1" class="headerlink" title="problem 4"></a>problem 4</h3><h4 id="循环赛"><a href="#循环赛" class="headerlink" title="循环赛"></a><a href="https://www.luogu.org/problemnew/show/P3154" target="_blank" rel="noopener">循环赛</a></h4><ul><li>n个队伍进行循环赛，胜者得3分，平得1分，负得0分，现在给出各队分数，求可能的胜负情况数。</li><li>$n\leq 8$<h4 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a><a href="https://www.luogu.org/problemnew/solution/P3154" target="_blank" rel="noopener">分析</a></h4><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">int</span> n;</span><br><span class="line"><span class="hljs-keyword">int</span> a[<span class="hljs-number">9</span>], tmp[<span class="hljs-number">9</span>];</span><br><span class="line"><span class="hljs-keyword">int</span> totwin, totfl;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">cmp</span><span class="hljs-params">(<span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> &amp;a, <span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> &amp;b)</span></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> a &gt; b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">map</span>&lt;ll, ll&gt; mapx;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function">ll <span class="hljs-title">dfs</span><span class="hljs-params">(ll x, ll y)</span></span>&#123;</span><br><span class="line">    ll sum = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span>(x &gt;= n) <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span>(y &gt; n)&#123;</span><br><span class="line">    <span class="hljs-keyword">if</span>(tmp[x] != a[x]) <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>; </span><br><span class="line">        <span class="hljs-keyword">int</span> f[<span class="hljs-number">9</span>];</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = x + <span class="hljs-number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            f[i] = a[i] - tmp[i];</span><br><span class="line">        &#125;</span><br><span class="line">        ll hash = <span class="hljs-number">0</span>;</span><br><span class="line">        sort(f + x + <span class="hljs-number">1</span>, f + n + <span class="hljs-number">1</span>);</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = x + <span class="hljs-number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            hash = hash * <span class="hljs-number">27</span> + f[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">if</span>(mapx[hash] != <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> mapx[hash];</span><br><span class="line">        <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> mapx[hash] = dfs(x + <span class="hljs-number">1</span>, x + <span class="hljs-number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">if</span>(tmp[x] + <span class="hljs-number">3</span> &lt;= a[x] &amp;&amp; totwin)&#123;</span><br><span class="line">        tmp[x] += <span class="hljs-number">3</span>;</span><br><span class="line">        totwin--;</span><br><span class="line">        sum += dfs(x, y + <span class="hljs-number">1</span>);</span><br><span class="line">        tmp[x] -= <span class="hljs-number">3</span>;</span><br><span class="line">        totwin++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">if</span>(tmp[y] + <span class="hljs-number">3</span> &lt;= a[y] &amp;&amp; totwin)&#123;</span><br><span class="line">        tmp[y] += <span class="hljs-number">3</span>;</span><br><span class="line">        totwin--;</span><br><span class="line">        sum += dfs(x, y + <span class="hljs-number">1</span>);</span><br><span class="line">        tmp[y] -= <span class="hljs-number">3</span>;</span><br><span class="line">        totwin++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">if</span>(tmp[x] + <span class="hljs-number">1</span> &lt;= a[x] &amp;&amp; tmp[y] + <span class="hljs-number">1</span> &lt;= a[y] &amp;&amp; totfl)&#123;</span><br><span class="line">        tmp[x]++, tmp[y]++, totfl--;</span><br><span class="line">        sum += dfs(x, y + <span class="hljs-number">1</span>);</span><br><span class="line">        tmp[x]--, tmp[y]--, totfl++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">int</span> s = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d"</span>, &amp;a[i]);</span><br><span class="line">        s += a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a + <span class="hljs-number">1</span>, a + n + <span class="hljs-number">1</span>, cmp);</span><br><span class="line">    totwin = s - n * n + n;</span><br><span class="line">    totfl = (n * n - n) / <span class="hljs-number">2</span> - totwin;</span><br><span class="line">    ll ans = dfs(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>);</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%lld\n"</span>, ans);</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="迭代加深搜索"><a href="#迭代加深搜索" class="headerlink" title="迭代加深搜索"></a>迭代加深搜索</h2><h3 id="problem-1-2"><a href="#problem-1-2" class="headerlink" title="problem 1"></a>problem 1</h3><h4 id="埃及分数"><a href="#埃及分数" class="headerlink" title="埃及分数"></a><a href="https://www.luogu.org/problemnew/show/UVA12558" target="_blank" rel="noopener">埃及分数</a></h4><p>太难了吧。。。</p><hr><h3 id="problem-2-2"><a href="#problem-2-2" class="headerlink" title="problem 2"></a>problem 2</h3><blockquote><p>P.S.其实刚刚打洛谷月赛去了，还是回来听听。</p></blockquote><h4 id="骑士精神"><a href="#骑士精神" class="headerlink" title="骑士精神"></a>骑士精神</h4><p>在一个5×5的棋盘上有12个白色的骑士和12个黑色的骑士， 且有一个空位。在任何时候一个骑士都能按照骑士的走法（它可以走到和它横坐标相差为1，纵坐标相差为2或者横坐标相差为2，纵坐标相差为1的格子）移动到空位上。 </p><p>给定一个初始的棋盘，怎样才能经过移动变成如下目标棋盘： 为了体现出骑士精神，他们必须以最少的步数完成任务。</p><p><img src="/img/%E9%AA%91%E5%A3%AB.png" alt="骑士"></p><h4 id="分析-amp-题解-1"><a href="#分析-amp-题解-1" class="headerlink" title="分析&amp;题解"></a>分析&amp;题解</h4><p>最小步数这类，适合用迭代加深搜索。</p><p>用空格走代替骑士。<br>搜索时记录上一步防止来回走。</p><p>不需要每次判断是否都在位置，可以计算出不在对应位置的骑士有多少个。而且每次复原一个骑士至少需要一步。</p><hr><h2 id="启发式搜索（A-）"><a href="#启发式搜索（A-）" class="headerlink" title="启发式搜索（A*）"></a>启发式搜索（A*）</h2><ul><li>$f[x]=g[x]+h[x]$<h3 id="problem-1-3"><a href="#problem-1-3" class="headerlink" title="problem 1"></a>problem 1</h3><h4 id="k短路问题"><a href="#k短路问题" class="headerlink" title="k短路问题"></a>k短路问题</h4></li><li>给出一个图，和s，t，求s到t的第k短路。</li><li>考虑用搜索的遍历，搜出1-k短路。<h4 id="分析-2"><a href="#分析-2" class="headerlink" title="分析"></a><a href="https://www.luogu.org/problemnew/show/P2483" target="_blank" rel="noopener">分析</a></h4></li><li>$f[x] = g[x] + h[x]$</li><li>$g[x]$就是遍历过程中，s走到x的距离。</li><li>$h[x]$就是x到t的最短距离</li><li>预处理建反向图，求出t为起点的最短路。也就能得到每个点的$h[x]$</li><li>算法流程：<ol><li>维护一个优先队列，因为我们要取的是$f[x]$最优的点。</li><li>最开始加入s到队列中。</li><li>从队列中弹出$f[x]$最小的点。</li><li>把和x相邻的点y，$g[y]=g[x]+w(x,y)$，$f[y]=g[y]+h[y]$，然后放入优先队列。</li><li>如果弹出的点就是t，那我们就找到了一个解，并且tot++。</li><li>当tot为k，即找到了第k小的路径。</li></ol></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;分治算法&quot;&gt;&lt;a href=&quot;#分治算法&quot; class=&quot;headerlink&quot; title=&quot;分治算法&quot;&gt;&lt;/a&gt;分治算法&lt;/h2&gt;&lt;p&gt;（持续更新）&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yueyangwu.cn/categories/OI/"/>
    
      <category term="集训" scheme="http://yueyangwu.cn/categories/OI/%E9%9B%86%E8%AE%AD/"/>
    
    
  </entry>
  
  <entry>
    <title>清北学堂noip2019-test1</title>
    <link href="http://yueyangwu.cn/2019/07/13/%E6%B8%85%E5%8C%97%E5%AD%A6%E5%A0%82noip2019-test1/"/>
    <id>http://yueyangwu.cn/2019/07/13/清北学堂noip2019-test1/</id>
    <published>2019-07-13T12:11:30.000Z</published>
    <updated>2019-07-13T14:02:37.487Z</updated>
    
    <content type="html"><![CDATA[<p>考试题3道，考的第10名。。。自闭了</p><a id="more"></a><h2 id="problem-1-sum"><a href="#problem-1-sum" class="headerlink" title="problem 1:sum"></a>problem 1:sum</h2><p>喵喵和犬犬争做绒绒猫和绒绒犬。</p><p>犬犬说：我的绒绒值有：</p><p>这么大，你是不可能比我大的。</p><p>喵喵笑而不语，在后面加了一个：(mod M) 。</p><p>然后问犬犬：你的绒绒值现在是多少呢？</p><p>1.2 输入格式</p><p>一行3 个数，依次为M;K;N 。</p><p>1.3 输出格式</p><p>一行1 个数，表示犬犬的绒绒值。</p><p>1.4 样例输入</p><p>98 3 4</p><p>1.5 样例输出</p><p>2</p><p>1.6 数据范围<br>对于20% 的数据：N;M;K&lt;=10^3</p><p>对于40% 的数据：N;M&lt;=10^3;K&lt;=10^18</p><p>对于80% 的数据：M&lt;=10^5;N;K&lt;=10^18</p><p>对于100% 的数据：0 &lt; M&lt;=3*10^6;N;K&lt;=10^18</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;考试题3道，考的第10名。。。自闭了&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yueyangwu.cn/categories/OI/"/>
    
      <category term="集训" scheme="http://yueyangwu.cn/categories/OI/%E9%9B%86%E8%AE%AD/"/>
    
    
  </entry>
  
  <entry>
    <title>清北学堂noip2019-Day1</title>
    <link href="http://yueyangwu.cn/2019/07/13/%E6%B8%85%E5%8C%97%E5%AD%A6%E5%A0%82noip2019-Day1/"/>
    <id>http://yueyangwu.cn/2019/07/13/清北学堂noip2019-Day1/</id>
    <published>2019-07-13T04:20:33.000Z</published>
    <updated>2019-07-14T01:08:22.623Z</updated>
    
    <content type="html"><![CDATA[<h1 id="清北学堂noip2019-Day1"><a href="#清北学堂noip2019-Day1" class="headerlink" title="清北学堂noip2019-Day1"></a>清北学堂noip2019-Day1</h1><a id="more"></a><h2 id="贪心算法"><a href="#贪心算法" class="headerlink" title="贪心算法"></a>贪心算法</h2><blockquote><p>P.S. 每道题的代码我之后补加。。。</p></blockquote><h3 id="problem-1：Chocolate"><a href="#problem-1：Chocolate" class="headerlink" title="problem 1：Chocolate"></a>problem 1：Chocolate</h3><h4 id="Chocolate"><a href="#Chocolate" class="headerlink" title="Chocolate"></a><a href="https://www.luogu.org/problemnew/show/P3173" target="_blank" rel="noopener">Chocolate</a></h4><p>一块$n\times m$的巧克力， 切成$n\times m$块。</p><p>巧克力上共有$n-1$条横线和$m-1$条竖线，每次沿着一条线将巧克力切开。</p><p>无论切割长短，横线切一次的代价是$y_1,y_2,y_3,…,y_{n-1}$，竖线是$x_1,x_2,x_3,…,x_{m-1}$。</p><p>求最小总代价。</p><p>$n,m\leq 10^5$</p><h4 id="题解"><a href="#题解" class="headerlink" title="题解"></a><a href="https://www.luogu.org/problemnew/solution/P3173" target="_blank" rel="noopener">题解</a></h4><p>横向切会使纵向次数+1，纵向同理。</p><p>所以肯定先切大的，再切小的。</p><p>于是把横纵放到一起排序，依次取最大值统计答案即可。</p><hr><h3 id="problem-2"><a href="#problem-2" class="headerlink" title="problem 2"></a>problem 2</h3><h4 id="USACO-Allowance"><a href="#USACO-Allowance" class="headerlink" title="USACO Allowance"></a><a href="https://www.luogu.org/problemnew/show/P2376" target="_blank" rel="noopener">USACO Allowance</a></h4><ul><li>John决定每个星期给b一点零花钱</li><li>j有一些硬币， 共n种面额。每一个面额都能整除比他大的所有面额。</li><li>他想用给定的硬币集合（给出硬币种类及数量），每个星期至少给b某个零花钱的数目C。</li><li>请计算他最多能给多少星期零花钱。</li></ul><h4 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a><a href="https://www.luogu.org/problemnew/solution/P2376" target="_blank" rel="noopener">题解</a></h4><ul><li><p>阶段一：尽快接近C，用大面额的凑。</p></li><li><p>阶段二：超过C尽量少，用小面额的凑。</p></li><li><p>开始能用大面额就用大面额，直到凑到的$sum + a_i&gt;C$，然后尽量用小的凑，直到$sum+a_i&gt;C$。</p></li></ul><p>代码：</p><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">int</span> n, c;</span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">node</span>&#123;</span></span><br><span class="line"><span class="hljs-keyword">int</span> v, b;</span><br><span class="line">&#125;a[<span class="hljs-number">30</span>];</span><br><span class="line"><span class="hljs-keyword">int</span> k;</span><br><span class="line"><span class="hljs-keyword">int</span> ans;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">cmp</span><span class="hljs-params">(<span class="hljs-keyword">const</span> node &amp;a, <span class="hljs-keyword">const</span> node &amp;b)</span></span>&#123;</span><br><span class="line"><span class="hljs-keyword">return</span> a.v &lt; b.v;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line"><span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d%d"</span>, &amp;n, &amp;c);</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> v, b;</span><br><span class="line"><span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d%d"</span>, &amp;v, &amp;b);</span><br><span class="line"><span class="hljs-keyword">if</span>(v &gt;= c) ans += b;</span><br><span class="line"><span class="hljs-keyword">else</span> a[++k].v = v, a[k].b = b;</span><br><span class="line">&#125;</span><br><span class="line">sort(a + <span class="hljs-number">1</span>, a + k + <span class="hljs-number">1</span>, cmp);</span><br><span class="line"><span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d\n"</span>, ans);</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= k; i++)&#123;</span><br><span class="line"><span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d %d\n"</span>, a[i].v, a[i].b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">while</span>(<span class="hljs-literal">true</span>)&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> x = c;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = k; i &gt;= <span class="hljs-number">1</span>; i--)&#123;</span><br><span class="line"><span class="hljs-keyword">while</span>(a[i].b &gt; <span class="hljs-number">0</span> &amp;&amp; x &gt;= a[i].v)&#123;</span><br><span class="line">x -= a[i].v;</span><br><span class="line">a[i].b--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">if</span>(x &gt; <span class="hljs-number">0</span>)&#123;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= k; i++)&#123;</span><br><span class="line"><span class="hljs-keyword">if</span>(a[i].b &gt; <span class="hljs-number">0</span> &amp;&amp; x &lt;= a[i].v)&#123;</span><br><span class="line">x -= a[i].v;</span><br><span class="line">a[i].b--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">if</span>(x &gt; <span class="hljs-number">0</span>) <span class="hljs-keyword">break</span>;</span><br><span class="line">ans++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d"</span>, ans);</span><br><span class="line"><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="problem-3"><a href="#problem-3" class="headerlink" title="problem 3"></a>problem 3</h3><h4 id="Face-the-Right-Way"><a href="#Face-the-Right-Way" class="headerlink" title="Face the Right Way"></a><a href="https://www.luogu.org/problemnew/show/P2882" target="_blank" rel="noopener">Face the Right Way</a></h4><p>给出一个长为n的F/B序列，n&lt;=5000。</p><p>你可以每次选择连续长度为k的一段，进行FB转换。</p><p>使得最后整个序列全为F。</p><p>求最少的操作次数和对应的最小长度。</p><h4 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a><a href="https://www.luogu.org/problemnew/solution/P2882?page=2" target="_blank" rel="noopener">题解</a></h4><p> 因为同一个点翻转两次就与没有翻转的效果相同了，因此我们有一个贪心策略为：</p><p>左到右对于出现的每一个B翻转一次从当前点开始的区间，就能保证是最优解。</p><p>但是我们会发现这样是$n^2$的，再枚举长度，就变为了$n^3$。</p><p>因此，需要对区间翻转差分一下，总时间复杂度就是$n^2$的了。<br><img src="/img/p3.png" alt="p3"></p><p>然后下面是我的代码：</p><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">int</span> n, a[<span class="hljs-number">5009</span>], dif[<span class="hljs-number">5009</span>];</span><br><span class="line"><span class="hljs-keyword">int</span> mincnt = <span class="hljs-number">0x3f3f3f3f</span>, minlen;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line"><span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d"</span>, &amp;n);</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line"><span class="hljs-keyword">char</span> c;</span><br><span class="line"><span class="hljs-built_in">cin</span>&gt;&gt;c;</span><br><span class="line">a[i] = (c == <span class="hljs-string">'F'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> len = <span class="hljs-number">1</span>; len &lt;= n; len++)&#123;</span><br><span class="line"><span class="hljs-keyword">int</span> now = <span class="hljs-number">0</span>, cnt = <span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">bool</span> flag = <span class="hljs-literal">true</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) dif[i] = <span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">now ^= dif[i];</span><br><span class="line"><span class="hljs-keyword">if</span>(!(a[i] ^ now))&#123;</span><br><span class="line"><span class="hljs-keyword">if</span>(i + len - <span class="hljs-number">1</span> &gt; n)&#123;</span><br><span class="line">flag = <span class="hljs-literal">false</span>;</span><br><span class="line"><span class="hljs-keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">now ^= <span class="hljs-number">1</span>;</span><br><span class="line">dif[i] ^= <span class="hljs-number">1</span>;</span><br><span class="line">dif[i + len] ^= <span class="hljs-number">1</span>;</span><br><span class="line">cnt++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">if</span>(flag)&#123;</span><br><span class="line"><span class="hljs-keyword">if</span>(cnt &lt; mincnt)&#123;</span><br><span class="line">minlen = len;</span><br><span class="line">mincnt = cnt;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d %d\n"</span>, minlen, mincnt);</span><br><span class="line"><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="problem-4"><a href="#problem-4" class="headerlink" title="problem 4"></a>problem 4</h3><h4 id="旅行家的预算"><a href="#旅行家的预算" class="headerlink" title="旅行家的预算"></a><a href="https://www.luogu.org/problemnew/show/P1016" target="_blank" rel="noopener">旅行家的预算</a></h4><p>一个旅行家想驾驶汽车以最少的费用从一个城市到另一个城市（假设出发时油箱是空的）。</p><p>给定两个城市之间的距离D1、汽车油箱的容量C（以升为单位）、每升汽油能行驶的距离D2、出发点每升汽油价格P和沿途油站数N（N可以为零），油站i离出发点的距离Di、每升汽油价格Pi（i=1,2,…,N）。</p><p>求最少的总费用，如果无法到达目的地，则输出“No Solution”。</p><h4 id="题解-3"><a href="#题解-3" class="headerlink" title="题解"></a><a href="https://www.luogu.org/problemnew/solution/P1016" target="_blank" rel="noopener">题解</a></h4><p>枚举途中经过的加油站，每经过一个加油站，计算一次花费</p><p>在一个加油站所需要加的油，就是能够支持它到达下一个油价比它低的加油站的量</p><p>如果在这个加油站即使加满油，都不能到达一个比它油价低的加油站，就把油箱加满，前往能够到达的加油站中油价最低的那个</p><p>如果在这个加油站即使加满油，都不能到达任意一个加油站，也不能到达终点城市，说明无解</p><hr><h3 id="problem-5"><a href="#problem-5" class="headerlink" title="problem 5"></a>problem 5</h3><h4 id="The-Minima-Game"><a href="#The-Minima-Game" class="headerlink" title="The Minima Game"></a><a href="https://www.luogu.org/problemnew/show/P3507" target="_blank" rel="noopener">The Minima Game</a></h4><p>给出N个正整数，AB两个人轮流取数，A先取。每次可以取任意多个数，直到N个数都被取走。每次获得的得分为取的数中的最小值，A和B的策略都是尽可能使得自己的得分减去对手的得分更大。在这样的情况下，最终A的得分减去B的得分为多少。</p><p>$n\leq 10^5$</p><h4 id="题解-4"><a href="#题解-4" class="headerlink" title="题解"></a><a href="https://www.luogu.org/problemnew/solution/P3507" target="_blank" rel="noopener">题解</a></h4><ul><li>身临其境的分析：</li></ul><p>一方面要让自己取的数中的最小值尽量大，</p><p>一方面要让剩下数中的最大值尽量小。</p><p>故先手肯定会从大到小的取数，</p><p>并且取出的数是连续的一段。</p><ul><li><strong>证明：</strong></li></ul><p>从大到小取数显然，若不是连续取数，则留下的数更多，大的数更多，会给对方更多的机会。所以必然是连续取数。</p><ul><li>所以我们倒着来考虑一下，将所有的数从小到大排列之后，f[i]表示两人取完前i个数，先手减去后手的最大值。(这里先手后手是相对的，因为我们是倒序的，和实际取法是完全相反的，它实际上是处理出了1~i个数的情况下的最优解，A先从i开始往左边取，所以说考虑先手减后手最大值）</li></ul><hr><h3 id="problem-6"><a href="#problem-6" class="headerlink" title="problem 6"></a>problem 6</h3><h4 id="ZJOI2005-午餐"><a href="#ZJOI2005-午餐" class="headerlink" title="[ZJOI2005]午餐"></a><a href="https://www.luogu.org/problemnew/show/P2577" target="_blank" rel="noopener">[ZJOI2005]午餐</a></h4><p>N人来到了食堂，每个人由自己的打饭时间和吃饭时间。</p><p>食堂有两个打饭窗口，我们要把所有的人分成两队，然后一号队伍到一号窗口去排队打饭，二号队伍到二号窗口。每个人打完饭后立刻开始吃。</p><p>现在给定了每个人的打饭时间和吃饭时间，要求安排一种最佳的分队和排队方案使得所有人都吃完饭的时间尽量早。 </p><p>两个窗口是并行操作互不影响的，要求输出最佳方案下所有人吃完饭的时刻。</p><h4 id="题解-5"><a href="#题解-5" class="headerlink" title="题解"></a><a href="https://www.luogu.org/problemnew/solution/P2577" target="_blank" rel="noopener">题解</a></h4><p>贪心的理解，如果所有人都要早点走</p><p>那么吃饭时间长的就先吃，吃饭时间短的就晚点吃</p><p>所以，按照吃饭时间排序</p><p>每个人吃完饭的时间之和前面所有人的打饭的时间和有关</p><p>$f[i][j][k]$表示当前做到第i个人，第一列，第二列前面的人的打饭时间之和分别为$j,k$，最后一个人吃完饭的最小时间.</p><p>但直接三维状态会炸？</p><p>所以，状态是f[i][j]表示当前做到第i个人， 第一列队伍前面所有人打饭的时间和是j时最后一个人吃完饭的最小时间</p><p>如果把这个人放在第一列$f[i][j]=min(f[i][j],max(f[i−1][j−Get[i]],j+eat[i]))$</p><p>另外把这个人放在第二列$f[i][j]=max(f[i−1][j],sum[i]−j+eat[i])$</p><hr><h3 id="problem-7"><a href="#problem-7" class="headerlink" title="problem 7"></a>problem 7</h3><h4 id="Water-Tanks"><a href="#Water-Tanks" class="headerlink" title="Water Tanks"></a>Water Tanks</h4><p>给你一棵树，k升水，p块钱，进行一次游戏。</p><p>在游戏进行前，可以在任意个节点上放置1升水（总数不超过k）</p><p>游戏进行若干轮，每轮游戏开放所有节点，可以选择若干个节点关闭，代价为该节点的水数量。然后所有未关闭节点的水流向它的父亲(不会连续移动)。</p><p>最后，根节点中的水会被取走，水的数量为该轮游戏的盈利。</p><p>求最大盈利-代价。</p><h4 id="题解-6"><a href="#题解-6" class="headerlink" title="题解"></a>题解</h4><p>在放置水的选择上，应该尽量选择深度相邻的节点，即将所有节点按照深度排序后，所选择放水的节点应该是连续的一段。</p><p>考虑选择某段区间后，所需要花费的钱。</p><p>假设深度范围[l , r] ，某个深度的点为 a[i] ，则花费钱为sigma(a[i]*(r-i)) </p><p>用两个指针进行扫描即可。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;清北学堂noip2019-Day1&quot;&gt;&lt;a href=&quot;#清北学堂noip2019-Day1&quot; class=&quot;headerlink&quot; title=&quot;清北学堂noip2019-Day1&quot;&gt;&lt;/a&gt;清北学堂noip2019-Day1&lt;/h1&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yueyangwu.cn/categories/OI/"/>
    
      <category term="集训" scheme="http://yueyangwu.cn/categories/OI/%E9%9B%86%E8%AE%AD/"/>
    
    
  </entry>
  
  <entry>
    <title>清北学堂noip2019-D0</title>
    <link href="http://yueyangwu.cn/2019/07/12/%E6%B8%85%E5%8C%97%E5%AD%A6%E5%A0%82noip2019-D0/"/>
    <id>http://yueyangwu.cn/2019/07/12/清北学堂noip2019-D0/</id>
    <published>2019-07-12T14:36:50.000Z</published>
    <updated>2019-07-12T14:48:17.941Z</updated>
    
    <content type="html"><![CDATA[<h2 id="济南清北学堂游记-Day0"><a href="#济南清北学堂游记-Day0" class="headerlink" title="济南清北学堂游记 Day0"></a>济南清北学堂游记 Day0</h2><a id="more"></a><hr><ul><li>下午1:59的火车，火车上部署了一下hexo blog，搞了一下SEO，结果还是网太慢。。。没搞成</li><li>然后某位同学居然去了另外一个酒店。。。（貌似因为距离大明湖太远？或者我觉得可能只是个借口，反正都这样了，就自己住呗。</li><li>我嫌一个人住太贵，想找个人拼一个标间，于是碰到一位人大附的初二巨佬。。。吊打我八千里开外%%%，然后你们就有了这篇文章。</li><li>准备一会直接洗漱睡了，Day0就这样。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;济南清北学堂游记-Day0&quot;&gt;&lt;a href=&quot;#济南清北学堂游记-Day0&quot; class=&quot;headerlink&quot; title=&quot;济南清北学堂游记 Day0&quot;&gt;&lt;/a&gt;济南清北学堂游记 Day0&lt;/h2&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yueyangwu.cn/categories/OI/"/>
    
      <category term="集训" scheme="http://yueyangwu.cn/categories/OI/%E9%9B%86%E8%AE%AD/"/>
    
    
  </entry>
  
  <entry>
    <title> CodeForces 484 B. Maximum Value</title>
    <link href="http://yueyangwu.cn/2019/06/06/codeforces-484-b-maximum-value/"/>
    <id>http://yueyangwu.cn/2019/06/06/codeforces-484-b-maximum-value/</id>
    <published>2019-06-06T07:05:38.000Z</published>
    <updated>2019-07-12T02:17:57.014Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://codeforces.com/problemset/problem/484/B" title="题目链接" target="_blank" rel="noopener">题目链接</a></p><a id="more"></a><hr><p>题目翻译：给定序列$a_n$，求$a_i \% a_j$的最大值，$1 \leq i,j \leq n$且$a_i&gt;a_j$。 可以先将输入的数据由小到大排序，如果有相同的数据就去重，然后枚举除数，对于一个除数，从它的二倍开始，直到它大于数列中的最大值。 。。。好不通顺。。。看代码吧。</p><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">cmp</span><span class="hljs-params">(<span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span>&amp; a,<span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span>&amp; b)</span></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> a&gt;b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Solution</span>&#123;</span></span><br><span class="line">    <span class="hljs-keyword">int</span> n,ans,maxn,q;</span><br><span class="line">    <span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt; a;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Solve</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d"</span>,&amp;n);</span><br><span class="line">        a.resize(n);</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d"</span>,&amp;a[i]);</span><br><span class="line">            maxn=max(maxn,a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        sort(a.begin(),a.end());</span><br><span class="line">        n=unique(a.begin(),a.end())-a.begin();</span><br><span class="line">        a.resize(n);</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="hljs-keyword">int</span> k=<span class="hljs-number">2</span>*a[i];</span><br><span class="line">            <span class="hljs-keyword">while</span>(k&lt;maxn+a[i])&#123;</span><br><span class="line">                <span class="hljs-keyword">int</span> x=lower_bound(a.begin(),a.end(),k)-a.begin()<span class="hljs-number">-1</span>;</span><br><span class="line">                <span class="hljs-keyword">if</span>(x==<span class="hljs-number">-1</span>)&#123;</span><br><span class="line">                    k+=a[i];</span><br><span class="line">                    <span class="hljs-keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="hljs-comment">//printf("k=%d a[%d]=%d a[x] mod a[i]=%d\n",k,x,a[x],a[x]%a[i]);</span></span><br><span class="line">                ans=max(ans,a[x]%a[i]);</span><br><span class="line">                k+=a[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">    Solution().Solve();</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/484/B&quot; title=&quot;题目链接&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yueyangwu.cn/categories/OI/"/>
    
      <category term="题目" scheme="http://yueyangwu.cn/categories/OI/%E9%A2%98%E7%9B%AE/"/>
    
    
      <category term="精" scheme="http://yueyangwu.cn/tags/%E7%B2%BE/"/>
    
  </entry>
  
  <entry>
    <title> Luogu P1983 车站分级		</title>
    <link href="http://yueyangwu.cn/2019/06/03/luogu-p1983-e8-bd-a6-e7-ab-99-e5-88-86-e7-ba-a7/"/>
    <id>http://yueyangwu.cn/2019/06/03/luogu-p1983-e8-bd-a6-e7-ab-99-e5-88-86-e7-ba-a7/</id>
    <published>2019-06-03T01:36:43.000Z</published>
    <updated>2019-07-11T17:27:36.350Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.org/problemnew/show/P1983" title="题目链接" target="_blank" rel="noopener">题目链接</a></p><a id="more"></a><hr><p>又是一道比较经典的题，据说有什么线段树优化构造。。。反正我是不懂。 这道题使用topsort（拓扑排序）的思想；</p><ul><li>简化题意：n个车站，每个车站有一个级别，如果有一趟列车，这趟列车经过$a_1,a_2,···,a_s$站，且如果这些站中级别最低的车站的级别为$minx$，那么所有在起点站到终点站之间级别大于等于$minx$的车站都必须停靠。那么m趟列车，给定每趟列车的经过站（车站编号升序给出），求所有车站至少分成多少级。</li><li>思路：如果从起点站到终点站之间有火车站没有停靠，就说明这个火车站的级别一定小于所有停靠了的火车站，那么就将每个没有停靠的火车站向停靠的火车站连一条边，这样用topsort的思想，可算出最终分成了几层，便是最少的级别数量；</li><li>例如数据 1 3 5 6停靠 <img src="http://yueyangwu.cn/wp-content/uploads/2019/06/56401.png" alt="1" title="1"></li></ul><p>代码如下</p><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">int</span> n,m,a[<span class="hljs-number">1009</span>],cd[<span class="hljs-number">1009</span>],st[<span class="hljs-number">1009</span>];</span><br><span class="line"><span class="hljs-keyword">bool</span> v[<span class="hljs-number">1009</span>],top[<span class="hljs-number">1009</span>][<span class="hljs-number">1009</span>],del[<span class="hljs-number">1009</span>];</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">    <span class="hljs-built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="hljs-built_in">memset</span>(v,<span class="hljs-number">0</span>,<span class="hljs-keyword">sizeof</span>(v));</span><br><span class="line">        <span class="hljs-keyword">int</span> s;</span><br><span class="line">        <span class="hljs-built_in">cin</span>&gt;&gt;s;</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">1</span>;j&lt;=s;j++)&#123;</span><br><span class="line">            <span class="hljs-built_in">cin</span>&gt;&gt;a[j];</span><br><span class="line">            v[a[j]]=<span class="hljs-number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=a[<span class="hljs-number">1</span>];j&lt;=a[s];j++)&#123;</span><br><span class="line">            <span class="hljs-keyword">if</span>(!v[j])&#123;</span><br><span class="line">                <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> k=<span class="hljs-number">1</span>;k&lt;=s;k++)&#123;</span><br><span class="line">                    <span class="hljs-keyword">if</span>(top[a[k]][j]) <span class="hljs-keyword">continue</span>;</span><br><span class="line">                    top[a[k]][j]=<span class="hljs-number">1</span>;</span><br><span class="line">                    cd[a[k]]++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">int</span> r=<span class="hljs-number">1</span>,ans=<span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">while</span>(r)&#123;</span><br><span class="line">        r=<span class="hljs-number">0</span>;</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="hljs-keyword">if</span>(cd[i]==<span class="hljs-number">0</span>&amp;&amp;!del[i])&#123;</span><br><span class="line">                st[++r]=i;</span><br><span class="line">                del[i]=<span class="hljs-number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">if</span>(r) ans++;</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=r;i++)&#123;</span><br><span class="line">            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">                <span class="hljs-keyword">if</span>(!top[j][st[i]]) <span class="hljs-keyword">continue</span>;</span><br><span class="line">                top[j][st[i]]=<span class="hljs-number">0</span>;</span><br><span class="line">                cd[j]--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://www.luogu.org/problemnew/show/P1983&quot; title=&quot;题目链接&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yueyangwu.cn/categories/OI/"/>
    
      <category term="题目" scheme="http://yueyangwu.cn/categories/OI/%E9%A2%98%E7%9B%AE/"/>
    
    
      <category term="图论" scheme="http://yueyangwu.cn/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="精" scheme="http://yueyangwu.cn/tags/%E7%B2%BE/"/>
    
      <category term="拓扑排序" scheme="http://yueyangwu.cn/tags/%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title> Luogu P2948 [USACO09OPEN]滑雪课Ski Lessons		</title>
    <link href="http://yueyangwu.cn/2019/06/01/luogu-p2948-usaco09open-e6-bb-91-e9-9b-aa-e8-af-beski-lessons/"/>
    <id>http://yueyangwu.cn/2019/06/01/luogu-p2948-usaco09open-e6-bb-91-e9-9b-aa-e8-af-beski-lessons/</id>
    <published>2019-06-01T01:32:17.000Z</published>
    <updated>2019-07-11T17:29:23.230Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.org/problemnew/show/P2948" title="题目链接" target="_blank" rel="noopener">题目链接</a></p><a id="more"></a><hr><p>现在这蓝题都不好想啊qwq 设计状态：$f[i][j]$表示到一门课程结束时间为$i$，能力值为$j$的最多滑雪次数。 所以先给课程按结束时间排个序。 转移： 1. $dp[x][y]=max(dp[x][y],dp[x2][y2]+q)$，$q$是从上节课的结束时刻到这节课的开始时刻的最多滑雪次数。 2. $dp[x][y2]=dp[x2][y2]+(x-x2)/minn[y2]$，$minn[i]$是能力值为i时的最小滑雪时间； 代码：</p><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">int</span> t,s,n;</span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">clas</span>&#123;</span></span><br><span class="line">    <span class="hljs-keyword">int</span> begin,end;</span><br><span class="line">    <span class="hljs-keyword">int</span> v;</span><br><span class="line">&#125;c[<span class="hljs-number">109</span>];</span><br><span class="line"><span class="hljs-keyword">int</span> a[<span class="hljs-number">10009</span>][<span class="hljs-number">2</span>],minn[<span class="hljs-number">10009</span>];</span><br><span class="line"><span class="hljs-keyword">int</span> f[<span class="hljs-number">10009</span>][<span class="hljs-number">109</span>];</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">cmp</span><span class="hljs-params">(clas x,clas y)</span></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> x.end&lt;y.end;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">    <span class="hljs-built_in">cin</span>&gt;&gt;t&gt;&gt;s&gt;&gt;n;</span><br><span class="line">    <span class="hljs-built_in">memset</span>(minn,<span class="hljs-number">0x3f</span>,<span class="hljs-keyword">sizeof</span>(minn));</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=s;i++)&#123;</span><br><span class="line">        <span class="hljs-built_in">cin</span>&gt;&gt;c[i].begin&gt;&gt;c[i].end&gt;&gt;c[i].v;</span><br><span class="line">        c[i].end+=c[i].begin;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="hljs-built_in">cin</span>&gt;&gt;a[i][<span class="hljs-number">0</span>]&gt;&gt;a[i][<span class="hljs-number">1</span>];</span><br><span class="line">        minn[a[i][<span class="hljs-number">0</span>]]=min(minn[a[i][<span class="hljs-number">0</span>]],a[i][<span class="hljs-number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">100</span>;i++) minn[i]=min(minn[i],minn[i<span class="hljs-number">-1</span>]);</span><br><span class="line">    sort(c+<span class="hljs-number">1</span>,c+s+<span class="hljs-number">1</span>,cmp);</span><br><span class="line">    c[<span class="hljs-number">0</span>].v=<span class="hljs-number">1</span>,c[<span class="hljs-number">0</span>].begin=<span class="hljs-number">0</span>,c[<span class="hljs-number">0</span>].end=<span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;=s;i++)&#123;</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">0</span>;j&lt;i;j++)&#123;</span><br><span class="line">            <span class="hljs-keyword">int</span> ti1=c[i].end,v1=c[i].v;</span><br><span class="line">            <span class="hljs-keyword">int</span> ti2=c[j].end,v2=c[j].v;</span><br><span class="line">            <span class="hljs-keyword">if</span>(ti2&lt;c[i].begin) f[ti1][v1]=max(f[ti1][v1],f[ti2][v2]+(c[i].begin-ti2)/minn[v2]);</span><br><span class="line">            f[ti1][v2]=max(f[ti1][v2],f[ti2][v2]+(ti1-ti2)/minn[v2]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;=s;i++)&#123;</span><br><span class="line">        <span class="hljs-keyword">int</span> ti=c[i].end,v=c[i].v;</span><br><span class="line">        f[t][v]=max(f[t][v],f[ti][v]+(t-ti)/minn[v]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">int</span> ans=<span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;=s;i++) ans=max(ans,f[t][c[i].v]);</span><br><span class="line">    <span class="hljs-built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://www.luogu.org/problemnew/show/P2948&quot; title=&quot;题目链接&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yueyangwu.cn/categories/OI/"/>
    
      <category term="题目" scheme="http://yueyangwu.cn/categories/OI/%E9%A2%98%E7%9B%AE/"/>
    
    
      <category term="精" scheme="http://yueyangwu.cn/tags/%E7%B2%BE/"/>
    
      <category term="dp" scheme="http://yueyangwu.cn/tags/dp/"/>
    
  </entry>
  
  <entry>
    <title> Luogu P1875 佳佳的魔法药水		</title>
    <link href="http://yueyangwu.cn/2019/06/01/luogu-p1875-e4-bd-b3-e4-bd-b3-e7-9a-84-e9-ad-94-e6-b3-95-e8-8d-af-e6-b0-b4/"/>
    <id>http://yueyangwu.cn/2019/06/01/luogu-p1875-e4-bd-b3-e4-bd-b3-e7-9a-84-e9-ad-94-e6-b3-95-e8-8d-af-e6-b0-b4/</id>
    <published>2019-06-01T00:19:54.000Z</published>
    <updated>2019-07-11T17:27:10.958Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.org/problemnew/show/P1875" title="链接" target="_blank" rel="noopener">链接</a></p><a id="more"></a><hr><p>图论，明显是dijkstra，$d[i]$数组保存第$i$个药水的最小配置价格，$cnt[i]$保存第$i$个药水最小配置价格的方案数，具体过程： 1. 每次找一个没有访问过的配置价格最小的药水$x$。 2. 枚举所有可以和$x$组成新药水的药水$i$并且已经访问过的节点。 3. 如果$x$和$i$组成的新药水的最小配置价格$d[j]&lt;d[x]+d[i]$，那就更新，并且$cnt[j]=cnt[x] \times cnt[i]$ 4. 否则如果$d[j]=d[x]+d[i]$，那么$cnt[j]+=cnt[i] \times cnt[x]$ 代码：</p><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">int</span> n,m;</span><br><span class="line"><span class="hljs-keyword">int</span> a[<span class="hljs-number">1509</span>][<span class="hljs-number">1509</span>];</span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">node</span>&#123;</span></span><br><span class="line">    <span class="hljs-keyword">int</span> x,y;</span><br><span class="line">    <span class="hljs-keyword">bool</span> v;</span><br><span class="line">&#125;d[<span class="hljs-number">1509</span>][<span class="hljs-number">1509</span>];</span><br><span class="line"><span class="hljs-keyword">bool</span> flag=<span class="hljs-number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">int</span> yc[<span class="hljs-number">4</span>]=&#123;<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">1</span>&#125;,xc[<span class="hljs-number">4</span>]=&#123;<span class="hljs-number">1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x,<span class="hljs-keyword">int</span> y,<span class="hljs-keyword">int</span> rx,<span class="hljs-keyword">int</span> ry)</span></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">if</span>(flag) <span class="hljs-keyword">return</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span>(d[x][y].v&amp;&amp;(d[x][y].x!=rx||d[x][y].y!=ry))&#123;</span><br><span class="line">        flag=<span class="hljs-number">1</span>;</span><br><span class="line">        <span class="hljs-keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    d[x][y].x=x,d[x][y].y=y,d[x][y].v=<span class="hljs-number">1</span>;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">4</span>;i++)&#123;</span><br><span class="line">        <span class="hljs-keyword">int</span> nx,ny;</span><br><span class="line">        <span class="hljs-keyword">if</span>(x+xc[i]==<span class="hljs-number">0</span>) nx=n;</span><br><span class="line">        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(x+xc[i]==n+<span class="hljs-number">1</span>) nx=<span class="hljs-number">1</span>;</span><br><span class="line">        <span class="hljs-keyword">else</span> nx=x+xc[i];</span><br><span class="line">        <span class="hljs-keyword">if</span>(y+yc[i]==<span class="hljs-number">0</span>) ny=m;</span><br><span class="line">        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(y+yc[i]==m+<span class="hljs-number">1</span>) ny=<span class="hljs-number">1</span>;</span><br><span class="line">        <span class="hljs-keyword">else</span> ny=y+yc[i];</span><br><span class="line">        <span class="hljs-keyword">int</span> nrx=rx+xc[i],nry=ry+yc[i];</span><br><span class="line">        <span class="hljs-keyword">if</span>(!a[nx][ny]&amp;&amp;(d[nx][ny].x!=nrx||d[nx][ny].y!=nry||!d[nx][ny].v))&#123;</span><br><span class="line">            dfs(nx,ny,nrx,nry);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">    node start;</span><br><span class="line">    <span class="hljs-keyword">while</span>(<span class="hljs-built_in">cin</span>&gt;&gt;n&gt;&gt;m)&#123;</span><br><span class="line">        flag=<span class="hljs-number">0</span>;</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="hljs-built_in">string</span> c;</span><br><span class="line">            <span class="hljs-built_in">cin</span>&gt;&gt;c;</span><br><span class="line">            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">                d[i][j].x=<span class="hljs-number">0</span>,d[i][j].y=<span class="hljs-number">0</span>,d[i][j].v=<span class="hljs-number">0</span>;</span><br><span class="line">                a[i][j]=<span class="hljs-number">0</span>;</span><br><span class="line">                <span class="hljs-keyword">if</span>(c[j<span class="hljs-number">-1</span>]==<span class="hljs-string">'#'</span>) a[i][j]=<span class="hljs-number">1</span>;</span><br><span class="line">                <span class="hljs-keyword">if</span>(c[j<span class="hljs-number">-1</span>]==<span class="hljs-string">'S'</span>) start.x=i,start.y=j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        dfs(start.x,start.y,start.x,start.y);</span><br><span class="line">        <span class="hljs-keyword">if</span>(flag) <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"Yes"</span>&lt;&lt;<span class="hljs-built_in">endl</span>;</span><br><span class="line">        <span class="hljs-keyword">else</span> <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"No"</span>&lt;&lt;<span class="hljs-built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://www.luogu.org/problemnew/show/P1875&quot; title=&quot;链接&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yueyangwu.cn/categories/OI/"/>
    
      <category term="题目" scheme="http://yueyangwu.cn/categories/OI/%E9%A2%98%E7%9B%AE/"/>
    
    
      <category term="图论" scheme="http://yueyangwu.cn/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="优" scheme="http://yueyangwu.cn/tags/%E4%BC%98/"/>
    
  </entry>
  
  <entry>
    <title> Luogu P1363 幻想迷宫		</title>
    <link href="http://yueyangwu.cn/2019/05/31/luogu-p1363-e5-b9-bb-e6-83-b3-e8-bf-b7-e5-ae-ab/"/>
    <id>http://yueyangwu.cn/2019/05/31/luogu-p1363-e5-b9-bb-e6-83-b3-e8-bf-b7-e5-ae-ab/</id>
    <published>2019-05-31T12:58:04.000Z</published>
    <updated>2019-07-11T17:25:23.768Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.org/problemnew/show/P1363" title="链接" target="_blank" rel="noopener">链接</a></p><a id="more"></a><hr><p>看完题目，最开始的思路是先对图进行搜索，然后搜索在边界的位置是否有道路可以通向这张图对面相同的位置，但是这样的情况就判断不了。</p><pre><code>S.#..######...#</code></pre><p>很明显这张图中上面的道路和下面的道路并不直接相连，但是却可以无限延伸。 所以我看了题解。。。 掌嘴。。。 我好菜啊。。。 心里好慌。。。 然后就是搜索，每一个点向四个方向搜，如果搜到边界，用取模的方式到这张地图的另外一边，同时保存其真实的坐标，这样一来，当真实坐标和这个位置上次访问到的坐标不同时，说明这个点访问了两次，就是说可以无限延伸。 具体看代码吧</p><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">int</span> n,m;</span><br><span class="line"><span class="hljs-keyword">int</span> a[<span class="hljs-number">1509</span>][<span class="hljs-number">1509</span>];</span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">node</span>&#123;</span></span><br><span class="line">    <span class="hljs-keyword">int</span> x,y;</span><br><span class="line">    <span class="hljs-keyword">bool</span> v;</span><br><span class="line">&#125;d[<span class="hljs-number">1509</span>][<span class="hljs-number">1509</span>];</span><br><span class="line"><span class="hljs-keyword">bool</span> flag=<span class="hljs-number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">int</span> yc[<span class="hljs-number">4</span>]=&#123;<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">1</span>&#125;,xc[<span class="hljs-number">4</span>]=&#123;<span class="hljs-number">1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x,<span class="hljs-keyword">int</span> y,<span class="hljs-keyword">int</span> rx,<span class="hljs-keyword">int</span> ry)</span></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">if</span>(flag) <span class="hljs-keyword">return</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span>(d[x][y].v&amp;&amp;(d[x][y].x!=rx||d[x][y].y!=ry))&#123;</span><br><span class="line">        flag=<span class="hljs-number">1</span>;</span><br><span class="line">        <span class="hljs-keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    d[x][y].x=rx,d[x][y].y=ry,d[x][y].v=<span class="hljs-number">1</span>;<span class="hljs-comment">//这里更新一下相当于上次访问到的真实坐标。</span></span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">4</span>;i++)&#123;</span><br><span class="line">        <span class="hljs-keyword">int</span> nx,ny;</span><br><span class="line">        <span class="hljs-keyword">if</span>(x+xc[i]==<span class="hljs-number">0</span>) nx=n;</span><br><span class="line">        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(x+xc[i]==n+<span class="hljs-number">1</span>) nx=<span class="hljs-number">1</span>;</span><br><span class="line">        <span class="hljs-keyword">else</span> nx=x+xc[i];</span><br><span class="line">        <span class="hljs-keyword">if</span>(y+yc[i]==<span class="hljs-number">0</span>) ny=m;</span><br><span class="line">        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(y+yc[i]==m+<span class="hljs-number">1</span>) ny=<span class="hljs-number">1</span>;</span><br><span class="line">        <span class="hljs-keyword">else</span> ny=y+yc[i];</span><br><span class="line">        <span class="hljs-keyword">int</span> nrx=rx+xc[i],nry=ry+yc[i];</span><br><span class="line">        <span class="hljs-keyword">if</span>(!a[nx][ny]&amp;&amp;(d[nx][ny].x!=nrx||d[nx][ny].y!=nry||!d[nx][ny].v))&#123;</span><br><span class="line">            dfs(nx,ny,nrx,nry);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">    node start;</span><br><span class="line">    <span class="hljs-keyword">while</span>(<span class="hljs-built_in">cin</span>&gt;&gt;n&gt;&gt;m)&#123;</span><br><span class="line">        flag=<span class="hljs-number">0</span>;</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="hljs-built_in">string</span> c;</span><br><span class="line">            <span class="hljs-built_in">cin</span>&gt;&gt;c;</span><br><span class="line">            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">                d[i][j].x=<span class="hljs-number">0</span>,d[i][j].y=<span class="hljs-number">0</span>,d[i][j].v=<span class="hljs-number">0</span>;</span><br><span class="line">                a[i][j]=<span class="hljs-number">0</span>;</span><br><span class="line">                <span class="hljs-keyword">if</span>(c[j<span class="hljs-number">-1</span>]==<span class="hljs-string">'#'</span>) a[i][j]=<span class="hljs-number">1</span>;</span><br><span class="line">                <span class="hljs-keyword">if</span>(c[j<span class="hljs-number">-1</span>]==<span class="hljs-string">'S'</span>) start.x=i,start.y=j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        dfs(start.x,start.y,start.x,start.y);</span><br><span class="line">        <span class="hljs-keyword">if</span>(flag) <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"Yes"</span>&lt;&lt;<span class="hljs-built_in">endl</span>;</span><br><span class="line">        <span class="hljs-keyword">else</span> <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"No"</span>&lt;&lt;<span class="hljs-built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://www.luogu.org/problemnew/show/P1363&quot; title=&quot;链接&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yueyangwu.cn/categories/OI/"/>
    
      <category term="题目" scheme="http://yueyangwu.cn/categories/OI/%E9%A2%98%E7%9B%AE/"/>
    
    
      <category term="图论" scheme="http://yueyangwu.cn/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="搜索" scheme="http://yueyangwu.cn/tags/%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title> Luogu P1896 [SCOI2005]互不侵犯		</title>
    <link href="http://yueyangwu.cn/2019/05/28/luogu-p1896-scoi2005-e4-ba-92-e4-b8-8d-e4-be-b5-e7-8a-af/"/>
    <id>http://yueyangwu.cn/2019/05/28/luogu-p1896-scoi2005-e4-ba-92-e4-b8-8d-e4-be-b5-e7-8a-af/</id>
    <published>2019-05-28T13:01:45.000Z</published>
    <updated>2019-07-11T17:27:22.469Z</updated>
    
    <content type="html"><![CDATA[<p>我感觉这道题还不错，状压dp的一类典型问题？ <a href="https://www.luogu.org/problemnew/show/P1896" title="题目链接" target="_blank" rel="noopener">题目链接</a></p><a id="more"></a><hr><p>就是给个n*n的表格，然后放k个旗子，旗子每个旗子相邻的8个格子不能放旗子。问最多有几种放的方法。 状态就是$f[i][j][k]$表示第i行，状态为j，并且已经放了k个格子的方案总数。然后预处理一下can数组，保存左右互不侵犯的状态。再预处理$gs[i]$数组表示状态为i的有多少个旗子(i的二进制里有多少个1)。 这样枚举上一行状态，如果上一行和这一行满足左上，上，右上互不侵犯，那么$f[i][j][k+gs[i]]+=f[i-1][l][k]$ 最终答案就是所有$f[n][i][k]$的和。</p><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">int</span> n,k;</span><br><span class="line">ll f[<span class="hljs-number">10</span>][<span class="hljs-number">1</span>&lt;&lt;<span class="hljs-number">10</span>][<span class="hljs-number">90</span>],can[<span class="hljs-number">1</span>&lt;&lt;<span class="hljs-number">10</span>],tot;</span><br><span class="line"><span class="hljs-keyword">int</span> gs[<span class="hljs-number">1</span>&lt;&lt;<span class="hljs-number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">gs1</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">int</span> cnt=<span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">while</span>(x)&#123;</span><br><span class="line">        <span class="hljs-keyword">if</span>(<span class="hljs-number">1</span>&amp;x) cnt++;</span><br><span class="line">        x&gt;&gt;=<span class="hljs-number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">return</span> gs[tot]=cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">    <span class="hljs-built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;(<span class="hljs-number">1</span>&lt;&lt;n);i++) <span class="hljs-keyword">if</span>(!(i&amp;(i&lt;&lt;<span class="hljs-number">1</span>))) can[++tot]=i,f[<span class="hljs-number">1</span>][tot][gs1(i)]=<span class="hljs-number">1</span>;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">1</span>;j&lt;=tot;j++)&#123;</span><br><span class="line">            <span class="hljs-keyword">int</span> a=can[j];</span><br><span class="line">            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> l=<span class="hljs-number">1</span>;l&lt;=tot;l++)&#123;</span><br><span class="line">                <span class="hljs-keyword">int</span> b=can[l];</span><br><span class="line">                <span class="hljs-keyword">if</span>(a&amp;b) <span class="hljs-keyword">continue</span>;</span><br><span class="line">                <span class="hljs-keyword">if</span>(a&amp;(b&lt;&lt;<span class="hljs-number">1</span>)) <span class="hljs-keyword">continue</span>;</span><br><span class="line">                <span class="hljs-keyword">if</span>(a&amp;(b&gt;&gt;<span class="hljs-number">1</span>)) <span class="hljs-keyword">continue</span>;</span><br><span class="line">                <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> g=<span class="hljs-number">0</span>;g+gs[j]&lt;=k;g++) f[i][j][gs[j]+g]+=f[i<span class="hljs-number">-1</span>][l][g];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ll ans=<span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=tot;i++) ans+=f[n][i][k];</span><br><span class="line">    <span class="hljs-built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我感觉这道题还不错，状压dp的一类典型问题？ &lt;a href=&quot;https://www.luogu.org/problemnew/show/P1896&quot; title=&quot;题目链接&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yueyangwu.cn/categories/OI/"/>
    
      <category term="题目" scheme="http://yueyangwu.cn/categories/OI/%E9%A2%98%E7%9B%AE/"/>
    
    
      <category term="dp" scheme="http://yueyangwu.cn/tags/dp/"/>
    
      <category term="状态压缩，状压" scheme="http://yueyangwu.cn/tags/%E7%8A%B6%E6%80%81%E5%8E%8B%E7%BC%A9%EF%BC%8C%E7%8A%B6%E5%8E%8B/"/>
    
  </entry>
  
  <entry>
    <title> Luogu P1026 统计单词个数		</title>
    <link href="http://yueyangwu.cn/2019/05/28/luogu-p1026-e7-bb-9f-e8-ae-a1-e5-8d-95-e8-af-8d-e4-b8-aa-e6-95-b0/"/>
    <id>http://yueyangwu.cn/2019/05/28/luogu-p1026-e7-bb-9f-e8-ae-a1-e5-8d-95-e8-af-8d-e4-b8-aa-e6-95-b0/</id>
    <published>2019-05-28T12:42:23.000Z</published>
    <updated>2019-07-11T17:22:46.451Z</updated>
    
    <content type="html"><![CDATA[<p>这两天都忙得忘了写了。。。 今天把这几天做的好题都补一下吧。。。 <a href="https://www.luogu.org/problemnew/show/P1026" title="题目链接" target="_blank" rel="noopener">题目链接</a></p><a id="more"></a><hr><p>老实说，这道题已经困扰我好几个月了，刚学dp就知道这道题，现在才做出来，所以准备写一下。。 题意大概就是给一个字符串，和一堆单词，问把这个字符串分成k段后，每段的单词数量的和的最大值是多少。 这道题用string的几个方法非常方便。 - <string>1.find(<string>2)在第一个字符串中查找字符串2，并返回第一个下标，如果不存在，返回1844674407370955161这是个什么鬼东西我也不知道。 - <string>.substr(x,len)取出字符串中以x开头长度为len的一个子字符串。 设计状态：$f[i][k]$代表前i个字符分成k段的最大单词总数。 转移：$f[i][k]=max(f[i][k],f[j][k-1]+sum[j+1][i])$枚举断点j，$sum[i][j]$代表原字符串从i到j的单词总数，先预处理一下。 剩下的看代码吧：</string></string></string></p><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">int</span> n,k,m;</span><br><span class="line"><span class="hljs-built_in">string</span> s,x;</span><br><span class="line"><span class="hljs-built_in">string</span> d[<span class="hljs-number">8</span>];</span><br><span class="line"><span class="hljs-keyword">int</span> dl[<span class="hljs-number">8</span>],sum[<span class="hljs-number">209</span>][<span class="hljs-number">209</span>];</span><br><span class="line"><span class="hljs-keyword">int</span> dp[<span class="hljs-number">209</span>][<span class="hljs-number">49</span>];</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">pd</span><span class="hljs-params">(<span class="hljs-keyword">int</span> l,<span class="hljs-keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="hljs-built_in">string</span> x=s.substr(l,r-l+<span class="hljs-number">1</span>);</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="hljs-keyword">if</span>(x.find(d[i])==<span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">    <span class="hljs-built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    s=<span class="hljs-string">"0"</span>;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="hljs-built_in">cin</span>&gt;&gt;x;</span><br><span class="line">        s=s+x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-built_in">cin</span>&gt;&gt;m;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="hljs-built_in">cin</span>&gt;&gt;d[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">int</span> len=s.length()<span class="hljs-number">-1</span>;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=len;i&gt;=<span class="hljs-number">1</span>;i--)&#123;</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=i;j&gt;=<span class="hljs-number">1</span>;j--)&#123;</span><br><span class="line">            sum[j][i]=sum[j+<span class="hljs-number">1</span>][i];</span><br><span class="line">            <span class="hljs-keyword">if</span>(pd(j,i)) sum[j][i]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=len;i++) dp[i][<span class="hljs-number">1</span>]=sum[<span class="hljs-number">1</span>][i];</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> q=<span class="hljs-number">1</span>;q&lt;=k;q++)&#123;</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=q+<span class="hljs-number">1</span>;i&lt;=len;i++)&#123;</span><br><span class="line">            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=q;j&lt;i;j++)&#123;</span><br><span class="line">                dp[i][q]=max(dp[i][q],dp[j][q<span class="hljs-number">-1</span>]+sum[j+<span class="hljs-number">1</span>][i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-built_in">cout</span>&lt;&lt;dp[len][k];</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这两天都忙得忘了写了。。。 今天把这几天做的好题都补一下吧。。。 &lt;a href=&quot;https://www.luogu.org/problemnew/show/P1026&quot; title=&quot;题目链接&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yueyangwu.cn/categories/OI/"/>
    
      <category term="题目" scheme="http://yueyangwu.cn/categories/OI/%E9%A2%98%E7%9B%AE/"/>
    
    
      <category term="dp" scheme="http://yueyangwu.cn/tags/dp/"/>
    
      <category term="字符串" scheme="http://yueyangwu.cn/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="优" scheme="http://yueyangwu.cn/tags/%E4%BC%98/"/>
    
  </entry>
  
  <entry>
    <title> Luogu P1073 最优贸易		</title>
    <link href="http://yueyangwu.cn/2019/05/21/luogu-p1073-e6-9c-80-e4-bc-98-e8-b4-b8-e6-98-93/"/>
    <id>http://yueyangwu.cn/2019/05/21/luogu-p1073-e6-9c-80-e4-bc-98-e8-b4-b8-e6-98-93/</id>
    <published>2019-05-21T03:36:58.000Z</published>
    <updated>2019-07-11T17:23:06.976Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.org/problemnew/show/P1073" title="题目链接" target="_blank" rel="noopener">题目链接</a></p><a id="more"></a><hr><p>这道题没太明白。。。 题解好多种方法，我就看了看第一种方法。 动态规划+dfs $f[x]$表示到x节点所能拿到差价的最大值。 状态转移方程：$f[x]=max(f[fa],c[x]-minx)$ $c[x],minx$分别是x节点的售价和到x节点的路上的最小售价。 剩下的写注释吧。 代码：</p><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">int</span> n,m,w[<span class="hljs-number">100009</span>];</span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Edge</span>&#123;</span></span><br><span class="line">    <span class="hljs-keyword">int</span> to,nxt;</span><br><span class="line">&#125;e[<span class="hljs-number">1000009</span>];</span><br><span class="line"><span class="hljs-keyword">int</span> head[<span class="hljs-number">100009</span>],tot;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">int</span> f[<span class="hljs-number">100009</span>],minn[<span class="hljs-number">100009</span>];</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">add</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x,<span class="hljs-keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    e[++tot].to=y;</span><br><span class="line">    e[tot].nxt=head[x];</span><br><span class="line">    head[x]=tot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x,<span class="hljs-keyword">int</span> fa,<span class="hljs-keyword">int</span> minx)</span></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">int</span> pd=<span class="hljs-number">1</span>;<span class="hljs-comment">//这个就是判断要不要继续找下去的一个变量。</span></span><br><span class="line">    minx=min(minx,w[x]);<span class="hljs-comment">//更新minx</span></span><br><span class="line">    <span class="hljs-keyword">if</span>(minx&lt;minn[x]) minn[x]=minx,pd=<span class="hljs-number">0</span>;<span class="hljs-comment">//minn保存的是到x节点最小值，这里就是如果最小值小于上一次访问这个节点的最小值，就更新。</span></span><br><span class="line">    <span class="hljs-keyword">int</span> maxx=max(f[fa],w[x]-minx);<span class="hljs-comment">//dp</span></span><br><span class="line">    <span class="hljs-keyword">if</span>(f[x]&lt;maxx) f[x]=maxx,pd=<span class="hljs-number">0</span>;<span class="hljs-comment">//这里是如果这次最大值大于上次访问这个节点时候的最大值，就要把这个新的值传递下去，直到全部传递完。</span></span><br><span class="line">    <span class="hljs-comment">//其实就是这里不太明白。。。</span></span><br><span class="line">    <span class="hljs-keyword">if</span>(pd) <span class="hljs-keyword">return</span>;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=head[x];i;i=e[i].nxt)&#123;</span><br><span class="line">        <span class="hljs-keyword">int</span> y=e[i].to;</span><br><span class="line">        dfs(y,x,minx);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">    <span class="hljs-built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="hljs-built_in">memset</span>(minn,<span class="hljs-number">0x3f</span>,<span class="hljs-keyword">sizeof</span>(minn));</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++) <span class="hljs-built_in">cin</span>&gt;&gt;w[i];</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="hljs-keyword">int</span> x,y,op;</span><br><span class="line">        <span class="hljs-built_in">cin</span>&gt;&gt;x&gt;&gt;y&gt;&gt;op;</span><br><span class="line">        <span class="hljs-keyword">if</span>(op==<span class="hljs-number">1</span>) add(x,y);</span><br><span class="line">        <span class="hljs-keyword">else</span> add(x,y),add(y,x);</span><br><span class="line">    &#125;</span><br><span class="line">    dfs(<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0x3f3f3f3f</span>);</span><br><span class="line">    <span class="hljs-built_in">cout</span>&lt;&lt;f[n];</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://www.luogu.org/problemnew/show/P1073&quot; title=&quot;题目链接&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yueyangwu.cn/categories/OI/"/>
    
      <category term="题目" scheme="http://yueyangwu.cn/categories/OI/%E9%A2%98%E7%9B%AE/"/>
    
    
      <category term="图论" scheme="http://yueyangwu.cn/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="精" scheme="http://yueyangwu.cn/tags/%E7%B2%BE/"/>
    
      <category term="dp" scheme="http://yueyangwu.cn/tags/dp/"/>
    
  </entry>
  
  <entry>
    <title> Luogu P3916 图的遍历		</title>
    <link href="http://yueyangwu.cn/2019/05/16/luogu-p3916-e5-9b-be-e7-9a-84-e9-81-8d-e5-8e-86/"/>
    <id>http://yueyangwu.cn/2019/05/16/luogu-p3916-e5-9b-be-e7-9a-84-e9-81-8d-e5-8e-86/</id>
    <published>2019-05-16T12:11:11.000Z</published>
    <updated>2019-07-11T17:29:57.446Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.org/problemnew/show/P3916" title="题目链接" target="_blank" rel="noopener">题目链接</a></p><a id="more"></a><hr><p>又是一道神奇的题目，题目问从每个点能到达的编号最大的点，相当于一到多，这样可以建反向边，然后跑dfs。 每个点跑一遍dfs，从n到1循环。 代码：</p><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">int</span> n,m,ans[<span class="hljs-number">100009</span>];</span><br><span class="line"></span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Edge</span>&#123;</span></span><br><span class="line">    <span class="hljs-keyword">int</span> to,nxt;</span><br><span class="line">&#125;e[<span class="hljs-number">100009</span>];</span><br><span class="line"><span class="hljs-keyword">int</span> head[<span class="hljs-number">100009</span>],tot;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">add</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x,<span class="hljs-keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    e[++tot].to=y;</span><br><span class="line">    e[tot].nxt=head[x];</span><br><span class="line">    head[x]=tot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x,<span class="hljs-keyword">int</span> fa)</span></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">if</span>(ans[x]!=<span class="hljs-number">0</span>) <span class="hljs-keyword">return</span>;</span><br><span class="line">    ans[x]=fa;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=head[x];i;i=e[i].nxt)&#123;</span><br><span class="line">        <span class="hljs-keyword">int</span> y=e[i].to;</span><br><span class="line">        <span class="hljs-keyword">if</span>(ans[y]==<span class="hljs-number">0</span>) dfs(y,fa);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">    <span class="hljs-built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="hljs-keyword">int</span> x,y;</span><br><span class="line">        <span class="hljs-built_in">cin</span>&gt;&gt;x&gt;&gt;y;</span><br><span class="line">        add(y,x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=n;i&gt;=<span class="hljs-number">1</span>;i--)&#123;</span><br><span class="line">        dfs(i,i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="hljs-built_in">cout</span>&lt;&lt;ans[i]&lt;&lt;<span class="hljs-string">" "</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://www.luogu.org/problemnew/show/P3916&quot; title=&quot;题目链接&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yueyangwu.cn/categories/OI/"/>
    
      <category term="题目" scheme="http://yueyangwu.cn/categories/OI/%E9%A2%98%E7%9B%AE/"/>
    
    
      <category term="图论" scheme="http://yueyangwu.cn/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="优" scheme="http://yueyangwu.cn/tags/%E4%BC%98/"/>
    
  </entry>
  
  <entry>
    <title> 美国贸易战的实质是遏制中国！The essence of the US trade war is to contain China！		</title>
    <link href="http://yueyangwu.cn/2019/05/16/e7-be-8e-e5-9b-bd-e8-b4-b8-e6-98-93-e6-88-98-e7-9a-84-e5-ae-9e-e8-b4-a8-e6-98-af-e9-81-8f-e5-88-b6-e4-b8-ad-e5-9b-bd-ef-bc-81the-essence-of-the-us-trade-war-is-to-contain-china-ef-bc-81/"/>
    <id>http://yueyangwu.cn/2019/05/16/e7-be-8e-e5-9b-bd-e8-b4-b8-e6-98-93-e6-88-98-e7-9a-84-e5-ae-9e-e8-b4-a8-e6-98-af-e9-81-8f-e5-88-b6-e4-b8-ad-e5-9b-bd-ef-bc-81the-essence-of-the-us-trade-war-is-to-contain-china-ef-bc-81/</id>
    <published>2019-05-16T06:26:43.000Z</published>
    <updated>2019-07-12T02:51:03.749Z</updated>
    
    <content type="html"><![CDATA[<p>打开看看？</p><a id="more"></a><p>当大部分人都预期中美贸易磋商即将迎来曙光的时候，美国政客又一次极力诋毁和指责中国，并不顾双方在加强知识产权保护、扩大市场准入、促进双边贸易平衡等方面取得的实质性进展，单方面举起关税大棒，开始对2000亿美元中国输美商品的关税从10%上调至25%，使眼看就要拨云见日的中美经贸磋商瞬间阴云密布。 　　美国政客的极限施压再次惊醒了中美贸易战这头“灰犀牛”，引发了全球投资者的极度不安，全球股票市场均呈现大幅下跌。 　　（一） 　　美国政客为自己的关税大棒找了个说法，声称中国要对之前谈判达成的条款进行重新协商。即使如特朗普先生所言，中国对谈判的文本提出修改意见，这也是中方的基本权利。 　　要知道，中美之间进行的是经贸磋商，磋商就是一个反复商量的过程，就是双方不断讨价还价的过程。你想要什么就给什么，那不是磋商，那是“一边倒”的压服。 　　中国人民历史上被西方列强强加过很多不平等条约，新中国成立后，中国人民好不容易挣脱了这些不平等条约。今天的中国，再也不愿意，也不可能接受新的不平等条约。 　　实际上，中美经贸磋商中一再出尔反尔的倒是美国。2017年11月，特朗普访华，两国元首表示，双方将继续致力于互利共赢的中美经贸合作，中美双方签署了高达2535亿美元的经贸合作协议。但4个月后，2018年3月22日，特朗普就指示美国贸易代表办公室要对中国商品加征关税，要限制中国投资。 　　2018年5月19日，经过艰苦努力，中美达成“不打贸易战，并停止互相加征关税”的共识，并对外发表了联合声明。但仅仅10天后，美国突然宣布将于6月15日公布将被征收25%关税的500亿美元中国产品最终名单，公然违背双方刚达成的共识。如果按照特朗普先生的做法，同美国打交道必然无言可信。 　　再扯远一点，美国在信守承诺上可是劣迹斑斑，他连正在执行中的协议都可以撕毁。比如说最近闹得比较凶的伊朗核问题，之所以横生波澜，就是美国单方面撕毁了伊核协议。要知道这份协议是美国政府自己主导签订的，是联合国安理会一致通过的。美国经常指责中国不遵守承诺，但其实常常不遵守承诺的是他自己。 　　（二） 　　那么美国为什么此时又抡起关税大棒呢？答案应该是美国想从中国身上压榨到更多的利益，想用关税搅乱中国的发展信心。在中美经贸摩擦中，要看透美国行为的本质。美国人看似和我国在谈经贸，但其很多要求早已超出经贸范畴，醉翁之意不在酒，在于遏制中国，在于搅乱中国的发展。 　　对于遏制中国，美国是一以贯之的，只不过不同时期，遏制手段不同而已。以前是制裁、封锁、轰炸使馆等等，今天成了贸易战。 　　美国之所以发起贸易战，其声称的理由是美中贸易不平衡，是美国对华贸易逆差。但其实美国人都清楚，贸易战也许会减少对华贸易逆差，但不可能减少美国的贸易逆差。 　　美国哈佛大学教授，曾经担任过副国务卿的哈珀教授就明确指出，关税不可能减少美国贸易逆差。“特朗普政府一旦真的对中国商品大规模征税，这部分进口来源只会转移到其他经济体，例如孟加拉国、越南等国都会快速替补空缺，因而征收高额关税并不能减少美国逆差总额。” 　　所以，美国关税真正的指向并不是减少其逆差，而是减少中国出口，减少中国顺差，进而遏制我国发展。 　　说白了，美国是不愿意看到中国的发展，中国的强大的。美国政府多次表达了维持“美国第一”的强烈意愿。特朗普曾明确讲：“当我上任时，我们面临的问题是，中国将在非常短的时间内超过我们。但那种情况不会再发生了。”为什么不会再发生了？因为美国正在不遗余力地予以遏制，而且他相信，他能像当年打击日本一样，成功地通过贸易战遏制中国发展势头。在遏制中国发展上，特朗普不是第一人，可能也不是最后一人。 　　美国一位前总统就曾经明确说过：“如果超过十亿的中国居民也像澳大利亚人、美国人现在这样生活，那么我们所有人都将陷入十分悲惨的境地，因为那是这个星球所无法承受的”。 　　而要遏制中国发展，最有效的就是打掉中国的制度优势。美国人对此清楚得很，便假借经贸之手，挥舞关税大棒，意图逼迫中国签署城下之盟，放弃制度优势。 　　但中国早已不是100年前之中国，经贸问题可以谈，但以贸易为幌子对我国的政治体制、对我国的主权行为横加干预，这是我们绝对不能接受的。 　　（三） 　　在经贸磋商中，美国之所以敢不断抡大棒，不断进行极限施压，其所凭借的是中美之间贸易的不对称性。美国的子弹似乎比我们多。但是，手中子弹的多少并不能决定战争的胜负，战争的胜负还要看双方的意志，双方的精神，双方的耐力。 　　遥想当年抗美援朝，志愿军用单衣加土豆加步枪，就打败了拥有当时最精良装备的美国军队。当时，中国手里的子弹不知比现在少多少，但我们还是取得了胜利。 　　自古以来，中国就不是一个任人欺凌的国家，中国人民自古就有伟大的抗争精神。 　　今天，中国不仅有伟大的斗争精神，我们还有强大的斗争能力。 　　中国人珍视和平，以和为贵，但也不会委屈求和。 　　“朋友来了有好酒，豺狼来了有猎枪”，谈，我们好酒相迎，打，我们也不怕，猎枪有的是。 　　中国人不惹事，但也不怕事，该亮剑时必亮剑。（文/陈壮） (责编：白宇) When most people anticipate the dawn of Sino-US trade negotiations, American politicians once again vigorously denigrate and accuse China of unilaterally raising tariff sticks and raising tariffs on $200 billion of Chinese goods exported to the United States from 10% to 25%, despite the substantial progress made by both sides in strengthening intellectual property protection, expanding market access and promoting bilateral trade balance. In the near future, the Sino-US economic and trade consultation will be cloudy. The extreme pressure of American politicians has once again awakened the “gray rhino” of the Sino-US trade war, triggering extreme anxiety among global investors and a sharp drop in global stock markets. (1) American politicians have come up with an argument for their tariff stick, claiming that China will renegotiate previously negotiated terms. Even if, as Mr. Trump said, China proposes amendments to the negotiating text, which is also China’s basic right. We should know that the economic and trade consultation between China and the United States is a process of repeated consultation, that is, the process of continuous bargaining between the two sides. Give whatever you want. It’s not negotiation. It’s one-sided persuasion. Many unequal treaties were imposed by Western powers in the history of the Chinese people. After the founding of New China, the Chinese people had no difficulty in breaking away from these unequal treaties. Today’s China is no longer willing or able to accept new unequal treaties. In fact, it is the United States that has repeatedly backfired in the Sino-US economic and trade negotiations. In November 2017, Trump visited China. The two heads of state said that they would continue to work for mutually beneficial and win-win economic and trade cooperation between China and the United States. The two sides signed an economic and trade cooperation agreement of up to 253.5 billion US dollars. But four months later, on March 22, 2018, Trump instructed the U.S. Trade Representative’s office to impose tariffs on Chinese goods and restrict Chinese investment. On May 19, 2018, after arduous efforts, China and the United States reached a consensus on “no trade war, and stop imposing tariffs on each other”, and issued a joint statement to the outside world. But just 10 days later, the United States suddenly announced on June 15 that it would publish a final list of $50 billion of Chinese products subject to a 25% tariff, in flagrant violation of the consensus just reached between the two sides. If Mr Trump’s approach is followed, dealing with the United States is bound to be wordless and credible. To put it further, the United States is so bad at keeping its promises that it can tear up even the agreements being implemented. For example, the recent Iranian nuclear issue, which has been more fierce, is caused by the unilateral tearing up of the Iranian nuclear agreement by the United States. We should know that this agreement was signed under the leadership of the United States Government and unanimously adopted by the United Nations Security Council. The United States often accuses China of failing to keep its promises, but in fact, it is often him who fails to keep his promises. (two) So why did the United States use the tariff stick again at this time? The answer should be that the United States wants to squeeze more benefits from China and use tariffs to disrupt China’s confidence in development. In the Sino-US economic and trade frictions, we should see through the essence of American behavior. Americans seem to be talking with our country about economy and trade, but many of their requirements have already gone beyond the scope of economy and trade. Drunken men are not interested in wine, but in curbing China and disrupting China’s development. To contain China, the United States is consistent, but in different periods, the means of containment are different. It used to be sanctions, blockades, bombing embassies and so on, but today it has become a trade war. The reason why the United States launched the trade war is that the trade imbalance between the United States and China is the trade deficit between the United States and China. But in fact, Americans know that the trade war may reduce the trade deficit with China, but it is impossible to reduce the trade deficit with the United States. Harvard University professor and former deputy secretary of state Professor Harper made it clear that tariffs could not reduce the U.S. trade deficit. “Once the Trump government really imposes a large-scale tax on Chinese goods, this part of the import source will only be transferred to other economies, such as Bangladesh, Vietnam and other countries will quickly replace the vacancy, so imposing high tariffs will not reduce the total deficit of the United States.” Therefore, the real direction of US tariffs is not to reduce its deficit, but to reduce China’s exports, reduce China’s surplus, and then curb China’s development. To put it bluntly, the United States is unwilling to see the development of China, China’s strong. The U.S. government has repeatedly expressed its strong willingness to maintain “America First”. Trump made it clear: “When I took office, the problem we faced was that China would surpass us in a very short time. But that won’t happen again.” Why won’t it happen again? Because the United States is doing its utmost to curb it, and he believes that he can successfully curb China’s momentum of development through trade wars, just as he did against Japan. Trump is not the first and probably not the last person to curb China’s development. A former president of the United States once said clearly: “If more than one billion Chinese residents live like Australians and Americans now, then all of us will be in a very tragic situation, because that is beyond the capacity of the planet.” To curb China’s development, the most effective way is to eliminate China’s institutional advantages. Americans know this very well, so they use the hand of trade and economy to wave tariff sticks, intending to force China to sign an alliance under the city and abandon its institutional advantages. But China is not China 100 years ago. Economic and trade issues can be discussed. However, it is absolutely unacceptable for us to interfere with our political system and sovereignty under the guise of trade. (three) In the economic and trade negotiations, the reason why the United States dares to continue to make big sticks and exert extreme pressure is the asymmetry of trade between China and the United States. America seems to have more bullets than us. However, the number of hand neutron bombs does not determine the victory or defeat of the war. The victory or defeat of the war depends on the will of both sides, the spirit of both sides and the endurance of both sides. Looking back on the war of resistance against the United States and aid to the DPRK, the volunteer military with single clothes and potatoes and rifles defeated the American army, which had the most sophisticated equipment at that time. At that time, China had fewer bullets than it does now, but we still won. Since ancient times, China has not been a bullying country. The Chinese people have a great spirit of resistance since ancient times. Today, China has not only a great spirit of struggle, but also a strong ability to fight. The Chinese cherish peace and value peace, but they will not compromise and seek peace. “Friends come with good wine, jackals come with shotguns.” Talk about it, we welcome each other with good wine, fight, we are not afraid, there are shotguns. Chinese people are not troublesome, but they are not afraid of things. When they shine their sword, they must shine their sword. (Wen/Chen Zhuang) (Responsibility: Bai Yu) 转载：人民网 Reprint: people.cn</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;打开看看？&lt;/p&gt;
    
    </summary>
    
      <category term="政治" scheme="http://yueyangwu.cn/categories/%E6%94%BF%E6%B2%BB/"/>
    
    
  </entry>
  
  <entry>
    <title> Luogu P1550 [USACO08OCT]打井Watering Hole		</title>
    <link href="http://yueyangwu.cn/2019/05/16/luogu-p1550-usaco08oct-e6-89-93-e4-ba-95watering-hole/"/>
    <id>http://yueyangwu.cn/2019/05/16/luogu-p1550-usaco08oct-e6-89-93-e4-ba-95watering-hole/</id>
    <published>2019-05-16T03:47:44.000Z</published>
    <updated>2019-07-11T17:26:02.274Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.org/problemnew/show/P1550" title="题目链接" target="_blank" rel="noopener">题目链接</a></p><a id="more"></a><hr><p>这道题的思路感觉可以留下来，题目大意就是每个村能打一个井，也能挖水渠到其他村，但是需要所有村都有水，问最小花费。 - 可以建一个虚拟节点，和每个村连起来，边权就是打水井的花费，挖水渠就正常建边。 代码：</p><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">int</span> n,fa[<span class="hljs-number">309</span>];</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">find</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> x==fa[x]?x:fa[x]=find(fa[x]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Edge</span>&#123;</span></span><br><span class="line">    ll x,y,w;</span><br><span class="line">&#125;e[<span class="hljs-number">180009</span>];</span><br><span class="line"><span class="hljs-keyword">int</span> tot;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">add</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x,<span class="hljs-keyword">int</span> y,<span class="hljs-keyword">int</span> w)</span></span>&#123;</span><br><span class="line">    e[++tot].x=x;</span><br><span class="line">    e[tot].y=y;</span><br><span class="line">    e[tot].w=w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">cmp</span><span class="hljs-params">(Edge a,Edge b)</span></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> a.w&lt;b.w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function">ll <span class="hljs-title">kru</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">    ll ans=<span class="hljs-number">0</span>,cnt=<span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=tot;i++)&#123;</span><br><span class="line">        <span class="hljs-keyword">int</span> xx=find(e[i].x),yy=find(e[i].y);</span><br><span class="line">        <span class="hljs-keyword">if</span>(xx==yy) <span class="hljs-keyword">continue</span>;</span><br><span class="line">        fa[xx]=yy;</span><br><span class="line">        ans+=e[i].w;</span><br><span class="line">        cnt++;</span><br><span class="line">        <span class="hljs-keyword">if</span>(cnt==n) <span class="hljs-keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">    <span class="hljs-built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++) fa[i]=i;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="hljs-keyword">int</span> w;</span><br><span class="line">        <span class="hljs-built_in">cin</span>&gt;&gt;w;</span><br><span class="line">        add(<span class="hljs-number">0</span>,i,w),add(i,<span class="hljs-number">0</span>,w);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">            <span class="hljs-keyword">int</span> w;</span><br><span class="line">            <span class="hljs-built_in">cin</span>&gt;&gt;w;</span><br><span class="line">            add(i,j,w);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(e,e+tot+<span class="hljs-number">1</span>,cmp);</span><br><span class="line">    <span class="hljs-built_in">cout</span>&lt;&lt;kru();</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://www.luogu.org/problemnew/show/P1550&quot; title=&quot;题目链接&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yueyangwu.cn/categories/OI/"/>
    
      <category term="题目" scheme="http://yueyangwu.cn/categories/OI/%E9%A2%98%E7%9B%AE/"/>
    
    
      <category term="图论" scheme="http://yueyangwu.cn/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="精" scheme="http://yueyangwu.cn/tags/%E7%B2%BE/"/>
    
      <category term="最小生成树" scheme="http://yueyangwu.cn/tags/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title> 最短路算法——SPFA		</title>
    <link href="http://yueyangwu.cn/2019/05/15/e6-9c-80-e7-9f-ad-e8-b7-af-e7-ae-97-e6-b3-95-spfa/"/>
    <id>http://yueyangwu.cn/2019/05/15/e6-9c-80-e7-9f-ad-e8-b7-af-e7-ae-97-e6-b3-95-spfa/</id>
    <published>2019-05-15T12:13:40.000Z</published>
    <updated>2019-07-11T17:07:45.266Z</updated>
    
    <content type="html"><![CDATA[<p>emmmm。。。我不得不承认。。。学OI这么长时间，并不会写SPFA。。。</p><a id="more"></a><hr><p>好吧。。直接上代码</p><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">int</span> n,m,s,dis[<span class="hljs-number">10009</span>];</span><br><span class="line"><span class="hljs-keyword">bool</span> flag,vis[<span class="hljs-number">10009</span>];</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">int</span> cnt[<span class="hljs-number">10009</span>];<span class="hljs-comment">//环 </span></span><br><span class="line"></span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Edge</span>&#123;</span></span><br><span class="line">    <span class="hljs-keyword">int</span> to,nxt,w;</span><br><span class="line">&#125;e[<span class="hljs-number">500009</span>];</span><br><span class="line"><span class="hljs-keyword">int</span> head[<span class="hljs-number">10009</span>],tot;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">add</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x,<span class="hljs-keyword">int</span> y,<span class="hljs-keyword">int</span> w)</span></span>&#123;</span><br><span class="line">    e[++tot].to=y;</span><br><span class="line">    e[tot].nxt=head[x];</span><br><span class="line">    e[tot].w=w;</span><br><span class="line">    head[x]=tot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">spfa</span><span class="hljs-params">(<span class="hljs-keyword">int</span> st)</span></span>&#123;</span><br><span class="line">    <span class="hljs-built_in">queue</span>&lt;<span class="hljs-keyword">int</span>&gt; q;</span><br><span class="line">    q.push(st);</span><br><span class="line">    dis[st]=<span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">while</span>(!q.empty())&#123;</span><br><span class="line">        <span class="hljs-keyword">int</span> x=q.front();</span><br><span class="line">        q.pop();</span><br><span class="line">        vis[x]=<span class="hljs-number">1</span>;</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=head[x];i;i=e[i].nxt)&#123;</span><br><span class="line">            <span class="hljs-keyword">int</span> y=e[i].to;</span><br><span class="line">            <span class="hljs-keyword">if</span>(dis[y]&gt;dis[x]+e[i].w)&#123;</span><br><span class="line">                dis[y]=dis[x]+e[i].w;</span><br><span class="line">                cnt[y]++;</span><br><span class="line">                <span class="hljs-keyword">if</span>(cnt[y]&gt;n)&#123;</span><br><span class="line">                    flag=<span class="hljs-number">1</span>;</span><br><span class="line">                    <span class="hljs-keyword">return</span>;</span><br><span class="line">                &#125;<span class="hljs-comment">//判环 </span></span><br><span class="line">                <span class="hljs-keyword">if</span>(!vis[y])&#123;</span><br><span class="line">                    q.push(y);</span><br><span class="line">                    vis[y]=<span class="hljs-number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        vis[x]=<span class="hljs-number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">    <span class="hljs-built_in">cin</span>&gt;&gt;n&gt;&gt;m&gt;&gt;s;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="hljs-keyword">int</span> x,y,w;</span><br><span class="line">        <span class="hljs-built_in">cin</span>&gt;&gt;x&gt;&gt;y&gt;&gt;w;</span><br><span class="line">        add(x,y,w);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-built_in">memset</span>(dis,<span class="hljs-number">0x3f</span>,<span class="hljs-keyword">sizeof</span>(dis));</span><br><span class="line">    spfa(s);</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="hljs-keyword">if</span>(dis[i]==<span class="hljs-number">0x3f3f3f3f</span>) <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-number">2147483647</span>&lt;&lt;<span class="hljs-string">" "</span>;</span><br><span class="line">        <span class="hljs-keyword">else</span> <span class="hljs-built_in">cout</span>&lt;&lt;dis[i]&lt;&lt;<span class="hljs-string">" "</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;emmmm。。。我不得不承认。。。学OI这么长时间，并不会写SPFA。。。&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yueyangwu.cn/categories/OI/"/>
    
      <category term="知识点" scheme="http://yueyangwu.cn/categories/OI/%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    
      <category term="图论" scheme="http://yueyangwu.cn/tags/%E5%9B%BE%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title> Luogu P2285 [HNOI2004]打鼹鼠		</title>
    <link href="http://yueyangwu.cn/2019/05/09/luogu-p2285-hnoi2004-e6-89-93-e9-bc-b9-e9-bc-a0/"/>
    <id>http://yueyangwu.cn/2019/05/09/luogu-p2285-hnoi2004-e6-89-93-e9-bc-b9-e9-bc-a0/</id>
    <published>2019-05-09T02:15:29.000Z</published>
    <updated>2019-07-11T17:28:16.096Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.org/problemnew/show/P2285" title="题目链接" target="_blank" rel="noopener">题目链接</a></p><a id="more"></a><hr><p>我开始想到棋盘问题。。。三维数组爆空间。。。 然后就看了看算法标签 想了个一维dp $f[i]$表示前i个地鼠最多能被砸死几个，因为发现时间是按顺序排列的，所以可以想到从当前时间前面探出头的地鼠转移，所以 - $f[i]=max(f[i],f[j]+1)(a[j].t&lt;a[i].t$且$dis(i,j)\leq tim(i,j))$ 代码：</p><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">int</span> f[<span class="hljs-number">10009</span>],n,m;</span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">node</span>&#123;</span></span><br><span class="line">    <span class="hljs-keyword">int</span> t,x,y;</span><br><span class="line">&#125;a[<span class="hljs-number">10009</span>];</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">dis</span><span class="hljs-params">(<span class="hljs-keyword">int</span> i,<span class="hljs-keyword">int</span> j)</span></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-built_in">abs</span>(a[i].x-a[j].x)+<span class="hljs-built_in">abs</span>(a[i].y-a[j].y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">    <span class="hljs-built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="hljs-built_in">cin</span>&gt;&gt;a[i].t&gt;&gt;a[i].x&gt;&gt;a[i].y;</span><br><span class="line">        f[i]=<span class="hljs-number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">1</span>;j&lt;=i<span class="hljs-number">-1</span>;j++)&#123;</span><br><span class="line">            <span class="hljs-keyword">if</span>(dis(i,j)&lt;=<span class="hljs-built_in">abs</span>(a[i].t-a[j].t))&#123;</span><br><span class="line">                f[i]=max(f[i],f[j]+<span class="hljs-number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">int</span> ans=<span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        ans=max(ans,f[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://www.luogu.org/problemnew/show/P2285&quot; title=&quot;题目链接&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yueyangwu.cn/categories/OI/"/>
    
      <category term="题目" scheme="http://yueyangwu.cn/categories/OI/%E9%A2%98%E7%9B%AE/"/>
    
    
      <category term="dp" scheme="http://yueyangwu.cn/tags/dp/"/>
    
      <category term="优" scheme="http://yueyangwu.cn/tags/%E4%BC%98/"/>
    
  </entry>
  
  <entry>
    <title> Luogu P1282 多米诺骨牌（精）		</title>
    <link href="http://yueyangwu.cn/2019/05/08/luogu-p1282-e5-a4-9a-e7-b1-b3-e8-af-ba-e9-aa-a8-e7-89-8c-ef-bc-88-e7-b2-be-ef-bc-89/"/>
    <id>http://yueyangwu.cn/2019/05/08/luogu-p1282-e5-a4-9a-e7-b1-b3-e8-af-ba-e9-aa-a8-e7-89-8c-ef-bc-88-e7-b2-be-ef-bc-89/</id>
    <published>2019-05-08T14:29:21.000Z</published>
    <updated>2019-07-11T17:24:06.581Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.org/problemnew/show/P1282" title="题目链接" target="_blank" rel="noopener">题目链接</a> 总结一下：这种题用背包。。。（蒟蒻的我看不出来qwq）</p><a id="more"></a><hr><p>我们先把骨牌翻转，调整至点数大的在上面 这样，我们就能保证上方的点数一定比下方大，并且保证每翻转一 次，都能使上下的点数之差变小，而变小的点数，就是上下点数之差乘以2。 把改变的点数看成物品的体积，初始上下方的点数之差看做背包体积，不难看出背包问题的模型。 那么物品的重量是什么呢？ 因为我们一开始就把点数大的放在了上面，而每放一次，翻转次数就+1。考虑：要是我后来后悔了，我发现不翻这个骨牌更好怎么办？那我会把它翻回来，那么相当于没有翻这个骨牌。 因此，一开始翻过的骨牌重量就是-1，未翻过的骨牌重量就是1（重量等价于翻转次数） 当然，上下相同的骨牌就是体积为0，重量为0的物品，因为他们无论怎么翻，都不会对上下点数差造成影响。 至此，背包的模型就出来了。这个问题被简化成：有n个物品，给出每个物品的体积v[i],他们的重量是1或-1。背包的重量为base，体积为tot，现在请把这n个物品放到背包里去，总体积不能超过tot，体积最大的情况下使得物品重量之和最小。 其中，dp[i][j]表示前i件物品能装到体积为j的最小重量 vs[i][j]表示前i件物品能否装到j体积</p><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">int</span> n,m,c;</span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">node</span>&#123;</span></span><br><span class="line">    <span class="hljs-keyword">int</span> a,b;</span><br><span class="line">&#125;a[<span class="hljs-number">1009</span>];</span><br><span class="line"><span class="hljs-keyword">int</span> f[<span class="hljs-number">1009</span>][<span class="hljs-number">5009</span>],v[<span class="hljs-number">1009</span>],w[<span class="hljs-number">1009</span>];</span><br><span class="line"><span class="hljs-keyword">bool</span> vis[<span class="hljs-number">1009</span>][<span class="hljs-number">5009</span>];</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">    <span class="hljs-built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="hljs-built_in">cin</span>&gt;&gt;a[i].a&gt;&gt;a[i].b;</span><br><span class="line">        <span class="hljs-keyword">if</span>(a[i].a&lt;a[i].b)&#123;</span><br><span class="line">            swap(a[i].a,a[i].b);</span><br><span class="line">            w[i]=<span class="hljs-number">-1</span>;</span><br><span class="line">            v[i]=a[i].a-a[i].b;</span><br><span class="line">            m+=v[i];</span><br><span class="line">            v[i]*=<span class="hljs-number">2</span>;</span><br><span class="line">            c++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">else</span>&#123;</span><br><span class="line">            w[i]=<span class="hljs-number">1</span>;</span><br><span class="line">            v[i]=a[i].a-a[i].b;</span><br><span class="line">            m+=v[i];</span><br><span class="line">            v[i]*=<span class="hljs-number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">            f[i][j]=f[i<span class="hljs-number">-1</span>][j];</span><br><span class="line">            vis[i][j]=vis[i<span class="hljs-number">-1</span>][j];</span><br><span class="line">            <span class="hljs-keyword">if</span>(vis[i<span class="hljs-number">-1</span>][j-v[i]]||j-v[i]==<span class="hljs-number">0</span>)&#123;</span><br><span class="line">                <span class="hljs-keyword">if</span>(!vis[i][j])&#123;</span><br><span class="line">                    f[i][j]=f[i<span class="hljs-number">-1</span>][j-v[i]]+w[i];</span><br><span class="line">                    vis[i][j]=<span class="hljs-number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="hljs-keyword">else</span>&#123;</span><br><span class="line">                    f[i][j]=min(f[i][j],f[i<span class="hljs-number">-1</span>][j-v[i]]+w[i]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=m;i&gt;=<span class="hljs-number">0</span>;i--)&#123;</span><br><span class="line">        <span class="hljs-keyword">if</span>(vis[n][i])&#123;</span><br><span class="line">            <span class="hljs-built_in">cout</span>&lt;&lt;f[n][i]+c;</span><br><span class="line">            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://www.luogu.org/problemnew/show/P1282&quot; title=&quot;题目链接&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt; 总结一下：这种题用背包。。。（蒟蒻的我看不出来qwq）&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yueyangwu.cn/categories/OI/"/>
    
      <category term="题目" scheme="http://yueyangwu.cn/categories/OI/%E9%A2%98%E7%9B%AE/"/>
    
    
      <category term="精" scheme="http://yueyangwu.cn/tags/%E7%B2%BE/"/>
    
      <category term="dp" scheme="http://yueyangwu.cn/tags/dp/"/>
    
  </entry>
  
</feed>
