<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog of YorkWu</title>
  
  <subtitle>山西省实验中学蒟蒻OIer</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yueyangwu.cn/"/>
  <updated>2019-09-13T14:37:51.689Z</updated>
  <id>http://yueyangwu.cn/</id>
  
  <author>
    <name>Yueyang Wu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Luogu P1948 [USACO08JAN]电话线</title>
    <link href="http://yueyangwu.cn/2019/09/13/luogu-P1948-USACO08JAN-%E7%94%B5%E8%AF%9D%E7%BA%BF/"/>
    <id>http://yueyangwu.cn/2019/09/13/luogu-P1948-USACO08JAN-电话线/</id>
    <published>2019-09-13T14:30:52.000Z</published>
    <updated>2019-09-13T14:37:51.689Z</updated>
    
    <content type="html"><![CDATA[<p>这是一个我认为思路比较奇妙的图论题</p><a id="more"></a><p><a href="https://www.luogu.org/problem/P1948" target="_blank" rel="noopener">题目链接</a></p><ul><li>看到这道题的时候，我并没有想到二分，然后看了题解才发现好像确实是可以二分的，因为是要求整条路径上最大的边权最小，所以二分边权（即答案）。</li><li>对于每一条边，如果它的边权大于mid，说明它需要用掉一个把该边设置为0的权力，因此边权为1，而一个边权小于mid时，其不需要用掉把边权变成0的权利，因为它本身就不是那个“最大的”边权。</li></ul><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">int</span> n, m, k;</span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Edge</span>&#123;</span></span><br><span class="line">    <span class="hljs-keyword">int</span> to, nxt, w;</span><br><span class="line">&#125;e[<span class="hljs-number">20009</span>];</span><br><span class="line"><span class="hljs-keyword">int</span> head[<span class="hljs-number">1009</span>], tot;</span><br><span class="line"><span class="hljs-keyword">bool</span> vis[<span class="hljs-number">1009</span>];</span><br><span class="line"><span class="hljs-keyword">int</span> d[<span class="hljs-number">1009</span>];</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">add</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x, <span class="hljs-keyword">int</span> y, <span class="hljs-keyword">int</span> w)</span></span>&#123;</span><br><span class="line">    e[++tot].to = y;</span><br><span class="line">    e[tot].w = w;</span><br><span class="line">    e[tot].nxt = head[x];</span><br><span class="line">    head[x] = tot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">dijkstra</span><span class="hljs-params">(<span class="hljs-keyword">int</span> s, <span class="hljs-keyword">int</span> limit)</span></span>&#123;</span><br><span class="line">    priority_queue&lt;pair&lt;<span class="hljs-keyword">int</span>, <span class="hljs-keyword">int</span>&gt; &gt; pq;</span><br><span class="line">    <span class="hljs-built_in">memset</span>(vis, <span class="hljs-number">0</span>, <span class="hljs-keyword">sizeof</span>(vis));</span><br><span class="line">    <span class="hljs-built_in">memset</span>(d, <span class="hljs-number">0x3f3f3f3f</span>, <span class="hljs-keyword">sizeof</span>(d));</span><br><span class="line">    d[s] = <span class="hljs-number">0</span>;</span><br><span class="line">    pq.push(make_pair(-d[s], s));</span><br><span class="line">    <span class="hljs-keyword">while</span>(!pq.empty())&#123;</span><br><span class="line">        <span class="hljs-keyword">int</span> x = pq.top().second;</span><br><span class="line">        pq.pop();</span><br><span class="line">        vis[x] = <span class="hljs-number">1</span>;</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = head[x]; i; i = e[i].nxt)&#123;</span><br><span class="line">            <span class="hljs-keyword">int</span> y = e[i].to, w = e[i].w;</span><br><span class="line">            <span class="hljs-keyword">if</span>(w &gt; limit) w = <span class="hljs-number">1</span>;</span><br><span class="line">            <span class="hljs-keyword">else</span> w = <span class="hljs-number">0</span>;</span><br><span class="line">            <span class="hljs-keyword">if</span>(d[y] &gt; d[x] + w)&#123;</span><br><span class="line">                d[y] = d[x] + w;</span><br><span class="line">                pq.push(make_pair(-d[y], y));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">if</span>(d[n] &gt; k) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;</span><br><span class="line">    <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d%d%d"</span>, &amp;n, &amp;m, &amp;k);</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= m; i++)&#123;</span><br><span class="line">        <span class="hljs-keyword">int</span> x, y, w;</span><br><span class="line">        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d%d%d"</span>, &amp;x, &amp;y, &amp;w);</span><br><span class="line">        add(x, y, w);</span><br><span class="line">        add(y, x, w);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">int</span> l = <span class="hljs-number">0</span>, r = <span class="hljs-number">1000009</span>;</span><br><span class="line">    <span class="hljs-keyword">while</span>(l &lt; r)&#123;</span><br><span class="line">        <span class="hljs-keyword">int</span> mid = (l + r) / <span class="hljs-number">2</span>;</span><br><span class="line">        <span class="hljs-keyword">if</span>(dijkstra(<span class="hljs-number">1</span>, mid)) r = mid;</span><br><span class="line">        <span class="hljs-keyword">else</span> l = mid + <span class="hljs-number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">if</span>(l &gt; <span class="hljs-number">1000000</span>) <span class="hljs-built_in">printf</span>(<span class="hljs-string">"-1\n"</span>);</span><br><span class="line">    <span class="hljs-keyword">else</span> <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d\n"</span>, l);</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是一个我认为思路比较奇妙的图论题&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yueyangwu.cn/categories/OI/"/>
    
      <category term="题目" scheme="http://yueyangwu.cn/categories/OI/%E9%A2%98%E7%9B%AE/"/>
    
    
      <category term="图论" scheme="http://yueyangwu.cn/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="二分答案" scheme="http://yueyangwu.cn/tags/%E4%BA%8C%E5%88%86%E7%AD%94%E6%A1%88/"/>
    
  </entry>
  
  <entry>
    <title>Luogu P1379 八数码难题</title>
    <link href="http://yueyangwu.cn/2019/09/12/luogu-P1379-%E5%85%AB%E6%95%B0%E7%A0%81%E9%9A%BE%E9%A2%98/"/>
    <id>http://yueyangwu.cn/2019/09/12/luogu-P1379-八数码难题/</id>
    <published>2019-09-12T09:10:25.000Z</published>
    <updated>2019-09-12T11:38:47.810Z</updated>
    
    <content type="html"><![CDATA[<p>普通广搜</p><a id="more"></a><ul><li>广搜，移动0的位置，并且用map去重，顺便map也记录一下最小步数。</li><li>采用long long保存一下状态，逐层深入，直到找到答案。</li></ul><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">int</span> xc[<span class="hljs-number">4</span>] = &#123;<span class="hljs-number">1</span>, <span class="hljs-number">-1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>&#125;;</span><br><span class="line"><span class="hljs-keyword">int</span> yc[<span class="hljs-number">4</span>] = &#123;<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">-1</span>, <span class="hljs-number">1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Solution</span>&#123;</span></span><br><span class="line">    ll begin;</span><br><span class="line">    <span class="hljs-built_in">map</span>&lt;ll, <span class="hljs-keyword">int</span>&gt; hash;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Solve</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%lld"</span>, &amp;begin);</span><br><span class="line">        <span class="hljs-built_in">queue</span>&lt;ll&gt; q;</span><br><span class="line">        q.push(begin);</span><br><span class="line">        <span class="hljs-keyword">while</span>(!q.empty())&#123;</span><br><span class="line">            <span class="hljs-keyword">int</span> state = q.front();</span><br><span class="line">            q.pop();</span><br><span class="line">            <span class="hljs-keyword">if</span>(state == <span class="hljs-number">123804765</span>) <span class="hljs-keyword">break</span>;</span><br><span class="line">            <span class="hljs-keyword">int</span> a[<span class="hljs-number">3</span>][<span class="hljs-number">3</span>], x, y;</span><br><span class="line">            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">3</span>; i++)&#123;</span><br><span class="line">                <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">3</span>; j++)&#123;</span><br><span class="line">                    a[i][j] = (<span class="hljs-keyword">int</span>)(state / (<span class="hljs-built_in">pow</span>(<span class="hljs-number">10</span>, <span class="hljs-number">9</span> - (i * <span class="hljs-number">3</span> + j + <span class="hljs-number">1</span>)))) % <span class="hljs-number">10</span>;</span><br><span class="line">                    <span class="hljs-keyword">if</span>(!a[i][j]) x = i, y = j;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="hljs-comment">//long long转矩阵</span></span><br><span class="line">            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)&#123;</span><br><span class="line">                <span class="hljs-keyword">int</span> xn = x + xc[i], yn = y + yc[i];</span><br><span class="line">                <span class="hljs-keyword">if</span>(xn &gt; <span class="hljs-number">2</span> || xn &lt; <span class="hljs-number">0</span> || yn &gt; <span class="hljs-number">2</span> || yn &lt; <span class="hljs-number">0</span>) <span class="hljs-keyword">continue</span>;</span><br><span class="line">                swap(a[xn][yn], a[x][y]);</span><br><span class="line">                ll now = <span class="hljs-number">0</span>;</span><br><span class="line">                <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">3</span>; i++)&#123;</span><br><span class="line">                    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">3</span>; j++)&#123;</span><br><span class="line">                        now = now * <span class="hljs-number">10</span> + a[i][j];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;<span class="hljs-comment">//矩阵转long long</span></span><br><span class="line">                <span class="hljs-keyword">if</span>(hash[now] == <span class="hljs-number">0</span>)&#123;</span><br><span class="line">                    <span class="hljs-comment">//如果没有保存过就压入队列</span></span><br><span class="line">                    hash[now] = hash[state] + <span class="hljs-number">1</span>;</span><br><span class="line">                    q.push(now);</span><br><span class="line">                &#125;</span><br><span class="line">                swap(a[xn][yn], a[x][y]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d"</span>, hash[<span class="hljs-number">123804765</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">    Solution().Solve();</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;普通广搜&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yueyangwu.cn/categories/OI/"/>
    
      <category term="题目" scheme="http://yueyangwu.cn/categories/OI/%E9%A2%98%E7%9B%AE/"/>
    
    
      <category term="搜索" scheme="http://yueyangwu.cn/tags/%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>luogu P2859 [USACO06FEB]摊位预订</title>
    <link href="http://yueyangwu.cn/2019/09/12/luogu-P2859-USACO06FEB-%E6%91%8A%E4%BD%8D%E9%A2%84%E8%AE%A2/"/>
    <id>http://yueyangwu.cn/2019/09/12/luogu-P2859-USACO06FEB-摊位预订/</id>
    <published>2019-09-12T08:56:32.000Z</published>
    <updated>2019-09-12T09:05:17.005Z</updated>
    
    <content type="html"><![CDATA[<p>一道蓝题贪心</p><a id="more"></a><ul><li>对于输入的时间，先按照起始时间排个序。</li><li>先把第一个奶牛的结束时间插入到优先队列（小根堆）中，对于第2到n的奶牛：<ol><li>取出堆顶，其结束时间若小于当前奶牛开始时间，便让当前奶牛使用的牛棚设置为堆顶那个奶牛使用的牛棚</li><li>若其结束时间大于当前奶牛开始时间，由于已经按照起始时间排序，所以当前奶牛不能用现有牛棚，之后的奶牛也肯定不能，所以新建一个牛棚，让这个奶牛使用。</li></ol></li></ul><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">node</span>&#123;</span></span><br><span class="line">    <span class="hljs-keyword">int</span> a, b, id, use;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">cmp1</span><span class="hljs-params">(<span class="hljs-keyword">const</span> node &amp;a, <span class="hljs-keyword">const</span> node &amp;b)</span></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> a.a &lt; b.a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">cmp2</span><span class="hljs-params">(<span class="hljs-keyword">const</span> node &amp;a, <span class="hljs-keyword">const</span> node &amp;b)</span></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> a.id &lt; b.id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Solution</span>&#123;</span></span><br><span class="line">    <span class="hljs-keyword">int</span> n;</span><br><span class="line">    <span class="hljs-built_in">vector</span>&lt;node&gt; a;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Solve</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d"</span>, &amp;n);</span><br><span class="line">        a.resize(n + <span class="hljs-number">1</span>);</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d%d"</span>, &amp;a[i].a, &amp;a[i].b);</span><br><span class="line">            a[i].id = i;</span><br><span class="line">        &#125;</span><br><span class="line">        sort(a.begin() + <span class="hljs-number">1</span>, a.end(), cmp1);</span><br><span class="line">        priority_queue&lt;pair&lt;<span class="hljs-keyword">int</span>, <span class="hljs-keyword">int</span>&gt; &gt; pq;</span><br><span class="line">        <span class="hljs-keyword">int</span> num = <span class="hljs-number">1</span>;</span><br><span class="line">        pq.push(make_pair(-a[<span class="hljs-number">1</span>].b, num));</span><br><span class="line">        a[<span class="hljs-number">1</span>].use = <span class="hljs-number">1</span>;</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">2</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="hljs-keyword">int</span> last = -pq.top().first;</span><br><span class="line">            <span class="hljs-keyword">int</span> lnum = pq.top().second;</span><br><span class="line">            <span class="hljs-keyword">if</span>(last &lt; a[i].a)&#123;</span><br><span class="line">                pq.pop();</span><br><span class="line">                a[i].use = lnum;</span><br><span class="line">                pq.push(make_pair(-a[i].b, lnum));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="hljs-keyword">else</span>&#123;</span><br><span class="line">                num++;</span><br><span class="line">                a[i].use = num;</span><br><span class="line">                pq.push(make_pair(-a[i].b, num));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sort(a.begin() + <span class="hljs-number">1</span>, a.end(), cmp2);</span><br><span class="line">        <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d\n"</span>, num);</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d\n"</span>, a[i].use);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">    Solution().Solve();</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一道蓝题贪心&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yueyangwu.cn/categories/OI/"/>
    
      <category term="题目" scheme="http://yueyangwu.cn/categories/OI/%E9%A2%98%E7%9B%AE/"/>
    
    
      <category term="贪心" scheme="http://yueyangwu.cn/tags/%E8%B4%AA%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>Luogu P2862 [USACO06JAN]把牛</title>
    <link href="http://yueyangwu.cn/2019/09/12/luogu-p2862-USACO06JAN-%E6%8A%8A%E7%89%9B/"/>
    <id>http://yueyangwu.cn/2019/09/12/luogu-p2862-USACO06JAN-把牛/</id>
    <published>2019-09-12T08:01:31.000Z</published>
    <updated>2019-09-12T08:51:39.013Z</updated>
    
    <content type="html"><![CDATA[<p>一道双指针+二分答案</p><a id="more"></a><ul><li>首先二分边长，主要是check函数怎么写。</li><li>输入的时候，把每个点都存两次，然后两个数组分别按照x，y坐标排序，然后双指针跑一遍，具体看代码注释。</li></ul><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">node</span>&#123;</span></span><br><span class="line">    <span class="hljs-keyword">int</span> x, y;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">cmpx</span><span class="hljs-params">(<span class="hljs-keyword">const</span> node &amp;a, <span class="hljs-keyword">const</span> node &amp;b)</span></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> a.x == b.x ? a.y &lt; b.y : a.x &lt; b.x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">cmpy</span><span class="hljs-params">(<span class="hljs-keyword">const</span> node &amp;a, <span class="hljs-keyword">const</span> node &amp;b)</span></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> a.y == b.y ? a.x &lt; b.x : a.y &lt; b.y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Solution</span>&#123;</span></span><br><span class="line">    <span class="hljs-keyword">int</span> n, c;</span><br><span class="line">    <span class="hljs-built_in">vector</span>&lt;node&gt; xc, yc;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">getSum</span><span class="hljs-params">(<span class="hljs-keyword">int</span> l, <span class="hljs-keyword">int</span> len)</span></span>&#123;</span><br><span class="line">        <span class="hljs-keyword">int</span> res = <span class="hljs-number">0</span>;</span><br><span class="line">        <span class="hljs-keyword">int</span> r = l + len - <span class="hljs-number">1</span>;</span><br><span class="line">        <span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt; ls;</span><br><span class="line">        ls.push_back(<span class="hljs-number">0</span>);</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="hljs-keyword">if</span>(yc[i].x &gt;= l &amp;&amp; yc[i].x &lt;= r)&#123;</span><br><span class="line">                ls.push_back(yc[i].y);</span><br><span class="line">                <span class="hljs-comment">//把横坐标l到r的所有点按照纵坐标的顺序保存一下，方便一会上指针。</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">int</span> pl = <span class="hljs-number">1</span>, pr = <span class="hljs-number">1</span>;</span><br><span class="line">        <span class="hljs-keyword">while</span>(pr &lt; ls.size() &amp;&amp; ls[pr] - ls[pl] + <span class="hljs-number">1</span> &lt;= len) pr++;</span><br><span class="line">        <span class="hljs-keyword">if</span>(pr &gt;= ls.size() || ls[pr] - ls[pl] + <span class="hljs-number">1</span> &gt; len) pr--;</span><br><span class="line">        <span class="hljs-comment">//上面while和if初始化一下pr，使pl到pr里面的纵坐标满足条件。</span></span><br><span class="line">        <span class="hljs-keyword">while</span>(pr &lt; ls.size() &amp;&amp; pl &lt;= pr)&#123;</span><br><span class="line">            res = max(res, pr - pl + <span class="hljs-number">1</span>);</span><br><span class="line">            <span class="hljs-comment">//保存一下在整个过程在满足mid限制条件的情况下，最多在栅栏里能有多少点。</span></span><br><span class="line">            pr++;</span><br><span class="line">            <span class="hljs-keyword">while</span>(ls[pr] - ls[pl] + <span class="hljs-number">1</span> &gt; len) pl++;</span><br><span class="line">            <span class="hljs-comment">//往右继续扫。</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">check</span><span class="hljs-params">(<span class="hljs-keyword">int</span> mid)</span></span>&#123;</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="hljs-comment">//这里枚举一下左端点。</span></span><br><span class="line">            <span class="hljs-keyword">if</span>(getSum(xc[i].x, mid) &gt;= c)&#123;</span><br><span class="line">                <span class="hljs-comment">//如果有一种情况使其达到要求，返回true。</span></span><br><span class="line">                <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Solve</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d%d"</span>, &amp;c, &amp;n);</span><br><span class="line">        xc.resize(n + <span class="hljs-number">1</span>);</span><br><span class="line">        yc.resize(n + <span class="hljs-number">1</span>);</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d%d"</span>, &amp;xc[i].x, &amp;xc[i].y);</span><br><span class="line">            yc[i].x = xc[i].x, yc[i].y = xc[i].y;</span><br><span class="line">        &#125;</span><br><span class="line">        sort(xc.begin() + <span class="hljs-number">1</span>, xc.end(), cmpx);</span><br><span class="line">        sort(yc.begin() + <span class="hljs-number">1</span>, yc.end(), cmpy);</span><br><span class="line">        <span class="hljs-keyword">int</span> l = <span class="hljs-number">0</span>, r = <span class="hljs-number">10010</span>;</span><br><span class="line">        <span class="hljs-keyword">while</span>(l &lt; r)&#123;</span><br><span class="line">            <span class="hljs-keyword">int</span> mid = (l + r) &gt;&gt; <span class="hljs-number">1</span>;</span><br><span class="line">            <span class="hljs-keyword">if</span>(check(mid)) r = mid;</span><br><span class="line">            <span class="hljs-keyword">else</span> l = mid + <span class="hljs-number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d\n"</span>, l);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">    Solution().Solve();</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一道双指针+二分答案&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yueyangwu.cn/categories/OI/"/>
    
      <category term="题目" scheme="http://yueyangwu.cn/categories/OI/%E9%A2%98%E7%9B%AE/"/>
    
    
      <category term="二分答案" scheme="http://yueyangwu.cn/tags/%E4%BA%8C%E5%88%86%E7%AD%94%E6%A1%88/"/>
    
      <category term="双指针" scheme="http://yueyangwu.cn/tags/%E5%8F%8C%E6%8C%87%E9%92%88/"/>
    
  </entry>
  
  <entry>
    <title>Cows</title>
    <link href="http://yueyangwu.cn/2019/09/12/Cows/"/>
    <id>http://yueyangwu.cn/2019/09/12/Cows/</id>
    <published>2019-09-12T08:00:13.000Z</published>
    <updated>2019-09-12T08:00:13.416Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Luogu P1228 地毯填补问题</title>
    <link href="http://yueyangwu.cn/2019/09/12/luogu-p1228-%E5%9C%B0%E6%AF%AF%E5%A1%AB%E8%A1%A5%E9%97%AE%E9%A2%98/"/>
    <id>http://yueyangwu.cn/2019/09/12/luogu-p1228-地毯填补问题/</id>
    <published>2019-09-12T07:33:47.000Z</published>
    <updated>2019-09-12T07:58:33.293Z</updated>
    
    <content type="html"><![CDATA[<p>难想的巧妙的分治题</p><a id="more"></a><ul><li>我都不记得写过什么分治题，好像并没写过什么。。。</li><li>题目上给了k一定是2的幂次，先考虑为0的情况，很明显不需要填，k为1时，只需要在所在点的其余三个空格填补完成即可。</li></ul><p><img src="../img/P1228_1.png" alt="k=1"></p><p><img src="../img/P1228_2.png" alt="k=2"></p><ul><li>k=2时，可以在中间点放一个适应的地毯，分治到其他剩余3个k=1的方格中，右上的k=1的方格可以把公主位置当作左下角，左下角的k=1的方格把公主当作右上角的位置，右下角的k=1方格把公主位置当作左上角，如下图</li></ul><p><img src="../img/P1228_2_2.png" alt="k=2"></p><p><img src="../img/P1228_2_3.png" alt="k=2"></p><ul><li>k=3同理，如下图</li></ul><p><img src="../img/P1228_3_1.png" alt="k=3"></p><p><img src="../img/P1228_3_2.png" alt="k=3"></p><ul><li>递归用分治解决即可。</li></ul><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Solution</span>&#123;</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x, <span class="hljs-keyword">int</span> y, <span class="hljs-keyword">int</span> a, <span class="hljs-keyword">int</span> b, <span class="hljs-keyword">int</span> len)</span></span>&#123;</span><br><span class="line">        <span class="hljs-keyword">if</span>(len == <span class="hljs-number">1</span>) <span class="hljs-keyword">return</span>;</span><br><span class="line">        <span class="hljs-keyword">if</span>(x-a&lt;=len/<span class="hljs-number">2</span><span class="hljs-number">-1</span> &amp;&amp; y-b&lt;=len/<span class="hljs-number">2</span><span class="hljs-number">-1</span>)&#123;</span><br><span class="line">            <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d %d 1\n"</span>, a + len / <span class="hljs-number">2</span>, b + len / <span class="hljs-number">2</span>);</span><br><span class="line">            dfs(x, y, a, b, len / <span class="hljs-number">2</span>);</span><br><span class="line">            dfs(a + len / <span class="hljs-number">2</span> - <span class="hljs-number">1</span>, b + len / <span class="hljs-number">2</span>, a, b + len / <span class="hljs-number">2</span>, len / <span class="hljs-number">2</span>);</span><br><span class="line">            dfs(a + len / <span class="hljs-number">2</span>, b + len / <span class="hljs-number">2</span> - <span class="hljs-number">1</span>, a + len / <span class="hljs-number">2</span>, b, len / <span class="hljs-number">2</span>);</span><br><span class="line">            dfs(a + len / <span class="hljs-number">2</span>, b + len / <span class="hljs-number">2</span>, a + len / <span class="hljs-number">2</span>, b + len / <span class="hljs-number">2</span>, len / <span class="hljs-number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(x-a&lt;=len/<span class="hljs-number">2</span><span class="hljs-number">-1</span> &amp;&amp; y-b&gt;len/<span class="hljs-number">2</span><span class="hljs-number">-1</span>)&#123;<span class="hljs-comment">//x&lt;a+l/2 &amp;&amp; y-b&lt;=l/2-1</span></span><br><span class="line">            <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d %d 2\n"</span>, a + len / <span class="hljs-number">2</span>, b + len / <span class="hljs-number">2</span> - <span class="hljs-number">1</span>);</span><br><span class="line">            dfs(a + len / <span class="hljs-number">2</span> - <span class="hljs-number">1</span>, b + len / <span class="hljs-number">2</span> - <span class="hljs-number">1</span>, a, b, len / <span class="hljs-number">2</span>);</span><br><span class="line">            dfs(x, y, a, b + len / <span class="hljs-number">2</span>, len / <span class="hljs-number">2</span>);</span><br><span class="line">            dfs(a + len / <span class="hljs-number">2</span>, b + len / <span class="hljs-number">2</span> - <span class="hljs-number">1</span>, a + len / <span class="hljs-number">2</span>, b, len / <span class="hljs-number">2</span>);</span><br><span class="line">            dfs(a + len / <span class="hljs-number">2</span>, b + len / <span class="hljs-number">2</span>, a + len / <span class="hljs-number">2</span>, b + len / <span class="hljs-number">2</span>, len / <span class="hljs-number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(x-a&gt;len/<span class="hljs-number">2</span><span class="hljs-number">-1</span> &amp;&amp; y-b&lt;=len/<span class="hljs-number">2</span><span class="hljs-number">-1</span>)&#123;</span><br><span class="line">            <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d %d 3\n"</span>, a + len / <span class="hljs-number">2</span> - <span class="hljs-number">1</span>, b + len / <span class="hljs-number">2</span>);</span><br><span class="line">            dfs(a + len / <span class="hljs-number">2</span> - <span class="hljs-number">1</span>, b + len / <span class="hljs-number">2</span> - <span class="hljs-number">1</span>, a, b, len / <span class="hljs-number">2</span>);</span><br><span class="line">            dfs(a + len / <span class="hljs-number">2</span> - <span class="hljs-number">1</span>, b + len / <span class="hljs-number">2</span>, a, b + len / <span class="hljs-number">2</span>, len / <span class="hljs-number">2</span>);</span><br><span class="line">            dfs(x, y, a + len / <span class="hljs-number">2</span>, b, len / <span class="hljs-number">2</span>);</span><br><span class="line">            dfs(a + len / <span class="hljs-number">2</span>, b + len / <span class="hljs-number">2</span>, a + len / <span class="hljs-number">2</span>, b + len / <span class="hljs-number">2</span>, len / <span class="hljs-number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">else</span>&#123;</span><br><span class="line">            <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d %d 4\n"</span>, a + len / <span class="hljs-number">2</span> - <span class="hljs-number">1</span>, b + len / <span class="hljs-number">2</span> - <span class="hljs-number">1</span>);</span><br><span class="line">            dfs(a + len / <span class="hljs-number">2</span> - <span class="hljs-number">1</span>, b + len / <span class="hljs-number">2</span> - <span class="hljs-number">1</span>, a, b, len / <span class="hljs-number">2</span>);</span><br><span class="line">            dfs(a + len / <span class="hljs-number">2</span> - <span class="hljs-number">1</span>, b + len / <span class="hljs-number">2</span>, a, b + len / <span class="hljs-number">2</span>, len / <span class="hljs-number">2</span>);</span><br><span class="line">            dfs(a + len / <span class="hljs-number">2</span>, b + len / <span class="hljs-number">2</span> - <span class="hljs-number">1</span>, a + len / <span class="hljs-number">2</span>, b, len / <span class="hljs-number">2</span>);</span><br><span class="line">            dfs(x, y, a + len / <span class="hljs-number">2</span>, b + len / <span class="hljs-number">2</span>, len / <span class="hljs-number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Solve</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">        <span class="hljs-keyword">int</span> n, x, y;</span><br><span class="line">        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d%d%d"</span>, &amp;n, &amp;x, &amp;y);</span><br><span class="line">        dfs(x, y, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span> &lt;&lt; n);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">    Solution().Solve();</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;难想的巧妙的分治题&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yueyangwu.cn/categories/OI/"/>
    
      <category term="题目" scheme="http://yueyangwu.cn/categories/OI/%E9%A2%98%E7%9B%AE/"/>
    
    
      <category term="分治" scheme="http://yueyangwu.cn/tags/%E5%88%86%E6%B2%BB/"/>
    
  </entry>
  
  <entry>
    <title>Luogu P1074 靶形数独</title>
    <link href="http://yueyangwu.cn/2019/09/12/luogu-p1074-%E9%9D%B6%E5%BD%A2%E6%95%B0%E7%8B%AC/"/>
    <id>http://yueyangwu.cn/2019/09/12/luogu-p1074-靶形数独/</id>
    <published>2019-09-12T07:22:28.000Z</published>
    <updated>2019-09-12T07:31:13.042Z</updated>
    
    <content type="html"><![CDATA[<p>深搜+剪枝</p><a id="more"></a><ul><li>深搜每一个点的数值，用一个数组$vis[3][x][id]$，vis第一维表示行/列/块，第二维表示第几行/列块，第三维表示id这个数，有没有被占，保证满足题目要求，每次搜完整个数独的时候，统计一下答案，最终取答案的最大值输出。</li><li>一个最优性剪枝就是：因为枚举的顺序对答案没有影响，所以先枚举0最少的行，保证搜索树最小。（但是我没写出来）</li></ul><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">// luogu-judger-enable-o2</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Solution</span>&#123;</span></span><br><span class="line">    <span class="hljs-keyword">int</span> a[<span class="hljs-number">15</span>][<span class="hljs-number">15</span>], b[<span class="hljs-number">15</span>][<span class="hljs-number">15</span>], ans;</span><br><span class="line">    <span class="hljs-keyword">bool</span> vis[<span class="hljs-number">3</span>][<span class="hljs-number">15</span>][<span class="hljs-number">10</span>], flag;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">getBlock</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x, <span class="hljs-keyword">int</span> y)</span></span>&#123;</span><br><span class="line">        <span class="hljs-keyword">return</span> ((y - <span class="hljs-number">1</span>) / <span class="hljs-number">3</span>) * <span class="hljs-number">3</span> + (x - <span class="hljs-number">1</span>) / <span class="hljs-number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">getGrade</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x, <span class="hljs-keyword">int</span> y)</span></span>&#123;</span><br><span class="line">        <span class="hljs-keyword">if</span>(x == <span class="hljs-number">1</span> || y == <span class="hljs-number">1</span> || x == <span class="hljs-number">9</span> || y == <span class="hljs-number">9</span>) <span class="hljs-keyword">return</span> <span class="hljs-number">6</span>;</span><br><span class="line">        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(x == <span class="hljs-number">2</span> || y == <span class="hljs-number">2</span> || x == <span class="hljs-number">8</span> || y == <span class="hljs-number">8</span>) <span class="hljs-keyword">return</span> <span class="hljs-number">7</span>;</span><br><span class="line">        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(x == <span class="hljs-number">3</span> || y == <span class="hljs-number">3</span> || x == <span class="hljs-number">7</span> || y == <span class="hljs-number">7</span>) <span class="hljs-keyword">return</span> <span class="hljs-number">8</span>;</span><br><span class="line">        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(x == <span class="hljs-number">4</span> || y == <span class="hljs-number">4</span> || x == <span class="hljs-number">6</span> || y == <span class="hljs-number">6</span>) <span class="hljs-keyword">return</span> <span class="hljs-number">9</span>;</span><br><span class="line">        <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">check</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">        <span class="hljs-keyword">int</span> res = <span class="hljs-number">0</span>;</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">9</span>; i++)&#123;</span><br><span class="line">            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">1</span>; j &lt;= <span class="hljs-number">9</span>; j++)&#123;</span><br><span class="line">                res += a[i][j] * getGrade(i, j);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-keyword">int</span> k)</span></span>&#123;</span><br><span class="line">        <span class="hljs-keyword">int</span> x = (k % <span class="hljs-number">9</span> == <span class="hljs-number">0</span> ? <span class="hljs-number">9</span> : k % <span class="hljs-number">9</span>);</span><br><span class="line">        <span class="hljs-keyword">int</span> y = ((k - <span class="hljs-number">1</span>) / <span class="hljs-number">9</span>) + <span class="hljs-number">1</span>;</span><br><span class="line">        <span class="hljs-keyword">if</span>(k == <span class="hljs-number">82</span>)&#123;</span><br><span class="line">            flag = <span class="hljs-number">1</span>;</span><br><span class="line">            ans = max(check(), ans);</span><br><span class="line">            <span class="hljs-keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">if</span>(!a[x][y])&#123;</span><br><span class="line">            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">9</span>; i++)&#123;</span><br><span class="line">                <span class="hljs-keyword">if</span>(vis[<span class="hljs-number">0</span>][x][i] || vis[<span class="hljs-number">1</span>][y][i] || vis[<span class="hljs-number">2</span>][getBlock(x, y)][i]) <span class="hljs-keyword">continue</span>;</span><br><span class="line">                vis[<span class="hljs-number">0</span>][x][i] = <span class="hljs-number">1</span>;</span><br><span class="line">                vis[<span class="hljs-number">1</span>][y][i] = <span class="hljs-number">1</span>;</span><br><span class="line">                vis[<span class="hljs-number">2</span>][getBlock(x, y)][i] = <span class="hljs-number">1</span>;</span><br><span class="line">                a[x][y] = i;</span><br><span class="line">                dfs(k + <span class="hljs-number">1</span>);</span><br><span class="line">                a[x][y] = <span class="hljs-number">0</span>;</span><br><span class="line">                vis[<span class="hljs-number">0</span>][x][i] = <span class="hljs-number">0</span>;</span><br><span class="line">                vis[<span class="hljs-number">1</span>][y][i] = <span class="hljs-number">0</span>;</span><br><span class="line">                vis[<span class="hljs-number">2</span>][getBlock(x, y)][i] = <span class="hljs-number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">else</span> dfs(k + <span class="hljs-number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Solve</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">        flag = <span class="hljs-number">0</span>;</span><br><span class="line">        ans = <span class="hljs-number">0</span>;</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">9</span>; i++)&#123;</span><br><span class="line">            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">1</span>; j &lt;= <span class="hljs-number">9</span>; j++)&#123;</span><br><span class="line">                <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d"</span>, &amp;a[i][j]);</span><br><span class="line">                <span class="hljs-keyword">if</span>(a[i][j] == <span class="hljs-number">0</span>) <span class="hljs-keyword">continue</span>;</span><br><span class="line">                vis[<span class="hljs-number">0</span>][i][a[i][j]] = <span class="hljs-number">1</span>;</span><br><span class="line">                vis[<span class="hljs-number">1</span>][j][a[i][j]] = <span class="hljs-number">1</span>;</span><br><span class="line">                vis[<span class="hljs-number">2</span>][getBlock(i, j)][a[i][j]] = <span class="hljs-number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        dfs(<span class="hljs-number">1</span>);</span><br><span class="line">        <span class="hljs-keyword">if</span>(flag) <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d\n"</span>, ans);</span><br><span class="line">        <span class="hljs-keyword">else</span> <span class="hljs-built_in">printf</span>(<span class="hljs-string">"-1\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">    Solution().Solve();</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;深搜+剪枝&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yueyangwu.cn/categories/OI/"/>
    
      <category term="题目" scheme="http://yueyangwu.cn/categories/OI/%E9%A2%98%E7%9B%AE/"/>
    
    
      <category term="搜索" scheme="http://yueyangwu.cn/tags/%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>Luogu P1462 通往奥格瑞玛的道路</title>
    <link href="http://yueyangwu.cn/2019/09/12/luogu-p1462-%E9%80%9A%E5%BE%80%E5%A5%A5%E6%A0%BC%E7%91%9E%E7%8E%9B%E7%9A%84%E9%81%93%E8%B7%AF/"/>
    <id>http://yueyangwu.cn/2019/09/12/luogu-p1462-通往奥格瑞玛的道路/</id>
    <published>2019-09-12T06:22:27.000Z</published>
    <updated>2019-09-12T06:46:08.702Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>博客挺久没更新了，准备今天多更新点</p></li><li><p>九月份也开始停课了，但是还是很慌，如果各方大佬看到，就当作个笑话好了qwq</p></li></ul><a id="more"></a><p>这是九月三号做的题， 到现在也已经十天了，都快忘了。</p><ul><li>这是一道图论上的二分题，二分一下答案，也就是二分缴费最多的一次的费用，check函数是最短路，限制最短路：如果在最短路过程中， 遇到一个城市需要交的费用大于mid，就忽略这个城市，这样跑一次最短路，看一下从1到n血量会不会减到小于0，如果小于0，考虑了l = mid + 1，否则考虑mid = r</li><li>代码:</li></ul><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Solution</span>&#123;</span></span><br><span class="line">    <span class="hljs-keyword">int</span> n, m;</span><br><span class="line">    ll b, maxv;</span><br><span class="line">    <span class="hljs-built_in">vector</span>&lt;<span class="hljs-built_in">vector</span>&lt;pair&lt;<span class="hljs-keyword">int</span>, ll&gt; &gt; &gt; e;</span><br><span class="line">    <span class="hljs-built_in">vector</span>&lt;ll&gt; v;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">dijkstra</span><span class="hljs-params">(<span class="hljs-keyword">int</span> s, ll limit)</span></span>&#123;</span><br><span class="line">        <span class="hljs-built_in">vector</span>&lt;ll&gt; d;</span><br><span class="line">        <span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">bool</span>&gt; vis;</span><br><span class="line">        vis.resize(n + <span class="hljs-number">1</span>);</span><br><span class="line">        d.resize(n + <span class="hljs-number">1</span>, <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>);</span><br><span class="line">        priority_queue&lt;pair&lt;ll, <span class="hljs-keyword">int</span>&gt; &gt; pq;</span><br><span class="line">        d[s] = <span class="hljs-number">0</span>;</span><br><span class="line">        pq.push(make_pair(-d[s], s));</span><br><span class="line">        <span class="hljs-keyword">while</span>(!pq.empty())&#123;</span><br><span class="line">            <span class="hljs-keyword">int</span> x = pq.top().second;</span><br><span class="line">            pq.pop();</span><br><span class="line">            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; e[x].size(); i++)&#123;</span><br><span class="line">                <span class="hljs-keyword">int</span> y = e[x][i].first;</span><br><span class="line">                <span class="hljs-keyword">int</span> value = e[x][i].second;</span><br><span class="line">                <span class="hljs-keyword">if</span>(vis[y] || v[y] &gt; limit) <span class="hljs-keyword">continue</span>;</span><br><span class="line">                vis[y] = <span class="hljs-number">1</span>;</span><br><span class="line">                <span class="hljs-keyword">if</span>(d[y] &gt; d[x] + value)&#123;</span><br><span class="line">                    d[y] = d[x] + value;</span><br><span class="line">                    pq.push(make_pair(-d[y], y));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">if</span>(d[n] &gt;= b) <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">        <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Solve</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">        maxv = <span class="hljs-number">0</span>;</span><br><span class="line">        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d%d%lld"</span>, &amp;n, &amp;m, &amp;b);</span><br><span class="line">        v.resize(n + <span class="hljs-number">1</span>);</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%lld"</span>, &amp;v[i]), maxv = max(maxv, v[i]);</span><br><span class="line">        e.resize(n + <span class="hljs-number">1</span>);</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= m; i++)&#123;</span><br><span class="line">            <span class="hljs-keyword">int</span> x, y;</span><br><span class="line">            ll w;</span><br><span class="line">            <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d%d%lld"</span>, &amp;x, &amp;y, &amp;w);</span><br><span class="line">            e[x].push_back(make_pair(y, w));</span><br><span class="line">            e[y].push_back(make_pair(x, w));</span><br><span class="line">        &#125;</span><br><span class="line">        ll l = <span class="hljs-number">0</span>, r = maxv + <span class="hljs-number">10</span>;</span><br><span class="line">        <span class="hljs-keyword">while</span>(l &lt; r)&#123;</span><br><span class="line">            ll mid = (l + r) / <span class="hljs-number">2</span>;</span><br><span class="line">            <span class="hljs-keyword">if</span>(dijkstra(<span class="hljs-number">1</span>, mid)) r = mid;</span><br><span class="line">            <span class="hljs-keyword">else</span> l = mid + <span class="hljs-number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">if</span>(l &gt; maxv) <span class="hljs-built_in">printf</span>(<span class="hljs-string">"AFK\n"</span>);</span><br><span class="line">        <span class="hljs-keyword">else</span> <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%lld\n"</span>, l);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">    Solution().Solve();</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;博客挺久没更新了，准备今天多更新点&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;九月份也开始停课了，但是还是很慌，如果各方大佬看到，就当作个笑话好了qwq&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yueyangwu.cn/categories/OI/"/>
    
      <category term="题目" scheme="http://yueyangwu.cn/categories/OI/%E9%A2%98%E7%9B%AE/"/>
    
    
      <category term="图论" scheme="http://yueyangwu.cn/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="二分答案" scheme="http://yueyangwu.cn/tags/%E4%BA%8C%E5%88%86%E7%AD%94%E6%A1%88/"/>
    
  </entry>
  
  <entry>
    <title>2019/8/30随笔</title>
    <link href="http://yueyangwu.cn/2019/08/30/2019-8-30%E9%9A%8F%E7%AC%94/"/>
    <id>http://yueyangwu.cn/2019/08/30/2019-8-30随笔/</id>
    <published>2019-08-30T13:22:02.000Z</published>
    <updated>2019-08-31T02:20:12.546Z</updated>
    
    <content type="html"><![CDATA[<p>今天洛谷大吉，但。。。</p><a id="more"></a><p>早上7:00来到学校，现在是21:23，来了学校zhl说要借我电脑搞神经网络，我感觉比较高级，就看了看，然后也没看懂。本来今天想弄oj来着，然后网络中心某老师，上午10:00才来上班（这两天已经上班了，昨天和这位老师说好的），然后来了就以各种理由为借口（可能人家是真的忙吧）说他太忙，过“两”天再说，然后czf就看见他开始坐在办公室里玩手机。（也可能在手机联系一些什么人吧）</p><p>然后就没办法，后来分班考试成绩出来了，我考炸了，就又特别烦躁，然后下午聊了会天。</p><p>然后就是刚刚，我们在5层那个小办公室写代码，校长他们在隔壁分班，然后校长就过来了，问我们哪个班的，说“竞赛班没有竞赛教室吗？”等等奇怪的问题，重要的是她居然都不知道竞赛几个人，有没有竞赛教室。让我。。。（可能人家太忙，忘了吧）。</p><p>今天“大吉”。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天洛谷大吉，但。。。&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://yueyangwu.cn/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>矩阵快速幂与矩阵加速</title>
    <link href="http://yueyangwu.cn/2019/08/30/%E7%9F%A9%E9%98%B5%E5%BF%AB%E9%80%9F%E5%B9%82%E4%B8%8E%E7%9F%A9%E9%98%B5%E5%8A%A0%E9%80%9F/"/>
    <id>http://yueyangwu.cn/2019/08/30/矩阵快速幂与矩阵加速/</id>
    <published>2019-08-30T11:55:16.000Z</published>
    <updated>2019-08-31T02:20:28.938Z</updated>
    
    <content type="html"><![CDATA[<p>前两天被人大附巨佬喷了。。。于是决定今天学一下矩阵加速</p><a id="more"></a><h2 id="矩阵快速幂"><a href="#矩阵快速幂" class="headerlink" title="矩阵快速幂"></a>矩阵快速幂</h2><ul><li>矩阵乘法的规则就不说了，直接说快速幂吧。</li><li>矩阵快速幂把原快速幂的代码里乘号的部分改成矩阵乘法就好了，可以写个函数或者重载运算符。</li><li>然后就出现了一堆没开longlong的错误。。。</li></ul><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">const</span> ll mod = <span class="hljs-number">1e9</span> + <span class="hljs-number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">node</span>&#123;</span></span><br><span class="line">    <span class="hljs-built_in">vector</span>&lt;<span class="hljs-built_in">vector</span>&lt;ll&gt; &gt; <span class="hljs-built_in">array</span>;</span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">init</span><span class="hljs-params">(<span class="hljs-keyword">int</span> n)</span></span>&#123;</span><br><span class="line">        <span class="hljs-built_in">array</span>.resize(n + <span class="hljs-number">1</span>);</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) <span class="hljs-built_in">array</span>[i].resize(n + <span class="hljs-number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">inite</span><span class="hljs-params">(<span class="hljs-keyword">int</span> n, <span class="hljs-keyword">bool</span> k)</span></span>&#123;</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">1</span>; j &lt;= n; j++)&#123;</span><br><span class="line">                <span class="hljs-built_in">array</span>[i][j] = <span class="hljs-number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">if</span>(k) <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) <span class="hljs-built_in">array</span>[i][i] = <span class="hljs-number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Solution</span>&#123;</span></span><br><span class="line">    <span class="hljs-keyword">int</span> n;</span><br><span class="line">    ll k;</span><br><span class="line">    node a, c, e;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function">node <span class="hljs-title">mul</span><span class="hljs-params">(node x, node y)</span></span>&#123;</span><br><span class="line">        c.inite(n, <span class="hljs-number">0</span>);</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">1</span>; j &lt;= n; j++)&#123;</span><br><span class="line">                <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> k = <span class="hljs-number">1</span>; k &lt;= n; k++)&#123;</span><br><span class="line">                    c.<span class="hljs-built_in">array</span>[i][j] = (c.<span class="hljs-built_in">array</span>[i][j] % mod + x.<span class="hljs-built_in">array</span>[i][k] * y.<span class="hljs-built_in">array</span>[k][j] % mod) % mod;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">return</span> c;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function">node <span class="hljs-title">power</span><span class="hljs-params">(node x, ll k)</span></span>&#123;</span><br><span class="line">        node ans = e;</span><br><span class="line">        <span class="hljs-keyword">while</span>(k)&#123;</span><br><span class="line">            <span class="hljs-keyword">if</span>(k % <span class="hljs-number">2</span> == <span class="hljs-number">1</span>)&#123;</span><br><span class="line">                ans = mul(ans, x);</span><br><span class="line">            &#125;</span><br><span class="line">            x = mul(x, x);</span><br><span class="line">            k /= <span class="hljs-number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Solve</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d%lld"</span>, &amp;n, &amp;k);</span><br><span class="line">        a.init(n);</span><br><span class="line">        c.init(n);</span><br><span class="line">        e.init(n);</span><br><span class="line">        e.inite(n, <span class="hljs-number">1</span>);</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">1</span>; j &lt;= n; j++)&#123;</span><br><span class="line">                <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%lld"</span>, &amp;a.<span class="hljs-built_in">array</span>[i][j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        node ans = power(a, k);</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">1</span>; j &lt;= n; j++)&#123;</span><br><span class="line">                <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%lld "</span>, ans.<span class="hljs-built_in">array</span>[i][j] % mod);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="hljs-built_in">printf</span>(<span class="hljs-string">"\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">    Solution().Solve();</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="矩阵加速"><a href="#矩阵加速" class="headerlink" title="矩阵加速"></a>矩阵加速</h2><ul><li><p>矩阵加速，用来加速数列的递推，比如斐波那契数列的递推。</p></li><li><p>能优化到$O(m^3log_2n)$</p></li><li><p>分为两步：</p><ol><li>构造初始矩阵</li><li>矩阵快速幂实现加速</li></ol></li></ul><p>感觉不难，就是构造初始矩阵比较懵。</p><ul><li><p>举个栗子：斐波那契数列，设定目标矩阵为$\left[\begin{array}{ccc}fib(n) \\fib(n - 1)\end{array}\right]$<br>然后希望$\left[\begin{array}{ccc}fib(n-1) \\fib(n-2)\end{array}\right]$乘一个矩阵变成目标矩阵，就推出了这个矩阵$\left[\begin{array}{ccc}1\quad 1\\1\quad 0\end{array}\right]$。</p></li><li><p>其他的也一样，可以参考<a href="https://www.cnblogs.com/frog112111/archive/2013/05/19/3087648.html" target="_blank" rel="noopener">这个</a>。</p></li></ul><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">const</span> ll mod = <span class="hljs-number">1e9</span> + <span class="hljs-number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">node</span>&#123;</span></span><br><span class="line">    ll e[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>];</span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">        e[<span class="hljs-number">1</span>][<span class="hljs-number">1</span>] = <span class="hljs-number">1</span>, e[<span class="hljs-number">1</span>][<span class="hljs-number">2</span>] = <span class="hljs-number">1</span>, e[<span class="hljs-number">1</span>][<span class="hljs-number">3</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">        e[<span class="hljs-number">2</span>][<span class="hljs-number">1</span>] = <span class="hljs-number">0</span>, e[<span class="hljs-number">2</span>][<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>, e[<span class="hljs-number">2</span>][<span class="hljs-number">3</span>] = <span class="hljs-number">1</span>;</span><br><span class="line">        e[<span class="hljs-number">3</span>][<span class="hljs-number">1</span>] = <span class="hljs-number">1</span>, e[<span class="hljs-number">3</span>][<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>, e[<span class="hljs-number">3</span>][<span class="hljs-number">3</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">init0</span><span class="hljs-params">(<span class="hljs-keyword">bool</span> flag)</span></span>&#123;</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">3</span>; i++)&#123;</span><br><span class="line">            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">1</span>; j &lt;= <span class="hljs-number">3</span>; j++)&#123;</span><br><span class="line">                e[i][j] = <span class="hljs-number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">if</span>(flag)&#123;</span><br><span class="line">            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">3</span>; i++)&#123;</span><br><span class="line">                e[i][i] = <span class="hljs-number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Solution</span>&#123;</span></span><br><span class="line">    <span class="hljs-keyword">int</span> t;</span><br><span class="line">    ll n;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function">node <span class="hljs-title">mul</span><span class="hljs-params">(node x, node y)</span></span>&#123;</span><br><span class="line">        node c;</span><br><span class="line">        c.init0(<span class="hljs-number">0</span>);</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">3</span>; i++)&#123;</span><br><span class="line">            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">1</span>; j &lt;= <span class="hljs-number">3</span>; j++)&#123;</span><br><span class="line">                <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> k = <span class="hljs-number">1</span>; k &lt;= <span class="hljs-number">3</span>; k++)&#123;</span><br><span class="line">                    c.e[i][j] += (x.e[i][k] * y.e[k][j]) % mod;</span><br><span class="line">                    c.e[i][j] %= mod;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">return</span> c;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function">node <span class="hljs-title">power</span><span class="hljs-params">(ll k)</span></span>&#123;</span><br><span class="line">        node ans, x;</span><br><span class="line">        x.init();</span><br><span class="line">        ans.init0(<span class="hljs-number">1</span>);</span><br><span class="line">        <span class="hljs-keyword">while</span>(k)&#123;</span><br><span class="line">            <span class="hljs-keyword">if</span>(k &amp; <span class="hljs-number">1</span>)&#123;</span><br><span class="line">                ans = mul(ans, x);</span><br><span class="line">            &#125;</span><br><span class="line">            x = mul(x, x);</span><br><span class="line">            k &gt;&gt;= <span class="hljs-number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Solve</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d"</span>, &amp;t);</span><br><span class="line">        <span class="hljs-keyword">while</span>(t--)&#123;</span><br><span class="line">            <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%lld"</span>, &amp;n);</span><br><span class="line">            node ans = power(n - <span class="hljs-number">1</span>);</span><br><span class="line">            <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%lld\n"</span>, ans.e[<span class="hljs-number">1</span>][<span class="hljs-number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">    Solution().Solve();</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前两天被人大附巨佬喷了。。。于是决定今天学一下矩阵加速&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yueyangwu.cn/categories/OI/"/>
    
      <category term="题目" scheme="http://yueyangwu.cn/categories/OI/%E9%A2%98%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>luogu P2055 [ZJOI2009]假期的宿舍</title>
    <link href="http://yueyangwu.cn/2019/08/22/luogu-P2055-ZJOI2009-%E5%81%87%E6%9C%9F%E7%9A%84%E5%AE%BF%E8%88%8D/"/>
    <id>http://yueyangwu.cn/2019/08/22/luogu-P2055-ZJOI2009-假期的宿舍/</id>
    <published>2019-08-22T01:47:51.000Z</published>
    <updated>2019-08-22T02:10:53.199Z</updated>
    
    <content type="html"><![CDATA[<p>二分图匹配？</p><a id="more"></a><p>可能是我第一道二分图匹配的题吧，反正是前几道，太菜了。。。<br>我是看的题解，二分图匹配，匈牙利算法。</p><ol><li>对于本校学生并且不回家，先直接让他们睡自己的床。</li><li>对于外校学生，枚举每一张床，如果他认识这床的主人，那么，第一种情况，没人要预定这张床，他直接睡下即可；第二种情况，这张床已经有人占了，那么就看看预定这张床的人能不能换一张，如果能，就让原来的人走，他留下。</li></ol><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Solution</span>&#123;</span></span><br><span class="line">    <span class="hljs-keyword">int</span> T, n;</span><br><span class="line">    <span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt; in, ho, match, book;</span><br><span class="line">    <span class="hljs-built_in">vector</span>&lt;<span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt; &gt; e;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x)</span></span>&#123;</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="hljs-keyword">if</span>(!book[i] &amp;&amp; in[i] &amp;&amp; e[x][i] == <span class="hljs-number">1</span>)&#123;</span><br><span class="line">                book[i] = <span class="hljs-number">1</span>;</span><br><span class="line">                <span class="hljs-keyword">if</span>(match[i] == <span class="hljs-number">0</span> || dfs(match[i]))&#123;</span><br><span class="line">                    match[i] = x;</span><br><span class="line">                    <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">work</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            book = <span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt; (n + <span class="hljs-number">1</span>, <span class="hljs-number">0</span>);</span><br><span class="line">            <span class="hljs-keyword">if</span>((in[i] == <span class="hljs-number">0</span> || ho[i] == <span class="hljs-number">0</span>) &amp;&amp; dfs(i) == <span class="hljs-number">0</span>)&#123;</span><br><span class="line">                <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Solve</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d"</span>, &amp;T);</span><br><span class="line">        <span class="hljs-keyword">while</span>(T--)&#123;</span><br><span class="line">            <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d"</span>, &amp;n);</span><br><span class="line">            in = <span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt; (n + <span class="hljs-number">1</span>, <span class="hljs-number">0</span>);</span><br><span class="line">            ho = <span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt; (n + <span class="hljs-number">1</span>, <span class="hljs-number">0</span>);</span><br><span class="line">            match = <span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt; (n + <span class="hljs-number">1</span>, <span class="hljs-number">0</span>);</span><br><span class="line">            e.resize(n + <span class="hljs-number">1</span>);</span><br><span class="line">            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) e[i].resize(n + <span class="hljs-number">1</span>, <span class="hljs-number">0</span>);</span><br><span class="line">            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d"</span>, &amp;in[i]);</span><br><span class="line">            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d"</span>, &amp;ho[i]);</span><br><span class="line">            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">                <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">1</span>; j &lt;= n; j++)&#123;</span><br><span class="line">                    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d"</span>, &amp;e[i][j]);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="hljs-keyword">if</span>(in[i] == <span class="hljs-number">1</span>) e[i][i] = <span class="hljs-number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="hljs-keyword">if</span>(work()) <span class="hljs-built_in">printf</span>(<span class="hljs-string">"^_^\n"</span>);</span><br><span class="line">            <span class="hljs-keyword">else</span> <span class="hljs-built_in">printf</span>(<span class="hljs-string">"T_T\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">    Solution().Solve();</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;二分图匹配？&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>luogu-P2146-软件包管理器</title>
    <link href="http://yueyangwu.cn/2019/08/06/luogu-P2146-%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86%E5%99%A8/"/>
    <id>http://yueyangwu.cn/2019/08/06/luogu-P2146-软件包管理器/</id>
    <published>2019-08-06T02:22:41.000Z</published>
    <updated>2019-08-06T02:26:01.451Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="OI" scheme="http://yueyangwu.cn/categories/OI/"/>
    
      <category term="题目" scheme="http://yueyangwu.cn/categories/OI/%E9%A2%98%E7%9B%AE/"/>
    
    
      <category term="树形结构" scheme="http://yueyangwu.cn/tags/%E6%A0%91%E5%BD%A2%E7%BB%93%E6%9E%84/"/>
    
      <category term="树链剖分" scheme="http://yueyangwu.cn/tags/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>树链剖分 学习笔记</title>
    <link href="http://yueyangwu.cn/2019/08/02/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://yueyangwu.cn/2019/08/02/树链剖分-学习笔记/</id>
    <published>2019-08-02T05:32:06.000Z</published>
    <updated>2019-08-02T11:14:26.801Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>这就是传说中的树链剖分？</p></blockquote><a id="more"></a><ul><li>树链剖分可以将一棵树的任意一条路径划分成不超过$O(\log n)$条链，并且满足dfs序，反正就很好啦，维护线段树什么的。。。</li><li>还可以$O(\log n)$求$lca$，常数小什么的。</li></ul><h2 id="树链剖分"><a href="#树链剖分" class="headerlink" title="树链剖分"></a>树链剖分</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><ul><li>定义<strong>重子节点</strong>表示其子节点中子树最大的子结点。如果有相同的，任意取。如果没有子节点，就没有。</li><li><strong>轻子节点</strong>就是剩余的其他子节点。</li><li>这个节点到重子节点的边叫做<strong>重边</strong>，其他叫做<strong>轻边</strong>。</li><li>把若干条首尾相连的重边称为<strong>重链</strong>。</li><li>把单独的节点也当成重链，就把整棵树分成了若干条链。<br>如图：<img src="/img/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%861.png" alt="树链剖分1"></li></ul><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><ul><li>分两个dfs实现：<ol><li>第一个dfs记录一下子树大小和深度。</li><li>记录重子节点，dfs序，当前节点的链顶。</li></ol></li><li>代码实现<figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">dfs1</span><span class="hljs-params">(<span class="hljs-keyword">int</span> o, <span class="hljs-keyword">int</span> fat)</span> </span>&#123;</span><br><span class="line">  son[o] = <span class="hljs-number">-1</span>;</span><br><span class="line">  siz[o] = <span class="hljs-number">1</span>;</span><br><span class="line">  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = h[o]; j; j = nxt[j])</span><br><span class="line">    <span class="hljs-keyword">if</span> (!dep[p[j]]) &#123;</span><br><span class="line">      dep[p[j]] = dep[o] + <span class="hljs-number">1</span>;</span><br><span class="line">      fa[p[j]] = o;</span><br><span class="line">      dfs1(p[j], o);</span><br><span class="line">      siz[o] += siz[p[j]];</span><br><span class="line">      <span class="hljs-keyword">if</span> (son[o] == <span class="hljs-number">-1</span> || siz[p[j]] &gt; siz[son[o]]) son[o] = p[j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">dfs2</span><span class="hljs-params">(<span class="hljs-keyword">int</span> o, <span class="hljs-keyword">int</span> t)</span> </span>&#123;</span><br><span class="line">  top[o] = t;</span><br><span class="line">  cnt++;</span><br><span class="line">  tid[o] = cnt;</span><br><span class="line">  rnk[cnt] = o;</span><br><span class="line">  <span class="hljs-keyword">if</span> (son[o] == <span class="hljs-number">-1</span>) <span class="hljs-keyword">return</span>;</span><br><span class="line">  dfs2(son[o], t);  <span class="hljs-comment">//优先对重儿子进行dfs，可以保证同一条重链上的点时间戳连续</span></span><br><span class="line">  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = h[o]; j; j = nxt[j])</span><br><span class="line">    <span class="hljs-keyword">if</span> (p[j] != son[o] &amp;&amp; p[j] != fa[o]) dfs2(p[j], p[j]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h3><ul><li><a href="https://www.luogu.org/problem/P3384" target="_blank" rel="noopener">【模板】树链剖分</a>(这应该算树套树了吧qwq)</li></ul><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">int</span> n, m, r, p;</span><br><span class="line"><span class="hljs-keyword">int</span> v[<span class="hljs-number">200009</span>];</span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Edge</span>&#123;</span></span><br><span class="line">    <span class="hljs-keyword">int</span> to, nxt;</span><br><span class="line">&#125;e[<span class="hljs-number">400009</span>];</span><br><span class="line"><span class="hljs-keyword">int</span> head[<span class="hljs-number">200009</span>], tot;</span><br><span class="line"><span class="hljs-keyword">int</span> size[<span class="hljs-number">200009</span>], dep[<span class="hljs-number">200009</span>], fat[<span class="hljs-number">200009</span>];</span><br><span class="line"><span class="hljs-keyword">int</span> dfn[<span class="hljs-number">200009</span>], top[<span class="hljs-number">200009</span>], id[<span class="hljs-number">200009</span>];</span><br><span class="line"><span class="hljs-keyword">int</span> son[<span class="hljs-number">200009</span>];</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">//----------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">int</span> tree[<span class="hljs-number">800009</span>], tag[<span class="hljs-number">800009</span>];</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">//----------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">add</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x, <span class="hljs-keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    e[++tot].to = y;</span><br><span class="line">    e[tot].nxt = head[x];</span><br><span class="line">    head[x] = tot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">dfs1</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x, <span class="hljs-keyword">int</span> fa, <span class="hljs-keyword">int</span> d)</span></span>&#123;</span><br><span class="line">    fat[x] = fa;</span><br><span class="line">    dep[x] = d;</span><br><span class="line">    size[x] = <span class="hljs-number">1</span>;</span><br><span class="line">    <span class="hljs-keyword">int</span> maxx = <span class="hljs-number">-1</span>;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = head[x]; i; i = e[i].nxt)&#123;</span><br><span class="line">        <span class="hljs-keyword">int</span> y = e[i].to;</span><br><span class="line">        <span class="hljs-keyword">if</span>(y == fa) <span class="hljs-keyword">continue</span>;</span><br><span class="line">        dfs1(y, x, d + <span class="hljs-number">1</span>);</span><br><span class="line">        size[x] += size[y];</span><br><span class="line">        <span class="hljs-keyword">if</span>(size[y]&gt;maxx) son[x] = y, maxx = size[y];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">int</span> cnt = <span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">dfs2</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x, <span class="hljs-keyword">int</span> topp)</span></span>&#123;</span><br><span class="line">    dfn[x] = ++cnt;</span><br><span class="line">    id[cnt] = x;</span><br><span class="line">    top[x] = topp;</span><br><span class="line">    <span class="hljs-keyword">if</span>(!son[x]) <span class="hljs-keyword">return</span>;</span><br><span class="line">dfs2(son[x], topp);</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = head[x]; i; i = e[i].nxt)&#123;</span><br><span class="line">        <span class="hljs-keyword">int</span> y = e[i].to;</span><br><span class="line">        <span class="hljs-keyword">if</span>(y == son[x] || y == fat[x]) <span class="hljs-keyword">continue</span>;</span><br><span class="line">        dfs2(y, y);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">//-----------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">build</span><span class="hljs-params">(<span class="hljs-keyword">int</span> k, <span class="hljs-keyword">int</span> l, <span class="hljs-keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">if</span>(l == r)&#123;</span><br><span class="line">        tree[k] = v[id[l]] % p;</span><br><span class="line">        <span class="hljs-keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">int</span> mid = (l + r) / <span class="hljs-number">2</span>;</span><br><span class="line">    build(k * <span class="hljs-number">2</span>, l, mid);</span><br><span class="line">    build(k * <span class="hljs-number">2</span> + <span class="hljs-number">1</span>, mid + <span class="hljs-number">1</span>, r);</span><br><span class="line">    tree[k] = (tree[k * <span class="hljs-number">2</span>] + tree[k * <span class="hljs-number">2</span> + <span class="hljs-number">1</span>]) % p;</span><br><span class="line">    <span class="hljs-keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Add</span><span class="hljs-params">(<span class="hljs-keyword">int</span> k, <span class="hljs-keyword">int</span> l, <span class="hljs-keyword">int</span> r, <span class="hljs-keyword">int</span> w)</span></span>&#123;</span><br><span class="line">    tag[k] += w;</span><br><span class="line">    tree[k] += w * (r - l + <span class="hljs-number">1</span>);</span><br><span class="line">    tree[k] %= p;</span><br><span class="line">    <span class="hljs-keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">pushdown</span><span class="hljs-params">(<span class="hljs-keyword">int</span> k, <span class="hljs-keyword">int</span> l, <span class="hljs-keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">int</span> mid = (l + r) / <span class="hljs-number">2</span>;</span><br><span class="line">    Add(k * <span class="hljs-number">2</span>, l, mid, tag[k]);</span><br><span class="line">    Add(k * <span class="hljs-number">2</span> + <span class="hljs-number">1</span>, mid + <span class="hljs-number">1</span>, r, tag[k]);</span><br><span class="line">    tag[k] = <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">modify</span><span class="hljs-params">(<span class="hljs-keyword">int</span> k, <span class="hljs-keyword">int</span> l, <span class="hljs-keyword">int</span> r, <span class="hljs-keyword">int</span> x, <span class="hljs-keyword">int</span> y, <span class="hljs-keyword">int</span> w)</span></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">if</span>(l &gt;= x &amp;&amp; r &lt;= y)&#123;</span><br><span class="line">        Add(k, l, r, w);</span><br><span class="line">        <span class="hljs-keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    pushdown(k, l, r);</span><br><span class="line">    <span class="hljs-keyword">int</span> mid = (l + r) / <span class="hljs-number">2</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span>(mid &gt;= x) modify(k * <span class="hljs-number">2</span>, l, mid, x, y, w);</span><br><span class="line">    <span class="hljs-keyword">if</span>(mid &lt; y) modify(k * <span class="hljs-number">2</span> + <span class="hljs-number">1</span>, mid + <span class="hljs-number">1</span>, r, x, y, w);</span><br><span class="line">    tree[k] = (tree[k * <span class="hljs-number">2</span>] + tree[k * <span class="hljs-number">2</span> + <span class="hljs-number">1</span>]) % p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">query</span><span class="hljs-params">(<span class="hljs-keyword">int</span> k, <span class="hljs-keyword">int</span> l, <span class="hljs-keyword">int</span> r, <span class="hljs-keyword">int</span> x, <span class="hljs-keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">if</span>(l &gt;= x &amp;&amp; r &lt;= y)&#123;</span><br><span class="line">        <span class="hljs-keyword">return</span> tree[k] % p;</span><br><span class="line">    &#125;</span><br><span class="line">    pushdown(k, l, r);</span><br><span class="line">    <span class="hljs-keyword">int</span> mid = (l + r) / <span class="hljs-number">2</span>;</span><br><span class="line">    <span class="hljs-keyword">int</span> res = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span>(mid &gt;= x) res = (res + query(k * <span class="hljs-number">2</span>, l, mid, x, y)) % p;</span><br><span class="line">    <span class="hljs-keyword">if</span>(mid &lt; y) res = (res + query(k * <span class="hljs-number">2</span> + <span class="hljs-number">1</span>, mid + <span class="hljs-number">1</span>, r, x, y)) % p;</span><br><span class="line">    <span class="hljs-keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">//---------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">modify_tree</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x, <span class="hljs-keyword">int</span> y, <span class="hljs-keyword">int</span> w)</span></span>&#123;</span><br><span class="line">w %= p;</span><br><span class="line">    <span class="hljs-keyword">while</span>(top[x] != top[y])&#123;</span><br><span class="line">        <span class="hljs-keyword">if</span>(dep[top[x]] &lt; dep[top[y]]) swap(x, y);</span><br><span class="line">        modify(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, n, dfn[top[x]], dfn[x], w);</span><br><span class="line">        x = fat[top[x]];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">if</span>(dep[x] &gt; dep[y]) swap(x, y);</span><br><span class="line">    modify(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, n, dfn[x], dfn[y], w);</span><br><span class="line">    <span class="hljs-keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">query_tree</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x, <span class="hljs-keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">int</span> res = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">while</span>(top[x] != top[y])&#123;</span><br><span class="line">        <span class="hljs-keyword">if</span>(dep[top[x]] &lt; dep[top[y]]) swap(x, y);</span><br><span class="line">        res += query(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, n, dfn[top[x]], dfn[x]);</span><br><span class="line">        res %= p;</span><br><span class="line">        x = fat[top[x]];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">if</span>(dep[x] &gt; dep[y]) swap(x, y);</span><br><span class="line">    res = (res + query(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, n, dfn[x], dfn[y])) % p;</span><br><span class="line">    <span class="hljs-keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d%d%d%d"</span>, &amp;n, &amp;m, &amp;r, &amp;p);</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d"</span>, &amp;v[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n - <span class="hljs-number">1</span>; i++)&#123;</span><br><span class="line">        <span class="hljs-keyword">int</span> x, y;</span><br><span class="line">        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d%d"</span>, &amp;x, &amp;y);</span><br><span class="line">        add(x, y), add(y, x);</span><br><span class="line">    &#125;</span><br><span class="line">    dfs1(r, <span class="hljs-number">-1</span>, <span class="hljs-number">1</span>);</span><br><span class="line">    dfs2(r, r);</span><br><span class="line">    build(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, n);</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= m; i++)&#123;</span><br><span class="line">        <span class="hljs-keyword">int</span> op, x, y, w;</span><br><span class="line">        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d"</span>, &amp;op);</span><br><span class="line">        <span class="hljs-keyword">if</span>(op == <span class="hljs-number">1</span>)&#123;</span><br><span class="line">            <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d%d%d"</span>, &amp;x, &amp;y, &amp;w);</span><br><span class="line">            modify_tree(x, y, w);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">if</span>(op == <span class="hljs-number">2</span>)&#123;</span><br><span class="line">            <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d%d"</span>, &amp;x, &amp;y);</span><br><span class="line">            <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d\n"</span>, query_tree(x, y));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">if</span>(op == <span class="hljs-number">3</span>)&#123;</span><br><span class="line">            <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d%d"</span>, &amp;x, &amp;w);</span><br><span class="line">            modify(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, n, dfn[x], dfn[x] + size[x] - <span class="hljs-number">1</span>, w);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">if</span>(op == <span class="hljs-number">4</span>)&#123;</span><br><span class="line">            <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d"</span>, &amp;x);</span><br><span class="line">            <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d\n"</span>, query(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, n, dfn[x], dfn[x] + size[x] - <span class="hljs-number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;这就是传说中的树链剖分？&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yueyangwu.cn/categories/OI/"/>
    
      <category term="知识点" scheme="http://yueyangwu.cn/categories/OI/%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    
      <category term="树形结构" scheme="http://yueyangwu.cn/tags/%E6%A0%91%E5%BD%A2%E7%BB%93%E6%9E%84/"/>
    
      <category term="树链剖分" scheme="http://yueyangwu.cn/tags/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>数论 学习笔记</title>
    <link href="http://yueyangwu.cn/2019/07/30/%E6%95%B0%E8%AE%BA-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://yueyangwu.cn/2019/07/30/数论-学习笔记/</id>
    <published>2019-07-30T08:05:58.000Z</published>
    <updated>2019-08-02T05:31:04.678Z</updated>
    
    <content type="html"><![CDATA[<p>OI Wiki了解一下</p><a id="more"></a><h2 id="最大公约数"><a href="#最大公约数" class="headerlink" title="最大公约数"></a>最大公约数</h2><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">gcd</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a, <span class="hljs-keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">if</span>(b == <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> a;</span><br><span class="line">    <span class="hljs-keyword">return</span> gcd(b, a % b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="裴蜀定理（贝祖定理）"><a href="#裴蜀定理（贝祖定理）" class="headerlink" title="裴蜀定理（贝祖定理）"></a>裴蜀定理（贝祖定理）</h2><ul><li>设$a,b$是不全为零的整数，则存在整数$x,y$, 使得$ax+by=gcd(a,b)$.</li></ul><hr><h2 id="扩展欧几里得"><a href="#扩展欧几里得" class="headerlink" title="扩展欧几里得"></a>扩展欧几里得</h2><ul><li>用于求解方程$ax+by=gcd(a,b)$</li><li>代码：<figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">exgcd</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a, <span class="hljs-keyword">int</span> b, <span class="hljs-keyword">int</span> &amp;x, <span class="hljs-keyword">int</span> &amp;y)</span></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">if</span>(b == <span class="hljs-number">0</span>)&#123;</span><br><span class="line">        y = <span class="hljs-number">0</span>, x = <span class="hljs-number">1</span>;</span><br><span class="line">        <span class="hljs-keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">int</span> r = exgcd(b, a % b, y, x);</span><br><span class="line">    y -= a / b * x;</span><br><span class="line">    <span class="hljs-keyword">return</span> r;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="乘法逆元"><a href="#乘法逆元" class="headerlink" title="乘法逆元"></a>乘法逆元</h2><p>如果一个线性同余方程$ax\equiv 1(mod\ b)$，则$x$称为$a\mod b$的逆元，记作$a^{-1}$。</p><h3 id="求解a的逆元"><a href="#求解a的逆元" class="headerlink" title="求解a的逆元"></a>求解a的逆元</h3><h4 id="扩展欧几里得法"><a href="#扩展欧几里得法" class="headerlink" title="扩展欧几里得法"></a>扩展欧几里得法</h4><ul><li><p>扩展欧几里得法和求解线性同余方程是一个原理，在这里不展开解释。</p><h4 id="快速幂法"><a href="#快速幂法" class="headerlink" title="快速幂法"></a>快速幂法</h4></li><li><p>因为$ax\equiv 1(mod\ b)$</p><p>  所以$ax\equiv a^{b-1}(mod\ b)$</p><p>  所以$x\equiv a^{b-2}(mod\ b)$</p></li></ul><p>然后就可以用快速幂求了</p><h3 id="线性求任意n个数的逆元"><a href="#线性求任意n个数的逆元" class="headerlink" title="线性求任意n个数的逆元"></a>线性求任意n个数的逆元</h3><p>首先计算$n$个数的前缀积$s_i$，然后用快速幂法求$s_n$的逆元，记为$sv_n$。</p><p>因为$sv_n$是前$n$个数的积的逆元，所以这个数乘$a_i$，会和其逆元抵消，于是就得到了$a_1$到$a_{n-1}$的积逆元，记为$sv_{n-1}$。</p><p>然后就能计算出所有$sv_i$，$a_i$的逆元就可以由$s_{i-1}\times sv_i$求得。</p><p>时间复杂度：$O(n+log\ p)$</p><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">s[<span class="hljs-number">0</span>] = <span class="hljs-number">1</span>;</span><br><span class="line"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; ++i) s[i] = s[i - <span class="hljs-number">1</span>] * a[i] % p;</span><br><span class="line">sv[n] = qpow(s[n], p - <span class="hljs-number">2</span>);</span><br><span class="line"><span class="hljs-comment">// 当然这里也可以用 exgcd 来求逆元,视个人喜好而定.</span></span><br><span class="line"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = n; i &gt;= <span class="hljs-number">1</span>; --i) sv[i - <span class="hljs-number">1</span>] = sv[i] * a[i] % p;</span><br><span class="line"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; ++i) inv[i] = sv[i] * s[i - <span class="hljs-number">1</span>] % p;</span><br></pre></td></tr></table></figure><blockquote><p>P.S.刚刚我做了两道例题，现在感觉。。。脑子一片浆糊。😭</p></blockquote><hr><h2 id="中国剩余定理（孙子定理）"><a href="#中国剩余定理（孙子定理）" class="headerlink" title="中国剩余定理（孙子定理）"></a>中国剩余定理（孙子定理）</h2><h3 id="「物不知数」问题"><a href="#「物不知数」问题" class="headerlink" title="「物不知数」问题"></a>「物不知数」问题</h3><blockquote><p>有物不知其数，三三数之剩二，五五数之剩三，七七数之剩二。问物几何？</p></blockquote><p>$$<br>\left<br>{<br>    \begin{array}{ccc}<br>        x &amp;\equiv&amp; a_1 \pmod{m_1}\\<br>        x &amp;\equiv&amp; a_2 \pmod{m_2}\\<br>        &amp;\vdots&amp;\\<br>        x &amp;\equiv&amp; a_n \pmod{m_n}<br>    \end{array}<br>\right.<br>$$</p><ul><li>求解方法：<ol><li>设$M=\prod_{i=1}^{n}m_i$，并设$M_i=M/m_i$。</li><li>设$t_i=M_i^{-1}$为$M_i$模$m_i$的数论倒数。</li><li>方程组的通解形式在模$M$的意义下有唯一解$x=\sum_{i=1}^na_it_iM_i$</li></ol></li></ul><h2 id="扩展中国剩余定理（exCRT）"><a href="#扩展中国剩余定理（exCRT）" class="headerlink" title="扩展中国剩余定理（exCRT）"></a>扩展中国剩余定理（exCRT）</h2><ul><li>考虑模数不互质的情况。</li><li>如果只有两个方程</li><li>设它们为$x\equiv a_1\pmod{m_1}$和$x\equiv a_2\pmod{m_2}$</li><li>转化为$x=m_1p+a_1=m_2q+a_2$，其中$p,q$为整数，则有$m_1p-m_2q=a_2-a_1$</li><li>由于裴蜀定理，若该式求出一组解$(p,q)$，则原来方程组解为$x\equiv b\pmod{M}$，其中$b=m_1p+a_1$，$M=lcm(m_1,m_2)$。</li><li>考虑多个方程：按照上述方法两两合并即可。</li></ul><p><a href="https://www.luogu.org/problemnew/show/P4777" target="_blank" rel="noopener">【模板】扩展中国剩余定理</a></p><p><a href="https://www.luogu.org/problemnew/show/P4774" target="_blank" rel="noopener">屠龙勇士</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;OI Wiki了解一下&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yueyangwu.cn/categories/OI/"/>
    
      <category term="知识点" scheme="http://yueyangwu.cn/categories/OI/%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    
      <category term="数论" scheme="http://yueyangwu.cn/tags/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>数位DP 学习笔记</title>
    <link href="http://yueyangwu.cn/2019/07/29/%E6%95%B0%E4%BD%8Ddp-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://yueyangwu.cn/2019/07/29/数位dp-学习笔记/</id>
    <published>2019-07-29T12:05:09.000Z</published>
    <updated>2019-07-30T03:36:52.719Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>数位dp基本模型，给定闭区间$[l,r]$，求这个闭区间中满足题目要求的数的个数。</p></blockquote><a id="more"></a><p>我们可以从数字的每一位来枚举，从高位向低位枚举，我们可以用 dp[i][j] 来表示枚举到 i 位时，数字为 j 时的方案数（答案数）。但是我们需要考虑一些限制我们决策的条件，假设我们要求小于等于 243 的数字中符合条件的有几个：</p><ol><li>当我们第一项为 1 时，我们后面一位可以枚举 0∼9</li><li>当我们第一项为 2 时，我们后面一项就只能枚举 0∼4</li></ol><p>可见我们需要通过判断前一项来决定后一项最高可以取值的大小。同时我们也需要考虑一些数字前面一直是 0，并且会影响答案的情况（例如统计各个数字出现的次数）。以下是模板：</p><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> N 20</span></span><br><span class="line"><span class="hljs-keyword">int</span> dp[N][N], a[N], n, m;</span><br><span class="line"><span class="hljs-comment">// 数位 dp 是需要深搜的，`dp` 数组只是做记忆化搜索用</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-keyword">int</span> pos, <span class="hljs-keyword">int</span> pre, <span class="hljs-keyword">bool</span> limit, <span class="hljs-keyword">bool</span> frontzero)</span> </span>&#123;</span><br><span class="line">  <span class="hljs-comment">// `frontzero`: 前导 0 的判断</span></span><br><span class="line">  <span class="hljs-comment">//       `pre`: `pos` 前一位的数字</span></span><br><span class="line">  <span class="hljs-keyword">if</span> (pos == <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>; <span class="hljs-comment">// 枚举完毕，退出</span></span><br><span class="line">  <span class="hljs-keyword">if</span> (!frontzero &amp;&amp; !limit &amp;&amp; dp[pos][pre] != <span class="hljs-number">-1</span>) <span class="hljs-keyword">return</span> dp[pos][pre];</span><br><span class="line">  <span class="hljs-comment">// 返回 `dp[pos][pre]` 的条件：前导非零 且 无上限限制 且 `dp` 数组的这一位有值</span></span><br><span class="line">  <span class="hljs-comment">// 注意这里必须把 `!frontzero` 和 `!limit` 写在前面 来防止 `dp` 数组越界</span></span><br><span class="line">  <span class="hljs-comment">// 因为后面需要在前导零的时候做一点操作</span></span><br><span class="line">  <span class="hljs-keyword">int</span> p, ret = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">int</span> up = limit ? a[pos] : <span class="hljs-number">9</span>;</span><br><span class="line">  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt;= up; ++i) &#123;</span><br><span class="line">    <span class="hljs-keyword">if</span> () <span class="hljs-keyword">continue</span>;</span><br><span class="line">    <span class="hljs-comment">// 当枚举到的这一位不符合条件时就忽略，继续枚举</span></span><br><span class="line">    p = i;</span><br><span class="line">    <span class="hljs-keyword">if</span> (frontzero &amp;&amp; i == <span class="hljs-number">0</span>) p = -INF;</span><br><span class="line">    <span class="hljs-comment">// 这里 `-INF` 只是一个前导 0 的标记，数值并没有太大意义。</span></span><br><span class="line">    ret += dfs(pos - <span class="hljs-number">1</span>, p, limit &amp; (i == up), (p == -INF));</span><br><span class="line">    <span class="hljs-comment">// 这里 `p = -INF` 时也是会传进函数作为 `pre` 参数的，</span></span><br><span class="line">    <span class="hljs-comment">// 所以前面要把 `frontzero` 写前面</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="hljs-keyword">if</span> (!frontzero &amp;&amp; !limit) f[pos][pre] = ret;</span><br><span class="line">  <span class="hljs-keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">solve</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">  <span class="hljs-comment">// `solve(x)`: 处理不大于 `x` 的数的答案</span></span><br><span class="line">  <span class="hljs-keyword">int</span> idx = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">while</span> (x) &#123;</span><br><span class="line">    a[++idx] = x % <span class="hljs-number">10</span>;</span><br><span class="line">    x /= <span class="hljs-number">10</span>;</span><br><span class="line">  &#125; <span class="hljs-comment">// 预处理 `x` 的每一位</span></span><br><span class="line">  <span class="hljs-built_in">memset</span>(dp, <span class="hljs-number">-1</span>, <span class="hljs-keyword">sizeof</span>(dp));</span><br><span class="line">  <span class="hljs-keyword">return</span> dfs(idx, -INF, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>);</span><br><span class="line">  <span class="hljs-comment">// 注意初始化</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;</span><br><span class="line">  <span class="hljs-built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line">  <span class="hljs-built_in">cout</span> &lt;&lt; (solve(m) - solve(n - <span class="hljs-number">1</span>));</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="windy数"><a href="#windy数" class="headerlink" title="windy数"></a><a href="https://www.luogu.org/problem/P2657" target="_blank" rel="noopener">windy数</a></h3><ul><li>题意：给定一个区间$[l,r]$，求其中满足条件 不含前导$0$且相邻两个数字相差至少为$2$的数字个数。</li><li>按照模板写就行了</li></ul><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> INF = <span class="hljs-number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">int</span> dp[<span class="hljs-number">15</span>][<span class="hljs-number">15</span>], a[<span class="hljs-number">15</span>];</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-keyword">int</span> pos, <span class="hljs-keyword">int</span> pre, <span class="hljs-keyword">bool</span> limit, <span class="hljs-keyword">bool</span> frontzero)</span></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">if</span>(pos == <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span>(!limit &amp;&amp; !frontzero &amp;&amp; dp[pos][pre] != <span class="hljs-number">-1</span>) <span class="hljs-keyword">return</span> dp[pos][pre];</span><br><span class="line">    <span class="hljs-keyword">int</span> ret = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">int</span> up = (limit ? a[pos] : <span class="hljs-number">9</span>);</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt;= up; i++)&#123;</span><br><span class="line">        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">abs</span>(i - pre) &lt; <span class="hljs-number">2</span>) <span class="hljs-keyword">continue</span>;</span><br><span class="line">        <span class="hljs-keyword">int</span> p = i;</span><br><span class="line">        <span class="hljs-keyword">if</span>(frontzero &amp;&amp; i == <span class="hljs-number">0</span>) p = -INF;</span><br><span class="line">        ret += dfs(pos - <span class="hljs-number">1</span>, p, limit &amp; (i == up), (p == -INF));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">if</span>(!frontzero &amp;&amp; !limit) dp[pos][pre] = ret;</span><br><span class="line">    <span class="hljs-keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">solve</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">int</span> idx = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">while</span>(x)&#123;</span><br><span class="line">        a[++idx] = x % <span class="hljs-number">10</span>;</span><br><span class="line">        x /= <span class="hljs-number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-built_in">memset</span>(dp, <span class="hljs-number">-1</span>, <span class="hljs-keyword">sizeof</span>(dp));</span><br><span class="line">    <span class="hljs-keyword">return</span> dfs(idx, -INF, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">int</span> a, b;</span><br><span class="line">    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d%d"</span>, &amp;a, &amp;b);</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d\n"</span>, solve(b) - solve(a - <span class="hljs-number">1</span>));</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="杠杆数"><a href="#杠杆数" class="headerlink" title="杠杆数"></a><a href="https://www.luogu.org/problem/P1831" target="_blank" rel="noopener">杠杆数</a></h3><ul><li>我看到这道题的时候通过数据范围判断它应该是数位dp，但是我不知道以哪一位为支点计算那些怎么做，也是因为这道题才学的数位dp。</li><li>发现正常的模板搜索第二个变量保存了上一个数是几，但是这个题不能这么算，所以就对于一个1道n的统计，枚举一下支点，然后记录一下支点位置和到当前的和，额。。。我不知道自己说了什么，看注释吧。</li></ul><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line">ll dp[<span class="hljs-number">20</span>][<span class="hljs-number">20</span>][<span class="hljs-number">3009</span>], a[<span class="hljs-number">20</span>];</span><br><span class="line"></span><br><span class="line"><span class="hljs-function">ll <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-keyword">int</span> pos, <span class="hljs-keyword">int</span> x, ll s, <span class="hljs-keyword">bool</span> limit, <span class="hljs-keyword">bool</span> frontzero)</span></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">if</span>(pos == <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> (!frontzero &amp;&amp; s == <span class="hljs-number">0</span>);</span><br><span class="line">    <span class="hljs-comment">//然后返回1的条件就是和为0（满足平衡）</span></span><br><span class="line">    <span class="hljs-comment">//并且不能是0.</span></span><br><span class="line">    <span class="hljs-keyword">if</span>(!limit &amp;&amp; !frontzero &amp;&amp; dp[x][pos][s] != <span class="hljs-number">-1</span>) <span class="hljs-keyword">return</span> dp[x][pos][s];</span><br><span class="line">    <span class="hljs-keyword">int</span> up = (limit ? a[pos] : <span class="hljs-number">9</span>);</span><br><span class="line">    ll ret = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt;= up; i++)&#123;</span><br><span class="line">        ret += dfs(pos<span class="hljs-number">-1</span>, x, s+(<span class="hljs-number">1l</span>l*i*(pos-x)), limit &amp; (i == up), frontzero&amp;(i==<span class="hljs-number">0</span>));</span><br><span class="line">        <span class="hljs-comment">//这里就是转移。。。</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">if</span>(!limit &amp;&amp; !frontzero) dp[x][pos][s] = ret;</span><br><span class="line">    <span class="hljs-keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function">ll <span class="hljs-title">solve</span><span class="hljs-params">(ll x)</span></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">int</span> idx = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">while</span>(x)&#123;</span><br><span class="line">        a[++idx] = x % <span class="hljs-number">10</span>;</span><br><span class="line">        x /= <span class="hljs-number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-built_in">memset</span>(dp, <span class="hljs-number">-1</span>, <span class="hljs-keyword">sizeof</span>(dp));</span><br><span class="line">    ll ans = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-comment">//就这个地方，枚举一下支点位置。</span></span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= idx; i++)&#123;</span><br><span class="line">        ans += dfs(idx, i, <span class="hljs-number">0l</span>l, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">    ll a, b;</span><br><span class="line">    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%lld%lld"</span>, &amp;a, &amp;b);</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%lld"</span>, solve(b) - solve(a - <span class="hljs-number">1</span>));</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;数位dp基本模型，给定闭区间$[l,r]$，求这个闭区间中满足题目要求的数的个数。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yueyangwu.cn/categories/OI/"/>
    
      <category term="知识点" scheme="http://yueyangwu.cn/categories/OI/%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    
      <category term="dp" scheme="http://yueyangwu.cn/tags/dp/"/>
    
      <category term="数位dp" scheme="http://yueyangwu.cn/tags/%E6%95%B0%E4%BD%8Ddp/"/>
    
  </entry>
  
  <entry>
    <title>luogu-P1831-重要的城市</title>
    <link href="http://yueyangwu.cn/2019/07/29/luogu-P1831-%E9%87%8D%E8%A6%81%E7%9A%84%E5%9F%8E%E5%B8%82/"/>
    <id>http://yueyangwu.cn/2019/07/29/luogu-P1831-重要的城市/</id>
    <published>2019-07-29T11:20:03.000Z</published>
    <updated>2019-07-29T11:24:29.750Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.org/problem/P1841" target="_blank" rel="noopener">题目链接</a></p><a id="more"></a><hr><p>跑一次floyd即可，新建一个数组c，如果i到j的最短路能被k更新，那么说明最短路一定会经过k，所以c[i][j]保存一下k，如果更新过程发现存在一个相等的更新条件，说明最短路有多条，这个时候就可以删去c[i][j]里面的数.</p><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">int</span> n, m;</span><br><span class="line"><span class="hljs-keyword">int</span> f[<span class="hljs-number">209</span>][<span class="hljs-number">209</span>], cnt[<span class="hljs-number">209</span>][<span class="hljs-number">209</span>];</span><br><span class="line"><span class="hljs-keyword">bool</span> ans[<span class="hljs-number">209</span>];</span><br><span class="line"><span class="hljs-keyword">int</span> tot;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="hljs-built_in">memset</span>(f, <span class="hljs-number">0x3f</span>, <span class="hljs-keyword">sizeof</span>(f));</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        f[i][i] = <span class="hljs-number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= m; i++)&#123;</span><br><span class="line">        <span class="hljs-keyword">int</span> x, y, w;</span><br><span class="line">        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d%d%d"</span>, &amp;x, &amp;y, &amp;w);</span><br><span class="line">        f[x][y] = w;</span><br><span class="line">        f[y][x] = w;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> k = <span class="hljs-number">1</span>; k &lt;= n; k++)&#123;</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="hljs-keyword">if</span>(i == k) <span class="hljs-keyword">continue</span>;</span><br><span class="line">            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">1</span>; j &lt;= n; j++)&#123;</span><br><span class="line">                <span class="hljs-keyword">if</span>(i == j || j == k) <span class="hljs-keyword">continue</span>;</span><br><span class="line">                <span class="hljs-keyword">if</span>(f[i][k] + f[k][j] &lt; f[i][j])&#123;</span><br><span class="line">                    f[i][j] = f[i][k] + f[k][j];</span><br><span class="line">                    cnt[i][j] = k;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(f[i][k] + f[k][j] == f[i][j])&#123;</span><br><span class="line">                    cnt[i][j] = <span class="hljs-number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">1</span>; j &lt;= n; j++)&#123;</span><br><span class="line">            ans[cnt[i][j]] = <span class="hljs-number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        <span class="hljs-keyword">if</span>(ans[i]) <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d "</span>, i), tot++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">if</span>(tot == <span class="hljs-number">0</span>) <span class="hljs-built_in">printf</span>(<span class="hljs-string">"No important cities."</span>);</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://www.luogu.org/problem/P1841&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yueyangwu.cn/categories/OI/"/>
    
      <category term="题目" scheme="http://yueyangwu.cn/categories/OI/%E9%A2%98%E7%9B%AE/"/>
    
    
      <category term="dp" scheme="http://yueyangwu.cn/tags/dp/"/>
    
      <category term="图论" scheme="http://yueyangwu.cn/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="floyd" scheme="http://yueyangwu.cn/tags/floyd/"/>
    
  </entry>
  
  <entry>
    <title>Luogu P2279 [HNOI2003]消防局的设立</title>
    <link href="http://yueyangwu.cn/2019/07/29/P2279-%E6%B6%88%E9%98%B2%E5%B1%80%E7%9A%84%E8%AE%BE%E7%AB%8B/"/>
    <id>http://yueyangwu.cn/2019/07/29/P2279-消防局的设立/</id>
    <published>2019-07-29T10:16:10.000Z</published>
    <updated>2019-07-29T10:46:50.292Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.org/problem/P2279" target="_blank" rel="noopener">题目链接</a></p><a id="more"></a><hr><ul><li>设计状态：$f[x][0-4]$表示以x为根节点的子树，能覆盖到向上2到-2个节点需要的最小消防局数量，这样明显$f[x][0]\leq f[x][1]\leq f[x][2] \leq f[x][3] \leq f[x][4]$所以转移的时候尽量选第二维大的转移，能保证最小：</li><li>$f[x][0] = \sum f[y][4]+1$</li><li>如果能延伸到x的祖父节点，那么x必须为消防局，所以答案是x的所有儿子向下2个，及x所有孙子的儿子都能被覆盖即可，因为x为消防局，所以数量加一。<br>$$<br>f[x][1] = min{\sum_{s\in t且s \not= k} f[s][3]+f[k][0]}<br>$$</li><li>延伸到x的父亲，只需要保证所有的孙子已经被覆盖，并且其中一个儿子可以向上延伸2个，这就意味着所有的x的儿子和x本身还有x的父亲都可以被这个消防局覆盖。</li><li>$f[x][2]$同理</li><li>$f[x][3] = \sum f[y][2]$</li><li>能保证x的儿子们都被覆盖，相当于儿子们自己都被覆盖。</li><li>$f[x][4] = \sum f[y][3]$</li><li>同理</li></ul><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">int</span> n;</span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Edge</span>&#123;</span></span><br><span class="line">    <span class="hljs-keyword">int</span> to, nxt;</span><br><span class="line">&#125;e[<span class="hljs-number">2009</span>];</span><br><span class="line"><span class="hljs-keyword">int</span> head[<span class="hljs-number">1009</span>], tot;</span><br><span class="line"><span class="hljs-keyword">int</span> f[<span class="hljs-number">1009</span>][<span class="hljs-number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">add</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x, <span class="hljs-keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    e[++tot].to = y;</span><br><span class="line">    e[tot].nxt = head[x];</span><br><span class="line">    head[x] = tot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x, <span class="hljs-keyword">int</span> fa)</span></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = head[x]; i; i = e[i].nxt)&#123;</span><br><span class="line">        <span class="hljs-keyword">int</span> y = e[i].to;</span><br><span class="line">        <span class="hljs-keyword">if</span>(y == fa) <span class="hljs-keyword">continue</span>;</span><br><span class="line">        dfs(y, x);</span><br><span class="line">        f[x][<span class="hljs-number">0</span>] += f[y][<span class="hljs-number">4</span>];</span><br><span class="line">        f[x][<span class="hljs-number">3</span>] += f[y][<span class="hljs-number">2</span>];</span><br><span class="line">        f[x][<span class="hljs-number">4</span>] += f[y][<span class="hljs-number">3</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    f[x][<span class="hljs-number">0</span>] += <span class="hljs-number">1</span>;</span><br><span class="line">    f[x][<span class="hljs-number">1</span>] = f[x][<span class="hljs-number">2</span>] = <span class="hljs-number">0x3f3f3f3f</span>;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = head[x]; i; i = e[i].nxt)&#123;</span><br><span class="line">        <span class="hljs-keyword">int</span> y = e[i].to;</span><br><span class="line">        <span class="hljs-keyword">if</span>(y == fa) <span class="hljs-keyword">continue</span>;</span><br><span class="line">        f[x][<span class="hljs-number">1</span>] = min(f[x][<span class="hljs-number">1</span>], f[x][<span class="hljs-number">4</span>] - f[y][<span class="hljs-number">3</span>] + f[y][<span class="hljs-number">0</span>]);</span><br><span class="line">        f[x][<span class="hljs-number">2</span>] = min(f[x][<span class="hljs-number">2</span>], f[x][<span class="hljs-number">3</span>] - f[y][<span class="hljs-number">2</span>] + f[y][<span class="hljs-number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    f[x][<span class="hljs-number">1</span>] = min(f[x][<span class="hljs-number">1</span>], f[x][<span class="hljs-number">0</span>]);</span><br><span class="line">    f[x][<span class="hljs-number">2</span>] = min(f[x][<span class="hljs-number">2</span>], f[x][<span class="hljs-number">1</span>]);</span><br><span class="line">    f[x][<span class="hljs-number">3</span>] = min(f[x][<span class="hljs-number">3</span>], f[x][<span class="hljs-number">2</span>]);</span><br><span class="line">    f[x][<span class="hljs-number">4</span>] = min(f[x][<span class="hljs-number">4</span>], f[x][<span class="hljs-number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">2</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        <span class="hljs-keyword">int</span> y;</span><br><span class="line">        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d"</span>, &amp;y);</span><br><span class="line">        add(i, y), add(y, i);</span><br><span class="line">    &#125;</span><br><span class="line">    dfs(<span class="hljs-number">1</span>, <span class="hljs-number">0</span>);</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d\n"</span>, f[<span class="hljs-number">1</span>][<span class="hljs-number">2</span>]);</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://www.luogu.org/problem/P2279&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yueyangwu.cn/categories/OI/"/>
    
      <category term="题目" scheme="http://yueyangwu.cn/categories/OI/%E9%A2%98%E7%9B%AE/"/>
    
    
      <category term="树形结构" scheme="http://yueyangwu.cn/tags/%E6%A0%91%E5%BD%A2%E7%BB%93%E6%9E%84/"/>
    
      <category term="dp" scheme="http://yueyangwu.cn/tags/dp/"/>
    
  </entry>
  
  <entry>
    <title>Luogu P2831 愤怒的小鸟</title>
    <link href="http://yueyangwu.cn/2019/07/28/luogu-P2831-%E6%84%A4%E6%80%92%E7%9A%84%E5%B0%8F%E9%B8%9F/"/>
    <id>http://yueyangwu.cn/2019/07/28/luogu-P2831-愤怒的小鸟/</id>
    <published>2019-07-28T05:52:36.000Z</published>
    <updated>2019-07-28T06:09:55.156Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.org/problem/P2831" target="_blank" rel="noopener">题目链接</a></p><p>一个搜索，或者状压，蒟蒻不会状压dp，就写了搜索。。。</p><a id="more"></a><hr><ul><li><p>一个猪，有两种方式死，一是只被一只鸟打死，另外一个是和之前一只猪一起被同一只鸟打死，因为两只猪确定一条抛物线。</p></li><li><p>然后搜索其实就是对于第i个猪，到目前为止已经确定了ok条抛物线，还有no个没有组成抛物线的猪（就是独自被一只鸟打死的），然后看一下之前已经组成的抛物线有没有一条能够打死该猪，可以的话就往后搜就行，不然就分两种情况：</p><ol><li><p>这只猪和这只猪之前的一只猪组成一条抛物线。</p></li><li><p>这只猪单独被打中。</p><p>对于每种情况单独搜索即可。具体描述放在代码里。</p></li></ol></li></ul><figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">int</span> n, m, ans;</span><br><span class="line"><span class="hljs-keyword">int</span> maxn;</span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">node</span>&#123;</span></span><br><span class="line">    <span class="hljs-keyword">double</span> x, y;</span><br><span class="line">&#125;a[<span class="hljs-number">20</span>];</span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">node1</span>&#123;</span></span><br><span class="line">    <span class="hljs-keyword">double</span> a, b;</span><br><span class="line">&#125;p[<span class="hljs-number">20</span>];</span><br><span class="line"><span class="hljs-keyword">bool</span> vis[<span class="hljs-number">20</span>];</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">sam</span><span class="hljs-params">(<span class="hljs-keyword">double</span> a, <span class="hljs-keyword">double</span> b)</span></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-built_in">abs</span>(a - b) &lt;= <span class="hljs-number">1e-6</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-keyword">int</span> k, <span class="hljs-keyword">int</span> ok, <span class="hljs-keyword">int</span> no)</span></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">if</span>(k == n + <span class="hljs-number">1</span>)&#123;</span><br><span class="line">        ans = min(ans, ok + no);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">if</span>(ok + no &gt;= ans) <span class="hljs-keyword">return</span>;</span><br><span class="line">    <span class="hljs-comment">//这个地方一定得注意，上面这句写&gt;=是最优性剪枝。</span></span><br><span class="line">    <span class="hljs-comment">//一定得写&gt;=,写&gt;会超时，T一个点。</span></span><br><span class="line">    <span class="hljs-comment">//下面一定得&gt;，因为会WA。。。</span></span><br><span class="line">    <span class="hljs-keyword">if</span>(ok + no &gt; maxn) <span class="hljs-keyword">return</span>;</span><br><span class="line">    <span class="hljs-keyword">int</span> flag = <span class="hljs-number">1</span>;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= ok; i++)&#123;</span><br><span class="line">        <span class="hljs-keyword">if</span>(sam(p[i].a*a[k].x*a[k].x+p[i].b*a[k].x, a[k].y))&#123;</span><br><span class="line">            <span class="hljs-comment">//这里处理了第一种情况，就是能和之前已经有的抛物线组成一起。</span></span><br><span class="line">            <span class="hljs-comment">//然后vis数组这个比较正常。</span></span><br><span class="line">            vis[k] = <span class="hljs-number">1</span>;</span><br><span class="line">            dfs(k + <span class="hljs-number">1</span>, ok, no);</span><br><span class="line">            vis[k] = <span class="hljs-number">0</span>;</span><br><span class="line">            flag = <span class="hljs-number">0</span>;</span><br><span class="line">            <span class="hljs-keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">if</span>(flag)&#123;</span><br><span class="line">        <span class="hljs-comment">//这里处理第二种情况，与这个猪前面其中一个猪组成一条抛物线。</span></span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt; k; i++)&#123;</span><br><span class="line">            <span class="hljs-keyword">if</span>(vis[i]) <span class="hljs-keyword">continue</span>;</span><br><span class="line">            <span class="hljs-keyword">if</span>(a[i].x == a[k].x) <span class="hljs-keyword">continue</span>;</span><br><span class="line">            <span class="hljs-comment">//这里计算一下aa和bb，就是抛物线的a和b，拿方程组手推一下就出来了。</span></span><br><span class="line">            <span class="hljs-keyword">double</span> aa = (a[k].y*a[i].x/a[k].x-a[i].y)/(a[i].x*(a[k].x-a[i].x));</span><br><span class="line">            <span class="hljs-keyword">double</span> bb = (a[k].y-aa*a[k].x*a[k].x)/a[k].x;</span><br><span class="line">            <span class="hljs-keyword">if</span>(aa &lt; <span class="hljs-number">0</span>)&#123;</span><br><span class="line">                p[ok+<span class="hljs-number">1</span>].a = aa;</span><br><span class="line">                p[ok+<span class="hljs-number">1</span>].b = bb;</span><br><span class="line">                vis[i] = <span class="hljs-number">1</span>;</span><br><span class="line">                vis[k] = <span class="hljs-number">1</span>;</span><br><span class="line">                dfs(k + <span class="hljs-number">1</span>, ok + <span class="hljs-number">1</span>, no - <span class="hljs-number">1</span>);</span><br><span class="line">                vis[i] = <span class="hljs-number">0</span>;</span><br><span class="line">                vis[k] = <span class="hljs-number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-comment">//最后这里是第三种情况，就是这一个单独组成一个抛物线。。。</span></span><br><span class="line">        dfs(k + <span class="hljs-number">1</span>, ok, no + <span class="hljs-number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">int</span> T;</span><br><span class="line">    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="hljs-keyword">while</span>(T--)&#123;</span><br><span class="line">        ans = <span class="hljs-number">0x3f3f3f3f</span>;</span><br><span class="line">        maxn = <span class="hljs-number">0x3f3f3f3f</span>;</span><br><span class="line">        <span class="hljs-built_in">memset</span>(vis, <span class="hljs-number">0</span>, <span class="hljs-keyword">sizeof</span>(vis));</span><br><span class="line">        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="hljs-keyword">double</span> x, y;</span><br><span class="line">            <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%lf%lf"</span>, &amp;x, &amp;y);</span><br><span class="line">            a[i].x = x;</span><br><span class="line">            a[i].y = y;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">if</span>(m == <span class="hljs-number">1</span>) maxn = <span class="hljs-built_in">ceil</span>(n / <span class="hljs-number">3.0</span> + <span class="hljs-number">1</span>);</span><br><span class="line">        dfs(<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);</span><br><span class="line">        <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d\n"</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://www.luogu.org/problem/P2831&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一个搜索，或者状压，蒟蒻不会状压dp，就写了搜索。。。&lt;/p&gt;
    
    </summary>
    
      <category term="OI" scheme="http://yueyangwu.cn/categories/OI/"/>
    
      <category term="题目" scheme="http://yueyangwu.cn/categories/OI/%E9%A2%98%E7%9B%AE/"/>
    
    
      <category term="搜索" scheme="http://yueyangwu.cn/tags/%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>AtCoder Beginner Contest 135</title>
    <link href="http://yueyangwu.cn/2019/07/27/atcoder-abc135/"/>
    <id>http://yueyangwu.cn/2019/07/27/atcoder-abc135/</id>
    <published>2019-07-27T14:16:59.000Z</published>
    <updated>2019-07-27T14:40:36.865Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://atcoder.jp/contests/abc135" target="_blank" rel="noopener">AtCoder Beginner Contest 135</a></p><p>这应该是我第一次打Atcoder，写个blog留纪念。</p><a id="more"></a><hr><h2 id="A-Harmony"><a href="#A-Harmony" class="headerlink" title="A - Harmony"></a>A - Harmony</h2><ul><li>就是求是否有一个数，在数轴上距离a，b相等，直接代码。<figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line">ll a, b;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%lld%lld"</span>, &amp;a, &amp;b);</span><br><span class="line">    <span class="hljs-keyword">if</span>(<span class="hljs-built_in">abs</span>(a - b) % <span class="hljs-number">2</span> == <span class="hljs-number">1</span>)&#123;</span><br><span class="line">        <span class="hljs-built_in">printf</span>(<span class="hljs-string">"IMPOSSIBLE\n"</span>);</span><br><span class="line">        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%lld\n"</span>, (a + b) / <span class="hljs-number">2</span>);</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="B-0-or-1-Swap"><a href="#B-0-or-1-Swap" class="headerlink" title="B - 0 or 1 Swap"></a>B - 0 or 1 Swap</h2><ul><li>把数列读进来，排个序，和原来的对比一下就行了。<figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">int</span> a[<span class="hljs-number">59</span>], b[<span class="hljs-number">59</span>], n;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d"</span>, &amp;a[i]);</span><br><span class="line">        b[i] = a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">int</span> ans = <span class="hljs-number">0</span>;</span><br><span class="line">    sort(a + <span class="hljs-number">1</span>, a + n + <span class="hljs-number">1</span>);</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        <span class="hljs-keyword">if</span>(a[i] != b[i])&#123;</span><br><span class="line">            ans++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">if</span>(ans &lt;= <span class="hljs-number">2</span>) <span class="hljs-built_in">printf</span>(<span class="hljs-string">"YES\n"</span>);</span><br><span class="line">    <span class="hljs-keyword">else</span> <span class="hljs-built_in">printf</span>(<span class="hljs-string">"NO\n"</span>);</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="C-City-Savers"><a href="#C-City-Savers" class="headerlink" title="C - City Savers"></a>C - City Savers</h2><ul><li>额，这道题一开始我错了一次，但是我也不知道哪错了。。。好像是贪心没考虑清楚？我一开始枚举的下面那个数组，后来改成上面的就A了。貌似是因为得优先把上一个剩下的用完？<figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">int</span> n;</span><br><span class="line">ll a[<span class="hljs-number">100009</span>], b[<span class="hljs-number">100009</span>];</span><br><span class="line">ll ans;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n + <span class="hljs-number">1</span>; i++)&#123;</span><br><span class="line">        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%lld"</span>, &amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%lld"</span>, &amp;b[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n + <span class="hljs-number">1</span>; i++)&#123;</span><br><span class="line">        <span class="hljs-keyword">if</span>(b[i - <span class="hljs-number">1</span>] &gt; <span class="hljs-number">0</span> &amp;&amp; a[i] &gt; <span class="hljs-number">0</span>)&#123;</span><br><span class="line">            <span class="hljs-keyword">int</span> k = min(a[i], b[i - <span class="hljs-number">1</span>]);</span><br><span class="line">            ans += k;</span><br><span class="line">            a[i] -= k;</span><br><span class="line">            b[i - <span class="hljs-number">1</span>] -= k;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">if</span>(b[i] &gt; <span class="hljs-number">0</span> &amp;&amp; a[i] &gt; <span class="hljs-number">0</span>)&#123;</span><br><span class="line">            <span class="hljs-keyword">int</span> k = min(a[i], b[i]);</span><br><span class="line">            ans += k;</span><br><span class="line">            a[i] -= k;</span><br><span class="line">            b[i] -= k;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%lld\n"</span>, ans);</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="D-Digits-Parade"><a href="#D-Digits-Parade" class="headerlink" title="D - Digits Parade"></a>D - Digits Parade</h2><ul><li>这个是个dp，还是竹神提醒了一下状态，感觉以前做过这样的题，应该是一个类型的。</li><li>$f(i,j)$表示前i个组成的数模13余j的种类数，然后就可以转移，当第i个是一个确定的数时，可以直接枚举上一个位置的余数，然后因为到这位以后相当于上一位乘了10，所以上一位的余数*10再模13再加这一位再模13就是要转移的对象，同理如果这一位是一个问号，只需要枚举这一位是从0到9的情况即可。具体不太清楚的看代码。<figure class="highlight cpp hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;</span><br><span class="line"><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> ll;</span><br><span class="line">ll mod = <span class="hljs-number">1e9</span> + <span class="hljs-number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">string</span> s;</span><br><span class="line"><span class="hljs-keyword">int</span> n, a[<span class="hljs-number">100009</span>];</span><br><span class="line">ll f[<span class="hljs-number">100009</span>][<span class="hljs-number">20</span>];</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;</span><br><span class="line">    <span class="hljs-built_in">cin</span> &gt;&gt; s;</span><br><span class="line">    n = s.length();</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        a[i] = (s[i - <span class="hljs-number">1</span>] == <span class="hljs-string">'?'</span> ? <span class="hljs-number">-1</span> : s[i - <span class="hljs-number">1</span>] - <span class="hljs-string">'0'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">if</span>(a[<span class="hljs-number">1</span>] == <span class="hljs-number">-1</span>) <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">9</span>; i++) f[<span class="hljs-number">1</span>][i] = <span class="hljs-number">1</span>;</span><br><span class="line">    <span class="hljs-keyword">else</span> f[<span class="hljs-number">1</span>][a[<span class="hljs-number">1</span>]] = <span class="hljs-number">1</span>;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">2</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        <span class="hljs-keyword">if</span>(a[i] == <span class="hljs-number">-1</span>)&#123;</span><br><span class="line">            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt;= <span class="hljs-number">9</span>; j++)&#123;</span><br><span class="line">                <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> k = <span class="hljs-number">0</span>; k &lt;= <span class="hljs-number">12</span>; k++)&#123;</span><br><span class="line">                    (f[i][(((k*<span class="hljs-number">10</span>)%<span class="hljs-number">13</span>)+j)%<span class="hljs-number">13</span>] += f[i - <span class="hljs-number">1</span>][k] % mod) %= mod;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="hljs-keyword">else</span>&#123;</span><br><span class="line">            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt;= <span class="hljs-number">12</span>; j++)&#123;</span><br><span class="line">                (f[i][(((j*<span class="hljs-number">10</span>)%<span class="hljs-number">13</span>)+a[i])%<span class="hljs-number">13</span>] += f[i - <span class="hljs-number">1</span>][j] % mod) %= mod;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%lld\n"</span>, f[n][<span class="hljs-number">5</span>] % mod);</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://atcoder.jp/contests/abc135&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;AtCoder Beginner Contest 135&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这应该是我第一次打Atcoder，写个blog留纪念。&lt;/p&gt;
    
    </summary>
    
      <category term="Contest" scheme="http://yueyangwu.cn/categories/Contest/"/>
    
    
  </entry>
  
  <entry>
    <title>luogu-P2467-地精部落</title>
    <link href="http://yueyangwu.cn/2019/07/27/luogu-P2467-%E5%9C%B0%E7%B2%BE%E9%83%A8%E8%90%BD/"/>
    <id>http://yueyangwu.cn/2019/07/27/luogu-P2467-地精部落/</id>
    <published>2019-07-27T11:36:18.000Z</published>
    <updated>2019-07-27T11:36:18.919Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
</feed>
